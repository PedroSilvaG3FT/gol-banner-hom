{
    "pipes": [],
    "interfaces": [
        {
            "name": "ICheckboxAdditional",
            "id": "interface-ICheckboxAdditional-53bfd6dda093b1516acdb0a190efc665028526ba8720f6452c07aa89b65a9b5a2566e23f81842ff16c10c4e645bd318834c5857cc34fc87865483cc5a7fceeb8",
            "file": "src/app/modules/@core/components/_form-generator/app-form-generator.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\nimport { IFormOption } from '../../interfaces/app-form.interface';\nimport { FileUploadType } from '../../types/file-upload.type';\nimport { InputType } from '../../types/input.type';\nimport { ModelControlType } from '../../types/model-control.type';\nimport { FormGeneratorFieldType } from './field-generator.directive';\n\nexport interface ICheckboxAdditional {\n  isToggle: boolean;\n}\nexport interface ITextEditorAdditional {\n  config: AngularEditorConfig;\n}\nexport interface IFileUploadAdditional {\n  maxFiles: number;\n  limitErrorMessage: string;\n  fileTypes: FileUploadType[];\n}\nexport interface IDatePickerAdditional {\n  isDatepickerRange: boolean;\n}\n\nexport interface ISliderAdditional {\n  min: number;\n  max: number;\n  step: number;\n  range: boolean;\n  showTickMarks: boolean;\n}\n\nexport interface IImageCropperAdditional {\n  scale: number;\n  imageURL: string;\n  height: string;\n  aspectRatio: number;\n  background: string;\n  cropperMinWidth: number;\n  buttonText: string;\n  rounded: boolean;\n  onlyScaleDown: boolean;\n  maintainAspectRatio: boolean;\n}\nexport interface IFormGeneratorFieldAdditional {\n  slider: Partial<ISliderAdditional>;\n  checkbox: Partial<ICheckboxAdditional>;\n  textEditor: Partial<ITextEditorAdditional>;\n  fileUpload: Partial<IFileUploadAdditional>;\n  datepicker: Partial<IDatePickerAdditional>;\n  imageCropper: Partial<IImageCropperAdditional>;\n\n  className: string;\n  placeholder: string;\n  inputType: InputType;\n  options: IFormOption[];\n}\n\nexport interface IFormGeneratorField<FieldKeyType> {\n  label: string;\n  name: FieldKeyType;\n  type: FormGeneratorFieldType;\n  initialValue?: ModelControlType;\n  additional?: Partial<IFormGeneratorFieldAdditional>;\n  width?: string;\n  validators?: ((\n    control: AbstractControl<any, any>\n  ) => ValidationErrors | null)[];\n}\n",
            "properties": [
                {
                    "name": "isToggle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IDatePickerAdditional",
            "id": "interface-IDatePickerAdditional-53bfd6dda093b1516acdb0a190efc665028526ba8720f6452c07aa89b65a9b5a2566e23f81842ff16c10c4e645bd318834c5857cc34fc87865483cc5a7fceeb8",
            "file": "src/app/modules/@core/components/_form-generator/app-form-generator.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\nimport { IFormOption } from '../../interfaces/app-form.interface';\nimport { FileUploadType } from '../../types/file-upload.type';\nimport { InputType } from '../../types/input.type';\nimport { ModelControlType } from '../../types/model-control.type';\nimport { FormGeneratorFieldType } from './field-generator.directive';\n\nexport interface ICheckboxAdditional {\n  isToggle: boolean;\n}\nexport interface ITextEditorAdditional {\n  config: AngularEditorConfig;\n}\nexport interface IFileUploadAdditional {\n  maxFiles: number;\n  limitErrorMessage: string;\n  fileTypes: FileUploadType[];\n}\nexport interface IDatePickerAdditional {\n  isDatepickerRange: boolean;\n}\n\nexport interface ISliderAdditional {\n  min: number;\n  max: number;\n  step: number;\n  range: boolean;\n  showTickMarks: boolean;\n}\n\nexport interface IImageCropperAdditional {\n  scale: number;\n  imageURL: string;\n  height: string;\n  aspectRatio: number;\n  background: string;\n  cropperMinWidth: number;\n  buttonText: string;\n  rounded: boolean;\n  onlyScaleDown: boolean;\n  maintainAspectRatio: boolean;\n}\nexport interface IFormGeneratorFieldAdditional {\n  slider: Partial<ISliderAdditional>;\n  checkbox: Partial<ICheckboxAdditional>;\n  textEditor: Partial<ITextEditorAdditional>;\n  fileUpload: Partial<IFileUploadAdditional>;\n  datepicker: Partial<IDatePickerAdditional>;\n  imageCropper: Partial<IImageCropperAdditional>;\n\n  className: string;\n  placeholder: string;\n  inputType: InputType;\n  options: IFormOption[];\n}\n\nexport interface IFormGeneratorField<FieldKeyType> {\n  label: string;\n  name: FieldKeyType;\n  type: FormGeneratorFieldType;\n  initialValue?: ModelControlType;\n  additional?: Partial<IFormGeneratorFieldAdditional>;\n  width?: string;\n  validators?: ((\n    control: AbstractControl<any, any>\n  ) => ValidationErrors | null)[];\n}\n",
            "properties": [
                {
                    "name": "isDatepickerRange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IDocAuthenticationCredentials",
            "id": "interface-IDocAuthenticationCredentials-77cb51d00439f85e061153ce10154fa6ef4a2f578a7ab66409b780aeaf9a77cb29a019d0de50f5adae80e2707226a239e3dcdc387c24fdf2c186bef5e8a04ded",
            "file": "src/app/modules/documentation/interfaces/doc-authentication.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IDocAuthenticationCredentials {\n  email: string;\n  password: string;\n}\n\nexport interface IDocAuthenticationSignUp {\n  id?: string | number; // firebase | supabase item identifier\n  uid?: string; // firebase auth user uuid\n  age: number;\n  name: string;\n  email: string;\n  password: string;\n  stripeCustomerId: string;\n}\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IDocAuthenticationSignUp",
            "id": "interface-IDocAuthenticationSignUp-77cb51d00439f85e061153ce10154fa6ef4a2f578a7ab66409b780aeaf9a77cb29a019d0de50f5adae80e2707226a239e3dcdc387c24fdf2c186bef5e8a04ded",
            "file": "src/app/modules/documentation/interfaces/doc-authentication.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IDocAuthenticationCredentials {\n  email: string;\n  password: string;\n}\n\nexport interface IDocAuthenticationSignUp {\n  id?: string | number; // firebase | supabase item identifier\n  uid?: string; // firebase auth user uuid\n  age: number;\n  name: string;\n  email: string;\n  password: string;\n  stripeCustomerId: string;\n}\n",
            "properties": [
                {
                    "name": "age",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "stripeCustomerId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "uid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IDocDocumentDatabase",
            "id": "interface-IDocDocumentDatabase-607f329ab404ecbd89d3c76a21ed6e81fc952168096ef6deade044ca86ca653894b606e5990950ae7a3224465f4abd4ca78bd908355d1cd3080d55f97652f5a1",
            "file": "src/app/modules/documentation/interfaces/doc-document-database.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IDocDocumentDatabase {\n  id?: number | string;\n  age: number;\n  name: string;\n  email: string;\n}\n",
            "properties": [
                {
                    "name": "age",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | string",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IFileUploadAdditional",
            "id": "interface-IFileUploadAdditional-53bfd6dda093b1516acdb0a190efc665028526ba8720f6452c07aa89b65a9b5a2566e23f81842ff16c10c4e645bd318834c5857cc34fc87865483cc5a7fceeb8",
            "file": "src/app/modules/@core/components/_form-generator/app-form-generator.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\nimport { IFormOption } from '../../interfaces/app-form.interface';\nimport { FileUploadType } from '../../types/file-upload.type';\nimport { InputType } from '../../types/input.type';\nimport { ModelControlType } from '../../types/model-control.type';\nimport { FormGeneratorFieldType } from './field-generator.directive';\n\nexport interface ICheckboxAdditional {\n  isToggle: boolean;\n}\nexport interface ITextEditorAdditional {\n  config: AngularEditorConfig;\n}\nexport interface IFileUploadAdditional {\n  maxFiles: number;\n  limitErrorMessage: string;\n  fileTypes: FileUploadType[];\n}\nexport interface IDatePickerAdditional {\n  isDatepickerRange: boolean;\n}\n\nexport interface ISliderAdditional {\n  min: number;\n  max: number;\n  step: number;\n  range: boolean;\n  showTickMarks: boolean;\n}\n\nexport interface IImageCropperAdditional {\n  scale: number;\n  imageURL: string;\n  height: string;\n  aspectRatio: number;\n  background: string;\n  cropperMinWidth: number;\n  buttonText: string;\n  rounded: boolean;\n  onlyScaleDown: boolean;\n  maintainAspectRatio: boolean;\n}\nexport interface IFormGeneratorFieldAdditional {\n  slider: Partial<ISliderAdditional>;\n  checkbox: Partial<ICheckboxAdditional>;\n  textEditor: Partial<ITextEditorAdditional>;\n  fileUpload: Partial<IFileUploadAdditional>;\n  datepicker: Partial<IDatePickerAdditional>;\n  imageCropper: Partial<IImageCropperAdditional>;\n\n  className: string;\n  placeholder: string;\n  inputType: InputType;\n  options: IFormOption[];\n}\n\nexport interface IFormGeneratorField<FieldKeyType> {\n  label: string;\n  name: FieldKeyType;\n  type: FormGeneratorFieldType;\n  initialValue?: ModelControlType;\n  additional?: Partial<IFormGeneratorFieldAdditional>;\n  width?: string;\n  validators?: ((\n    control: AbstractControl<any, any>\n  ) => ValidationErrors | null)[];\n}\n",
            "properties": [
                {
                    "name": "fileTypes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FileUploadType[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "limitErrorMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "maxFiles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IFirebaseAuthenticationCredentials",
            "id": "interface-IFirebaseAuthenticationCredentials-40319e3a000ff0386855fdba0b4bcbb5946b0ce68e3516a29c478bfcb6f10720c7c6c10e438079f88bc551926fca74e248318c07baf72908ccfe37f747635f0b",
            "file": "src/app/modules/@core/firebase/@interfaces/firebase-authentication.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IFirebaseAuthenticationCredentials {\n  email: string;\n  password: string;\n}\n\nexport interface IFirebaseAuthenticationSignUp {\n  id?: string | number;\n  uid?: string;\n  age: number;\n  name: string;\n  email: string;\n  password: string;\n\n  stripeCustomerId: string; // unessesary\n}\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IFirebaseAuthenticationSignUp",
            "id": "interface-IFirebaseAuthenticationSignUp-40319e3a000ff0386855fdba0b4bcbb5946b0ce68e3516a29c478bfcb6f10720c7c6c10e438079f88bc551926fca74e248318c07baf72908ccfe37f747635f0b",
            "file": "src/app/modules/@core/firebase/@interfaces/firebase-authentication.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IFirebaseAuthenticationCredentials {\n  email: string;\n  password: string;\n}\n\nexport interface IFirebaseAuthenticationSignUp {\n  id?: string | number;\n  uid?: string;\n  age: number;\n  name: string;\n  email: string;\n  password: string;\n\n  stripeCustomerId: string; // unessesary\n}\n",
            "properties": [
                {
                    "name": "age",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "stripeCustomerId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "uid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IFormGeneratorExample",
            "id": "interface-IFormGeneratorExample-ef4b7a5923c98344374c82f82ae29ec63685ad941e61a3044b00bb7f731f643f976780eac17a6600a1fb5fe0d4501ea39427774ec17ac5860048c67a097ce742",
            "file": "src/app/modules/documentation/pages/features/form-generator/form-generator.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { JsonPipe } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { AppFormGeneratorComponent } from '../../../../@core/components/_form-generator/app-form-generator/app-form-generator.component';\nimport { FormGeneratorService } from '../../../../@core/components/_form-generator/form-generator.service';\nimport { IFormOption } from '../../../../@core/interfaces/app-form.interface';\nimport { DatePickerRangeValue } from '../../../../@core/types/datepicker.type';\nimport { SliderRangeValue } from '../../../../@core/types/slider.type';\nimport { TerminalWindowComponent } from '../../../components/terminal-window/terminal-window.component';\n\n@Component({\n  standalone: true,\n  selector: 'doc-form-generator',\n  styleUrl: './form-generator.component.scss',\n  templateUrl: './form-generator.component.html',\n  imports: [JsonPipe, AppFormGeneratorComponent, TerminalWindowComponent],\n})\nexport class FormGeneratorComponent {\n  public defaultOptions: IFormOption[] = [\n    { label: 'Option 1', value: 1 },\n    { label: 'Option 2', value: 2 },\n  ];\n\n  private readonly fieldWidth: string = 'calc(50% - 12px)';\n  public formValue: IFormGeneratorExample = {} as IFormGeneratorExample;\n  public form = this.formGeneratorService.init<IFormGeneratorExample>([\n    [\n      {\n        name: 'email',\n        type: 'input',\n        label: 'email',\n        width: this.fieldWidth,\n        validators: [],\n        additional: { inputType: `email` },\n      },\n      {\n        type: 'input',\n        name: 'password',\n        label: 'Password',\n        width: this.fieldWidth,\n        validators: [Validators.required],\n        additional: { inputType: `password` },\n      },\n    ],\n    [\n      {\n        name: 'name',\n        type: 'input',\n        label: 'Name',\n        width: this.fieldWidth,\n        validators: [Validators.required],\n      },\n      {\n        name: 'age',\n        label: 'Age',\n        type: 'input',\n        width: this.fieldWidth,\n        additional: { inputType: `number` },\n      },\n    ],\n    [\n      {\n        name: 'select',\n        type: 'select',\n        label: 'Select',\n        width: this.fieldWidth,\n        validators: [Validators.required],\n      },\n\n      {\n        name: 'radio',\n        type: 'radio',\n        label: 'Radio',\n        width: this.fieldWidth,\n        validators: [Validators.required],\n      },\n    ],\n    [\n      {\n        name: 'birthDate',\n        type: 'datepicker',\n        label: 'Birth date',\n        width: this.fieldWidth,\n      },\n      {\n        label: 'Rage',\n        type: 'datepicker',\n        width: this.fieldWidth,\n        name: 'datePickerRange',\n        additional: { datepicker: { isDatepickerRange: true } },\n      },\n    ],\n    [{ type: 'textarea', name: 'description', label: 'Description' }],\n    [{ label: 'Text editor', type: 'text-editor', name: 'textEditor' }],\n    [\n      {\n        name: 'slider',\n        type: 'slider',\n        label: 'Slider',\n        additional: { slider: { min: 0, max: 10, step: 0.5 } },\n      },\n\n      {\n        type: 'slider',\n        name: 'sliderRange',\n        label: 'Slider Range',\n        additional: { slider: { min: 0, max: 10, step: 0.5, range: true } },\n      },\n    ],\n    [\n      {\n        name: 'isAdmin',\n        type: 'checkbox',\n        label: 'Is admin',\n        width: this.fieldWidth,\n        additional: { checkbox: { isToggle: true } },\n      },\n    ],\n    [\n      {\n        name: 'fileUpload',\n        type: 'file-upload',\n        label: 'File upload',\n        additional: {\n          fileUpload: { maxFiles: 3 },\n        },\n      },\n    ],\n    [{ name: 'imageCropper', type: 'image-cropper', label: 'Image Cropper' }],\n  ]);\n\n  constructor(private formGeneratorService: FormGeneratorService) {}\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  public initForm() {\n    this.form.setOptionsField('radio', this.defaultOptions);\n    this.form.setOptionsField('select', this.defaultOptions);\n\n    const initialValue: Partial<IFormGeneratorExample> = {\n      age: 10,\n      radio: 2,\n      select: 2,\n      slider: 5,\n      isAdmin: true,\n      name: 'Initial Name',\n      birthDate: new Date(),\n      password: 'password',\n      email: 'inital@email.com',\n      sliderRange: { min: 4, max: 6 },\n      textEditor: 'Initial Text Editor',\n      description: 'Initial Description',\n      datePickerRange: {\n        end: new Date(2023, 10, 13),\n        start: new Date(2023, 10, 10),\n      },\n    };\n\n    this.form.group.patchValue(initialValue);\n    this.formValue = { ...this.formValue, ...initialValue };\n  }\n\n  public onSubmit(model: IFormGeneratorExample) {\n    alert(JSON.stringify(model));\n  }\n\n  public onValueChange(model: IFormGeneratorExample) {\n    this.formValue = model;\n  }\n}\n\ninterface IFormGeneratorExample {\n  age: number;\n  name: string;\n  email: string;\n  radio: number;\n  slider: number;\n  select: number;\n  fileUpload: any;\n  isAdmin: boolean;\n  password: string;\n  imageCropper: any;\n  textEditor: string;\n  description: string;\n  birthDate: string | Date;\n  sliderRange: SliderRangeValue;\n  datePickerRange: DatePickerRangeValue;\n}\n",
            "properties": [
                {
                    "name": "age",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 175
                },
                {
                    "name": "birthDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | Date",
                    "optional": false,
                    "description": "",
                    "line": 187
                },
                {
                    "name": "datePickerRange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DatePickerRangeValue",
                    "optional": false,
                    "description": "",
                    "line": 189
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 186
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 177
                },
                {
                    "name": "fileUpload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 181
                },
                {
                    "name": "imageCropper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 184
                },
                {
                    "name": "isAdmin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 182
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 176
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 183
                },
                {
                    "name": "radio",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 178
                },
                {
                    "name": "select",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 180
                },
                {
                    "name": "slider",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 179
                },
                {
                    "name": "sliderRange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SliderRangeValue",
                    "optional": false,
                    "description": "",
                    "line": 188
                },
                {
                    "name": "textEditor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 185
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IFormGeneratorField",
            "id": "interface-IFormGeneratorField-53bfd6dda093b1516acdb0a190efc665028526ba8720f6452c07aa89b65a9b5a2566e23f81842ff16c10c4e645bd318834c5857cc34fc87865483cc5a7fceeb8",
            "file": "src/app/modules/@core/components/_form-generator/app-form-generator.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\nimport { IFormOption } from '../../interfaces/app-form.interface';\nimport { FileUploadType } from '../../types/file-upload.type';\nimport { InputType } from '../../types/input.type';\nimport { ModelControlType } from '../../types/model-control.type';\nimport { FormGeneratorFieldType } from './field-generator.directive';\n\nexport interface ICheckboxAdditional {\n  isToggle: boolean;\n}\nexport interface ITextEditorAdditional {\n  config: AngularEditorConfig;\n}\nexport interface IFileUploadAdditional {\n  maxFiles: number;\n  limitErrorMessage: string;\n  fileTypes: FileUploadType[];\n}\nexport interface IDatePickerAdditional {\n  isDatepickerRange: boolean;\n}\n\nexport interface ISliderAdditional {\n  min: number;\n  max: number;\n  step: number;\n  range: boolean;\n  showTickMarks: boolean;\n}\n\nexport interface IImageCropperAdditional {\n  scale: number;\n  imageURL: string;\n  height: string;\n  aspectRatio: number;\n  background: string;\n  cropperMinWidth: number;\n  buttonText: string;\n  rounded: boolean;\n  onlyScaleDown: boolean;\n  maintainAspectRatio: boolean;\n}\nexport interface IFormGeneratorFieldAdditional {\n  slider: Partial<ISliderAdditional>;\n  checkbox: Partial<ICheckboxAdditional>;\n  textEditor: Partial<ITextEditorAdditional>;\n  fileUpload: Partial<IFileUploadAdditional>;\n  datepicker: Partial<IDatePickerAdditional>;\n  imageCropper: Partial<IImageCropperAdditional>;\n\n  className: string;\n  placeholder: string;\n  inputType: InputType;\n  options: IFormOption[];\n}\n\nexport interface IFormGeneratorField<FieldKeyType> {\n  label: string;\n  name: FieldKeyType;\n  type: FormGeneratorFieldType;\n  initialValue?: ModelControlType;\n  additional?: Partial<IFormGeneratorFieldAdditional>;\n  width?: string;\n  validators?: ((\n    control: AbstractControl<any, any>\n  ) => ValidationErrors | null)[];\n}\n",
            "properties": [
                {
                    "name": "additional",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<IFormGeneratorFieldAdditional>",
                    "optional": true,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelControlType",
                    "optional": true,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FieldKeyType",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGeneratorFieldType",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "validators",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "(function)[]",
                    "optional": true,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 64
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IFormGeneratorFieldAdditional",
            "id": "interface-IFormGeneratorFieldAdditional-53bfd6dda093b1516acdb0a190efc665028526ba8720f6452c07aa89b65a9b5a2566e23f81842ff16c10c4e645bd318834c5857cc34fc87865483cc5a7fceeb8",
            "file": "src/app/modules/@core/components/_form-generator/app-form-generator.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\nimport { IFormOption } from '../../interfaces/app-form.interface';\nimport { FileUploadType } from '../../types/file-upload.type';\nimport { InputType } from '../../types/input.type';\nimport { ModelControlType } from '../../types/model-control.type';\nimport { FormGeneratorFieldType } from './field-generator.directive';\n\nexport interface ICheckboxAdditional {\n  isToggle: boolean;\n}\nexport interface ITextEditorAdditional {\n  config: AngularEditorConfig;\n}\nexport interface IFileUploadAdditional {\n  maxFiles: number;\n  limitErrorMessage: string;\n  fileTypes: FileUploadType[];\n}\nexport interface IDatePickerAdditional {\n  isDatepickerRange: boolean;\n}\n\nexport interface ISliderAdditional {\n  min: number;\n  max: number;\n  step: number;\n  range: boolean;\n  showTickMarks: boolean;\n}\n\nexport interface IImageCropperAdditional {\n  scale: number;\n  imageURL: string;\n  height: string;\n  aspectRatio: number;\n  background: string;\n  cropperMinWidth: number;\n  buttonText: string;\n  rounded: boolean;\n  onlyScaleDown: boolean;\n  maintainAspectRatio: boolean;\n}\nexport interface IFormGeneratorFieldAdditional {\n  slider: Partial<ISliderAdditional>;\n  checkbox: Partial<ICheckboxAdditional>;\n  textEditor: Partial<ITextEditorAdditional>;\n  fileUpload: Partial<IFileUploadAdditional>;\n  datepicker: Partial<IDatePickerAdditional>;\n  imageCropper: Partial<IImageCropperAdditional>;\n\n  className: string;\n  placeholder: string;\n  inputType: InputType;\n  options: IFormOption[];\n}\n\nexport interface IFormGeneratorField<FieldKeyType> {\n  label: string;\n  name: FieldKeyType;\n  type: FormGeneratorFieldType;\n  initialValue?: ModelControlType;\n  additional?: Partial<IFormGeneratorFieldAdditional>;\n  width?: string;\n  validators?: ((\n    control: AbstractControl<any, any>\n  ) => ValidationErrors | null)[];\n}\n",
            "properties": [
                {
                    "name": "checkbox",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ICheckboxAdditional>",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "className",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "datepicker",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<IDatePickerAdditional>",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "fileUpload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<IFileUploadAdditional>",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "imageCropper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<IImageCropperAdditional>",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "inputType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputType",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IFormOption[]",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "slider",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ISliderAdditional>",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "textEditor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ITextEditorAdditional>",
                    "optional": false,
                    "description": "",
                    "line": 47
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IFormOption",
            "id": "interface-IFormOption-a64fcd0afb413378e8aba5509f005903a8149d9dcabe51fc42262576bc548e76751685cdb1d4e40dae40f433f499f7cccc9c1259f0aaf748e0aea638448433b3",
            "file": "src/app/modules/@core/interfaces/app-form.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ModelControlType } from '../types/model-control.type';\n\nexport interface IFormOption {\n  label: string;\n  value: ModelControlType;\n}\n",
            "properties": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelControlType",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IImageCropperAdditional",
            "id": "interface-IImageCropperAdditional-53bfd6dda093b1516acdb0a190efc665028526ba8720f6452c07aa89b65a9b5a2566e23f81842ff16c10c4e645bd318834c5857cc34fc87865483cc5a7fceeb8",
            "file": "src/app/modules/@core/components/_form-generator/app-form-generator.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\nimport { IFormOption } from '../../interfaces/app-form.interface';\nimport { FileUploadType } from '../../types/file-upload.type';\nimport { InputType } from '../../types/input.type';\nimport { ModelControlType } from '../../types/model-control.type';\nimport { FormGeneratorFieldType } from './field-generator.directive';\n\nexport interface ICheckboxAdditional {\n  isToggle: boolean;\n}\nexport interface ITextEditorAdditional {\n  config: AngularEditorConfig;\n}\nexport interface IFileUploadAdditional {\n  maxFiles: number;\n  limitErrorMessage: string;\n  fileTypes: FileUploadType[];\n}\nexport interface IDatePickerAdditional {\n  isDatepickerRange: boolean;\n}\n\nexport interface ISliderAdditional {\n  min: number;\n  max: number;\n  step: number;\n  range: boolean;\n  showTickMarks: boolean;\n}\n\nexport interface IImageCropperAdditional {\n  scale: number;\n  imageURL: string;\n  height: string;\n  aspectRatio: number;\n  background: string;\n  cropperMinWidth: number;\n  buttonText: string;\n  rounded: boolean;\n  onlyScaleDown: boolean;\n  maintainAspectRatio: boolean;\n}\nexport interface IFormGeneratorFieldAdditional {\n  slider: Partial<ISliderAdditional>;\n  checkbox: Partial<ICheckboxAdditional>;\n  textEditor: Partial<ITextEditorAdditional>;\n  fileUpload: Partial<IFileUploadAdditional>;\n  datepicker: Partial<IDatePickerAdditional>;\n  imageCropper: Partial<IImageCropperAdditional>;\n\n  className: string;\n  placeholder: string;\n  inputType: InputType;\n  options: IFormOption[];\n}\n\nexport interface IFormGeneratorField<FieldKeyType> {\n  label: string;\n  name: FieldKeyType;\n  type: FormGeneratorFieldType;\n  initialValue?: ModelControlType;\n  additional?: Partial<IFormGeneratorFieldAdditional>;\n  width?: string;\n  validators?: ((\n    control: AbstractControl<any, any>\n  ) => ValidationErrors | null)[];\n}\n",
            "properties": [
                {
                    "name": "aspectRatio",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "background",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "buttonText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "cropperMinWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "imageURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "maintainAspectRatio",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "onlyScaleDown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "rounded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "scale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IPagination",
            "id": "interface-IPagination-90e2f8d388f136e5c907d1650dd00f1ee5edbc0151a57e85339a05be22b934906946976288b35b79ce348010948dd8d7ed4b36957c7e686daec4fe553dc8f24a",
            "file": "src/app/modules/@core/interfaces/app-pagination.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IPagination {\n  pageSize: number;\n  pageNumber: number;\n  totalItems: number;\n  pageSizeOptions?: number[];\n}\n",
            "properties": [
                {
                    "name": "pageNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "pageSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "pageSizeOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "totalItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ISliderAdditional",
            "id": "interface-ISliderAdditional-53bfd6dda093b1516acdb0a190efc665028526ba8720f6452c07aa89b65a9b5a2566e23f81842ff16c10c4e645bd318834c5857cc34fc87865483cc5a7fceeb8",
            "file": "src/app/modules/@core/components/_form-generator/app-form-generator.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\nimport { IFormOption } from '../../interfaces/app-form.interface';\nimport { FileUploadType } from '../../types/file-upload.type';\nimport { InputType } from '../../types/input.type';\nimport { ModelControlType } from '../../types/model-control.type';\nimport { FormGeneratorFieldType } from './field-generator.directive';\n\nexport interface ICheckboxAdditional {\n  isToggle: boolean;\n}\nexport interface ITextEditorAdditional {\n  config: AngularEditorConfig;\n}\nexport interface IFileUploadAdditional {\n  maxFiles: number;\n  limitErrorMessage: string;\n  fileTypes: FileUploadType[];\n}\nexport interface IDatePickerAdditional {\n  isDatepickerRange: boolean;\n}\n\nexport interface ISliderAdditional {\n  min: number;\n  max: number;\n  step: number;\n  range: boolean;\n  showTickMarks: boolean;\n}\n\nexport interface IImageCropperAdditional {\n  scale: number;\n  imageURL: string;\n  height: string;\n  aspectRatio: number;\n  background: string;\n  cropperMinWidth: number;\n  buttonText: string;\n  rounded: boolean;\n  onlyScaleDown: boolean;\n  maintainAspectRatio: boolean;\n}\nexport interface IFormGeneratorFieldAdditional {\n  slider: Partial<ISliderAdditional>;\n  checkbox: Partial<ICheckboxAdditional>;\n  textEditor: Partial<ITextEditorAdditional>;\n  fileUpload: Partial<IFileUploadAdditional>;\n  datepicker: Partial<IDatePickerAdditional>;\n  imageCropper: Partial<IImageCropperAdditional>;\n\n  className: string;\n  placeholder: string;\n  inputType: InputType;\n  options: IFormOption[];\n}\n\nexport interface IFormGeneratorField<FieldKeyType> {\n  label: string;\n  name: FieldKeyType;\n  type: FormGeneratorFieldType;\n  initialValue?: ModelControlType;\n  additional?: Partial<IFormGeneratorFieldAdditional>;\n  width?: string;\n  validators?: ((\n    control: AbstractControl<any, any>\n  ) => ValidationErrors | null)[];\n}\n",
            "properties": [
                {
                    "name": "max",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "min",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "range",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "showTickMarks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "step",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IStripeCustmerCreate",
            "id": "interface-IStripeCustmerCreate-aecd40ca499ff19b18637d4209fcda1fb6471989498ad8de27a1a7ea68acfd6b09d965dac0dc9cd8c6a8fc6b57b2ff2f299bfc13367481769928434e4689cab6",
            "file": "src/app/modules/@core/stripe/@interfaces/stripe.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import Stripe from 'stripe';\n\nexport interface IStripeProductLineItem\n  extends Stripe.Checkout.SessionCreateParams.LineItem {}\n\nexport interface IStripeCustomerCreateResponse\n  extends Stripe.Response<Stripe.Customer> {}\n\nexport interface IStripeCustmerCreate extends Stripe.CustomerCreateParams {}\n\nexport interface IStripeCustomer extends Stripe.Response<Stripe.Customer> {}\n\nexport interface IStripeCustomerSubscriptionItem extends Stripe.Subscription {}\nexport interface IStripeCutomerSubscriptions\n  extends Stripe.Response<Stripe.ApiList<IStripeCustomerSubscriptionItem>> {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": [
                "Stripe.CustomerCreateParams"
            ]
        },
        {
            "name": "IStripeCustomer",
            "id": "interface-IStripeCustomer-aecd40ca499ff19b18637d4209fcda1fb6471989498ad8de27a1a7ea68acfd6b09d965dac0dc9cd8c6a8fc6b57b2ff2f299bfc13367481769928434e4689cab6",
            "file": "src/app/modules/@core/stripe/@interfaces/stripe.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import Stripe from 'stripe';\n\nexport interface IStripeProductLineItem\n  extends Stripe.Checkout.SessionCreateParams.LineItem {}\n\nexport interface IStripeCustomerCreateResponse\n  extends Stripe.Response<Stripe.Customer> {}\n\nexport interface IStripeCustmerCreate extends Stripe.CustomerCreateParams {}\n\nexport interface IStripeCustomer extends Stripe.Response<Stripe.Customer> {}\n\nexport interface IStripeCustomerSubscriptionItem extends Stripe.Subscription {}\nexport interface IStripeCutomerSubscriptions\n  extends Stripe.Response<Stripe.ApiList<IStripeCustomerSubscriptionItem>> {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": [
                "Stripe.Response"
            ]
        },
        {
            "name": "IStripeCustomerCreateResponse",
            "id": "interface-IStripeCustomerCreateResponse-aecd40ca499ff19b18637d4209fcda1fb6471989498ad8de27a1a7ea68acfd6b09d965dac0dc9cd8c6a8fc6b57b2ff2f299bfc13367481769928434e4689cab6",
            "file": "src/app/modules/@core/stripe/@interfaces/stripe.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import Stripe from 'stripe';\n\nexport interface IStripeProductLineItem\n  extends Stripe.Checkout.SessionCreateParams.LineItem {}\n\nexport interface IStripeCustomerCreateResponse\n  extends Stripe.Response<Stripe.Customer> {}\n\nexport interface IStripeCustmerCreate extends Stripe.CustomerCreateParams {}\n\nexport interface IStripeCustomer extends Stripe.Response<Stripe.Customer> {}\n\nexport interface IStripeCustomerSubscriptionItem extends Stripe.Subscription {}\nexport interface IStripeCutomerSubscriptions\n  extends Stripe.Response<Stripe.ApiList<IStripeCustomerSubscriptionItem>> {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": [
                "Stripe.Response"
            ]
        },
        {
            "name": "IStripeCustomerSubscriptionItem",
            "id": "interface-IStripeCustomerSubscriptionItem-aecd40ca499ff19b18637d4209fcda1fb6471989498ad8de27a1a7ea68acfd6b09d965dac0dc9cd8c6a8fc6b57b2ff2f299bfc13367481769928434e4689cab6",
            "file": "src/app/modules/@core/stripe/@interfaces/stripe.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import Stripe from 'stripe';\n\nexport interface IStripeProductLineItem\n  extends Stripe.Checkout.SessionCreateParams.LineItem {}\n\nexport interface IStripeCustomerCreateResponse\n  extends Stripe.Response<Stripe.Customer> {}\n\nexport interface IStripeCustmerCreate extends Stripe.CustomerCreateParams {}\n\nexport interface IStripeCustomer extends Stripe.Response<Stripe.Customer> {}\n\nexport interface IStripeCustomerSubscriptionItem extends Stripe.Subscription {}\nexport interface IStripeCutomerSubscriptions\n  extends Stripe.Response<Stripe.ApiList<IStripeCustomerSubscriptionItem>> {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": [
                "Stripe.Subscription"
            ]
        },
        {
            "name": "IStripeCutomerSubscriptions",
            "id": "interface-IStripeCutomerSubscriptions-aecd40ca499ff19b18637d4209fcda1fb6471989498ad8de27a1a7ea68acfd6b09d965dac0dc9cd8c6a8fc6b57b2ff2f299bfc13367481769928434e4689cab6",
            "file": "src/app/modules/@core/stripe/@interfaces/stripe.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import Stripe from 'stripe';\n\nexport interface IStripeProductLineItem\n  extends Stripe.Checkout.SessionCreateParams.LineItem {}\n\nexport interface IStripeCustomerCreateResponse\n  extends Stripe.Response<Stripe.Customer> {}\n\nexport interface IStripeCustmerCreate extends Stripe.CustomerCreateParams {}\n\nexport interface IStripeCustomer extends Stripe.Response<Stripe.Customer> {}\n\nexport interface IStripeCustomerSubscriptionItem extends Stripe.Subscription {}\nexport interface IStripeCutomerSubscriptions\n  extends Stripe.Response<Stripe.ApiList<IStripeCustomerSubscriptionItem>> {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": [
                "Stripe.Response"
            ]
        },
        {
            "name": "IStripeProductLineItem",
            "id": "interface-IStripeProductLineItem-aecd40ca499ff19b18637d4209fcda1fb6471989498ad8de27a1a7ea68acfd6b09d965dac0dc9cd8c6a8fc6b57b2ff2f299bfc13367481769928434e4689cab6",
            "file": "src/app/modules/@core/stripe/@interfaces/stripe.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import Stripe from 'stripe';\n\nexport interface IStripeProductLineItem\n  extends Stripe.Checkout.SessionCreateParams.LineItem {}\n\nexport interface IStripeCustomerCreateResponse\n  extends Stripe.Response<Stripe.Customer> {}\n\nexport interface IStripeCustmerCreate extends Stripe.CustomerCreateParams {}\n\nexport interface IStripeCustomer extends Stripe.Response<Stripe.Customer> {}\n\nexport interface IStripeCustomerSubscriptionItem extends Stripe.Subscription {}\nexport interface IStripeCutomerSubscriptions\n  extends Stripe.Response<Stripe.ApiList<IStripeCustomerSubscriptionItem>> {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": [
                "Stripe.Checkout.SessionCreateParams.LineItem"
            ]
        },
        {
            "name": "ISupabaseBucketCreateOptions",
            "id": "interface-ISupabaseBucketCreateOptions-9fa78e94aa06e847a6b8f07b6e80c1509cb0c591c91c7b4be866004dbf501c1afff983af247a0632c8f4de74d85e27dfbce4b23b4f5e0ea87bb7188913a59aa9",
            "file": "src/app/modules/@core/supabase/@interfaces/supabase-bucket.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ISupabaseBucketCreateOptions {\n  public: boolean;\n  allowedMimeTypes?: string[] | null;\n  fileSizeLimit?: number | string | null;\n}\n",
            "properties": [
                {
                    "name": "allowedMimeTypes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[] | null",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "fileSizeLimit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | string | null",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "public",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ISupabaseStorageFile",
            "id": "interface-ISupabaseStorageFile-df6c623b919cd6c47d9e985e59915febe6f24ffb2266906f2b82de39d33583fd81001d18c3896bc34ddaf2363f947666cf086354b7c5f9404a681b28c93f5ea8",
            "file": "src/app/modules/@core/supabase/@interfaces/supabase-storage.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SupabaseStorageSeachSortBy {\n  column?: string;\n  order?: string;\n}\n\nexport interface ISupabaseStorageSeachOptions {\n  limit?: number;\n  offset?: number;\n  search?: string;\n  sortBy?: SupabaseStorageSeachSortBy;\n}\n\nexport interface ISupabaseStorageUploadResponse {\n  id: string;\n  path: string;\n  fullPath: string;\n}\n\nexport interface ISupabaseStorageUploadOptions {\n  cacheControl?: string;\n  contentType?: string;\n  upsert?: boolean;\n  duplex?: string;\n}\n\nexport interface ISupabaseStorageFileMetadata {\n  eTag: string;\n  size: number;\n  mimetype: string;\n  cacheControl: string;\n  lastModified: string;\n  contentLength: number;\n  httpStatusCode: number;\n}\n\nexport interface ISupabaseStorageFile {\n  id: string;\n  name: string;\n  created_at: string;\n  updated_at: string;\n  last_accessed_at: string;\n}\n",
            "properties": [
                {
                    "name": "created_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "last_accessed_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "updated_at",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ISupabaseStorageFileMetadata",
            "id": "interface-ISupabaseStorageFileMetadata-df6c623b919cd6c47d9e985e59915febe6f24ffb2266906f2b82de39d33583fd81001d18c3896bc34ddaf2363f947666cf086354b7c5f9404a681b28c93f5ea8",
            "file": "src/app/modules/@core/supabase/@interfaces/supabase-storage.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SupabaseStorageSeachSortBy {\n  column?: string;\n  order?: string;\n}\n\nexport interface ISupabaseStorageSeachOptions {\n  limit?: number;\n  offset?: number;\n  search?: string;\n  sortBy?: SupabaseStorageSeachSortBy;\n}\n\nexport interface ISupabaseStorageUploadResponse {\n  id: string;\n  path: string;\n  fullPath: string;\n}\n\nexport interface ISupabaseStorageUploadOptions {\n  cacheControl?: string;\n  contentType?: string;\n  upsert?: boolean;\n  duplex?: string;\n}\n\nexport interface ISupabaseStorageFileMetadata {\n  eTag: string;\n  size: number;\n  mimetype: string;\n  cacheControl: string;\n  lastModified: string;\n  contentLength: number;\n  httpStatusCode: number;\n}\n\nexport interface ISupabaseStorageFile {\n  id: string;\n  name: string;\n  created_at: string;\n  updated_at: string;\n  last_accessed_at: string;\n}\n",
            "properties": [
                {
                    "name": "cacheControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "contentLength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "eTag",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "httpStatusCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "lastModified",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "mimetype",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ISupabaseStorageSeachOptions",
            "id": "interface-ISupabaseStorageSeachOptions-df6c623b919cd6c47d9e985e59915febe6f24ffb2266906f2b82de39d33583fd81001d18c3896bc34ddaf2363f947666cf086354b7c5f9404a681b28c93f5ea8",
            "file": "src/app/modules/@core/supabase/@interfaces/supabase-storage.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SupabaseStorageSeachSortBy {\n  column?: string;\n  order?: string;\n}\n\nexport interface ISupabaseStorageSeachOptions {\n  limit?: number;\n  offset?: number;\n  search?: string;\n  sortBy?: SupabaseStorageSeachSortBy;\n}\n\nexport interface ISupabaseStorageUploadResponse {\n  id: string;\n  path: string;\n  fullPath: string;\n}\n\nexport interface ISupabaseStorageUploadOptions {\n  cacheControl?: string;\n  contentType?: string;\n  upsert?: boolean;\n  duplex?: string;\n}\n\nexport interface ISupabaseStorageFileMetadata {\n  eTag: string;\n  size: number;\n  mimetype: string;\n  cacheControl: string;\n  lastModified: string;\n  contentLength: number;\n  httpStatusCode: number;\n}\n\nexport interface ISupabaseStorageFile {\n  id: string;\n  name: string;\n  created_at: string;\n  updated_at: string;\n  last_accessed_at: string;\n}\n",
            "properties": [
                {
                    "name": "limit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "offset",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "search",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "sortBy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SupabaseStorageSeachSortBy",
                    "optional": true,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ISupabaseStorageUploadOptions",
            "id": "interface-ISupabaseStorageUploadOptions-df6c623b919cd6c47d9e985e59915febe6f24ffb2266906f2b82de39d33583fd81001d18c3896bc34ddaf2363f947666cf086354b7c5f9404a681b28c93f5ea8",
            "file": "src/app/modules/@core/supabase/@interfaces/supabase-storage.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SupabaseStorageSeachSortBy {\n  column?: string;\n  order?: string;\n}\n\nexport interface ISupabaseStorageSeachOptions {\n  limit?: number;\n  offset?: number;\n  search?: string;\n  sortBy?: SupabaseStorageSeachSortBy;\n}\n\nexport interface ISupabaseStorageUploadResponse {\n  id: string;\n  path: string;\n  fullPath: string;\n}\n\nexport interface ISupabaseStorageUploadOptions {\n  cacheControl?: string;\n  contentType?: string;\n  upsert?: boolean;\n  duplex?: string;\n}\n\nexport interface ISupabaseStorageFileMetadata {\n  eTag: string;\n  size: number;\n  mimetype: string;\n  cacheControl: string;\n  lastModified: string;\n  contentLength: number;\n  httpStatusCode: number;\n}\n\nexport interface ISupabaseStorageFile {\n  id: string;\n  name: string;\n  created_at: string;\n  updated_at: string;\n  last_accessed_at: string;\n}\n",
            "properties": [
                {
                    "name": "cacheControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "contentType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "duplex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "upsert",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 22
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ISupabaseStorageUploadResponse",
            "id": "interface-ISupabaseStorageUploadResponse-df6c623b919cd6c47d9e985e59915febe6f24ffb2266906f2b82de39d33583fd81001d18c3896bc34ddaf2363f947666cf086354b7c5f9404a681b28c93f5ea8",
            "file": "src/app/modules/@core/supabase/@interfaces/supabase-storage.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SupabaseStorageSeachSortBy {\n  column?: string;\n  order?: string;\n}\n\nexport interface ISupabaseStorageSeachOptions {\n  limit?: number;\n  offset?: number;\n  search?: string;\n  sortBy?: SupabaseStorageSeachSortBy;\n}\n\nexport interface ISupabaseStorageUploadResponse {\n  id: string;\n  path: string;\n  fullPath: string;\n}\n\nexport interface ISupabaseStorageUploadOptions {\n  cacheControl?: string;\n  contentType?: string;\n  upsert?: boolean;\n  duplex?: string;\n}\n\nexport interface ISupabaseStorageFileMetadata {\n  eTag: string;\n  size: number;\n  mimetype: string;\n  cacheControl: string;\n  lastModified: string;\n  contentLength: number;\n  httpStatusCode: number;\n}\n\nexport interface ISupabaseStorageFile {\n  id: string;\n  name: string;\n  created_at: string;\n  updated_at: string;\n  last_accessed_at: string;\n}\n",
            "properties": [
                {
                    "name": "fullPath",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ITableCell",
            "id": "interface-ITableCell-40d25956d1292299aec4c041baf4b20863eddb31009695f045af768341d39e806371f1ca84a0febed902460a8b5313dda78a29d389250a8470a4358d480191e7",
            "file": "src/app/modules/@core/interfaces/app-table.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ITableCell {\n  def: string;\n  key: string;\n  label: string;\n  sticky?: boolean;\n}\n\nexport interface ITableCellAction<Data> {\n  icon: string;\n  title: string;\n  callback: (item: Data, index: number) => void;\n}\n",
            "properties": [
                {
                    "name": "def",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "sticky",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ITableCellAction",
            "id": "interface-ITableCellAction-40d25956d1292299aec4c041baf4b20863eddb31009695f045af768341d39e806371f1ca84a0febed902460a8b5313dda78a29d389250a8470a4358d480191e7",
            "file": "src/app/modules/@core/interfaces/app-table.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ITableCell {\n  def: string;\n  key: string;\n  label: string;\n  sticky?: boolean;\n}\n\nexport interface ITableCellAction<Data> {\n  icon: string;\n  title: string;\n  callback: (item: Data, index: number) => void;\n}\n",
            "properties": [
                {
                    "name": "callback",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ITextEditorAdditional",
            "id": "interface-ITextEditorAdditional-53bfd6dda093b1516acdb0a190efc665028526ba8720f6452c07aa89b65a9b5a2566e23f81842ff16c10c4e645bd318834c5857cc34fc87865483cc5a7fceeb8",
            "file": "src/app/modules/@core/components/_form-generator/app-form-generator.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\nimport { IFormOption } from '../../interfaces/app-form.interface';\nimport { FileUploadType } from '../../types/file-upload.type';\nimport { InputType } from '../../types/input.type';\nimport { ModelControlType } from '../../types/model-control.type';\nimport { FormGeneratorFieldType } from './field-generator.directive';\n\nexport interface ICheckboxAdditional {\n  isToggle: boolean;\n}\nexport interface ITextEditorAdditional {\n  config: AngularEditorConfig;\n}\nexport interface IFileUploadAdditional {\n  maxFiles: number;\n  limitErrorMessage: string;\n  fileTypes: FileUploadType[];\n}\nexport interface IDatePickerAdditional {\n  isDatepickerRange: boolean;\n}\n\nexport interface ISliderAdditional {\n  min: number;\n  max: number;\n  step: number;\n  range: boolean;\n  showTickMarks: boolean;\n}\n\nexport interface IImageCropperAdditional {\n  scale: number;\n  imageURL: string;\n  height: string;\n  aspectRatio: number;\n  background: string;\n  cropperMinWidth: number;\n  buttonText: string;\n  rounded: boolean;\n  onlyScaleDown: boolean;\n  maintainAspectRatio: boolean;\n}\nexport interface IFormGeneratorFieldAdditional {\n  slider: Partial<ISliderAdditional>;\n  checkbox: Partial<ICheckboxAdditional>;\n  textEditor: Partial<ITextEditorAdditional>;\n  fileUpload: Partial<IFileUploadAdditional>;\n  datepicker: Partial<IDatePickerAdditional>;\n  imageCropper: Partial<IImageCropperAdditional>;\n\n  className: string;\n  placeholder: string;\n  inputType: InputType;\n  options: IFormOption[];\n}\n\nexport interface IFormGeneratorField<FieldKeyType> {\n  label: string;\n  name: FieldKeyType;\n  type: FormGeneratorFieldType;\n  initialValue?: ModelControlType;\n  additional?: Partial<IFormGeneratorFieldAdditional>;\n  width?: string;\n  validators?: ((\n    control: AbstractControl<any, any>\n  ) => ValidationErrors | null)[];\n}\n",
            "properties": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AngularEditorConfig",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "IThemeConfig",
            "id": "interface-IThemeConfig-5f20101d45359bf01d75fa622b10fdfdedd9948b5abbca4c0f3b13fb67e12f170d3b7a9dfbac51f99cdf228fa8ca0ccacf2e8c68dfe2710ac59fff9e03a0f34f",
            "file": "src/app/modules/@core/interfaces/theme.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IThemeConfig {\n  bgPrimary: string;\n  bgSecondary: string;\n  textPrimary: string;\n}\n",
            "properties": [
                {
                    "name": "bgPrimary",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "bgSecondary",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "textPrimary",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "PeriodicElement",
            "id": "interface-PeriodicElement-ff6844f188fc1f7d3b3ddc15139d205756e6307e44cc8cf9b77889e8ec8a48506f990cd07e1693d1afefb78f2c9b0939de30cbd6cfb1de76607175c46cf511eb",
            "file": "src/app/modules/documentation/pages/features/table/table.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Sort } from '@angular/material/sort';\nimport { AppTableComponent } from '../../../../@core/components/app-table/app-table.component';\nimport { filterListPagination } from '../../../../@core/functions/pagination.function';\nimport { IPagination } from '../../../../@core/interfaces/app-pagination.interface';\nimport {\n  ITableCell,\n  ITableCellAction,\n} from '../../../../@core/interfaces/app-table.interface';\nimport { AlertService } from '../../../../@core/services/alert.service';\n\n@Component({\n  standalone: true,\n  selector: 'doc-table',\n  imports: [AppTableComponent],\n  templateUrl: './table.component.html',\n  styleUrl: './table.component.scss',\n})\nexport class TableComponent {\n  public tableData: PeriodicElement[] = [];\n  public pagination: IPagination = {\n    pageSize: 5,\n    pageNumber: 1,\n    totalItems: 20,\n    pageSizeOptions: [5, 10, 20, 50],\n  };\n\n  public tableActions: ITableCellAction<PeriodicElement>[] = [\n    {\n      title: 'Edit',\n      icon: 'iconamoon:edit-fill',\n      callback: (element) => this.handleEdit(element),\n    },\n  ];\n  public tableColumns: ITableCell[] = [\n    { def: 'position', key: 'position', label: 'No.', sticky: true },\n    { def: 'name', key: 'name', label: 'Name' },\n    { def: 'weight', key: 'weight', label: 'Weight' },\n    { def: 'symbol', key: 'symbol', label: 'Symbol' },\n  ];\n\n  constructor(private alertService: AlertService) {}\n\n  ngOnInit() {\n    this.getItems();\n  }\n\n  public getItems() {\n    const { pageNumber, pageSize } = this.pagination;\n    this.tableData = filterListPagination(ELEMENT_DATA, pageNumber, pageSize);\n  }\n\n  public onSortChange(sort: Sort) {\n    console.log('[onSortChange]', sort);\n  }\n\n  public onPaginationChange(pagination: IPagination) {\n    this.pagination = pagination;\n    this.getItems();\n  }\n\n  public handleEdit(item: PeriodicElement) {\n    this.alertService.snackBar.open(item.name, 'close');\n  }\n}\n\nexport interface PeriodicElement {\n  name: string;\n  weight: number;\n  symbol: string;\n  position: number;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\n  { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\n  { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\n  { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\n  { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\n  { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\n  { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\n  { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\n  { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\n  { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\n  { position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na' },\n  { position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg' },\n  { position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al' },\n  { position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si' },\n  { position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P' },\n  { position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S' },\n  { position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl' },\n  { position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar' },\n  { position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K' },\n  { position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca' },\n];\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "symbol",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "weight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "SupabaseStorageSeachSortBy",
            "id": "interface-SupabaseStorageSeachSortBy-df6c623b919cd6c47d9e985e59915febe6f24ffb2266906f2b82de39d33583fd81001d18c3896bc34ddaf2363f947666cf086354b7c5f9404a681b28c93f5ea8",
            "file": "src/app/modules/@core/supabase/@interfaces/supabase-storage.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SupabaseStorageSeachSortBy {\n  column?: string;\n  order?: string;\n}\n\nexport interface ISupabaseStorageSeachOptions {\n  limit?: number;\n  offset?: number;\n  search?: string;\n  sortBy?: SupabaseStorageSeachSortBy;\n}\n\nexport interface ISupabaseStorageUploadResponse {\n  id: string;\n  path: string;\n  fullPath: string;\n}\n\nexport interface ISupabaseStorageUploadOptions {\n  cacheControl?: string;\n  contentType?: string;\n  upsert?: boolean;\n  duplex?: string;\n}\n\nexport interface ISupabaseStorageFileMetadata {\n  eTag: string;\n  size: number;\n  mimetype: string;\n  cacheControl: string;\n  lastModified: string;\n  contentLength: number;\n  httpStatusCode: number;\n}\n\nexport interface ISupabaseStorageFile {\n  id: string;\n  name: string;\n  created_at: string;\n  updated_at: string;\n  last_accessed_at: string;\n}\n",
            "properties": [
                {
                    "name": "column",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "order",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "AlertService",
            "id": "injectable-AlertService-11728fdb4a6088c794af05047c663b81dd0c7d8733bc3526f585d27bd3dd065aaaa8be887ab763ab64c54823f3cd14d102f3e8db5e45ca6a4e113bca4cfb14b2",
            "file": "src/app/modules/@core/services/alert.service.ts",
            "properties": [
                {
                    "name": "snackBar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSnackBar",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({ providedIn: 'root' })\nexport class AlertService {\n  constructor(public snackBar: MatSnackBar) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ClipboardService",
            "id": "injectable-ClipboardService-bd7c82dac3a344c21a610eb5aacf65fafec5557d25aac43378c4cb18c7de67fc86f3e9114092a29d871859eb2f3fe89fec90ce4e8c32f9432e4e5e71e7a94aa5",
            "file": "src/app/modules/@core/services/clipboard.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "copy",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "snackMessage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''"
                        },
                        {
                            "name": "snackDuration",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "50000"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "snackMessage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "snackDuration",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "50000",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { AlertService } from './alert.service';\n\n@Injectable({ providedIn: 'root' })\nexport class ClipboardService {\n  constructor(private alertService: AlertService) {}\n\n  public copy(value: string, snackMessage = '', snackDuration = 50000) {\n    const selBox = document.createElement('textarea');\n    selBox.value = value;\n\n    selBox.style.position = 'fixed';\n    selBox.style.left = '0';\n    selBox.style.top = '0';\n    selBox.style.opacity = '0';\n\n    document.body.appendChild(selBox);\n    selBox.focus();\n    selBox.select();\n    document.execCommand('copy');\n    document.body.removeChild(selBox);\n\n    if (snackMessage)\n      this.alertService.snackBar.open(snackMessage, 'close', {\n        duration: snackDuration,\n      });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "alertService",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "alertService",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "FirebaseAuthenticationService",
            "id": "injectable-FirebaseAuthenticationService-d12db0a7b8f1e2b54316c07862b52f57f32a2903a8df206961cede7efe25e74023e4bdf5b79e5329692f7eb60b984d1b8b0c75e8ab512d4a4e66be7acae21f32",
            "file": "src/app/modules/@core/firebase/firebase-authentication.service.ts",
            "properties": [
                {
                    "name": "auth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Auth",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_connector",
                    "defaultValue": "inject(FirebaseConnectorService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "_helper",
                    "defaultValue": "new FirebaseCollectionHelper()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "$snapshot",
                    "defaultValue": "this.snapshot.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "app",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FirebaseApp",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "collection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CollectionReference<DocumentData>",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "db",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Firestore",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "snapshot",
                    "defaultValue": "new Subject<ListDocumentSnapshot>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                }
            ],
            "methods": [
                {
                    "name": "recoveryPassword",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "signIn",
                    "args": [
                        {
                            "type": "IFirebaseAuthenticationCredentials",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "type": "IFirebaseAuthenticationCredentials",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "signOut",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "signUp",
                    "args": [
                        {
                            "name": "data",
                            "type": "IFirebaseAuthenticationSignUp",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "IFirebaseAuthenticationSignUp",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "payload",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "payload",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "getAll",
                    "args": [
                        {
                            "name": "querys",
                            "type": "QueryFieldFilterConstraint[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "querys",
                            "type": "QueryFieldFilterConstraint[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "[]",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "getByColumn",
                    "args": [
                        {
                            "name": "column",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "column",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "getById",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "getDocumentReference",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "collection",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.collectionName"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "collection",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.collectionName",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "handleMonitoringSnapshot",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 133,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "handlerCreate",
                    "args": [
                        {
                            "name": "payload",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "payload",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "handlerGetAll",
                    "args": [
                        {
                            "name": "querys",
                            "type": "QueryFieldFilterConstraint[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "querys",
                            "type": "QueryFieldFilterConstraint[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "[]",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "handlerGetById",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "collection",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.collectionName"
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "collection",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.collectionName",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "handlerUpdate",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "payload",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 119,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "payload",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "payload",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "payload",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport {\n  Auth,\n  browserSessionPersistence,\n  createUserWithEmailAndPassword,\n  getAuth,\n  sendPasswordResetEmail,\n  setPersistence,\n  signInWithEmailAndPassword,\n  signOut,\n  updateProfile,\n} from 'firebase/auth';\n\nimport {\n  IFirebaseAuthenticationCredentials,\n  IFirebaseAuthenticationSignUp,\n} from './@interfaces/firebase-authentication.interface';\nimport { FirebaseCollectionBase } from './firebase-collection.base';\n\n@Injectable({ providedIn: 'root' })\nexport class FirebaseAuthenticationService extends FirebaseCollectionBase {\n  private auth: Auth;\n\n  constructor() {\n    super('User');\n    this.auth = getAuth();\n  }\n\n  public async signUp(data: IFirebaseAuthenticationSignUp) {\n    try {\n      const response = await createUserWithEmailAndPassword(\n        this.auth,\n        data.email,\n        data.password\n      );\n\n      await this.create<IFirebaseAuthenticationSignUp>({\n        ...data,\n        uid: response.user.uid,\n      });\n\n      if (this.auth.currentUser) {\n        await updateProfile(this.auth.currentUser, {\n          displayName: data.name,\n        });\n      }\n\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  public async signIn({ email, password }: IFirebaseAuthenticationCredentials) {\n    try {\n      await setPersistence(this.auth, browserSessionPersistence);\n\n      const response = await signInWithEmailAndPassword(\n        this.auth,\n        email,\n        password\n      );\n\n      const refreshToken = response.user.refreshToken;\n      const { token: accessToken } = await response.user.getIdTokenResult();\n\n      const data = await this.getByColumn<IFirebaseAuthenticationSignUp>(\n        'uid',\n        response.user.uid\n      );\n\n      const result = {\n        ...response,\n        user: {\n          ...response.user,\n          refreshToken,\n          accessToken,\n          data,\n        },\n      };\n\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  public async recoveryPassword(email: string) {\n    return sendPasswordResetEmail(this.auth, email);\n  }\n\n  public signOut() {\n    return signOut(this.auth);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 22
            },
            "extends": [
                "FirebaseCollectionBase"
            ],
            "type": "injectable"
        },
        {
            "name": "FirebaseConnectorService",
            "id": "injectable-FirebaseConnectorService-503a299e878a4bb789089a11942ab78a274fb1d8b5c81befa9e00eddc394ed71d23a06565accb613a6d509acf4118f1438fc6b08bc4e75bc17106281f0b8121a",
            "file": "src/app/modules/@core/firebase/firebase-connector.service.ts",
            "properties": [
                {
                    "name": "app",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { initializeApp } from 'firebase/app';\nimport { environment } from '../../../../environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class FirebaseConnectorService {\n  public app;\n\n  constructor() {\n    this.app = initializeApp(environment.firebase);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 7
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "FirebaseExampleService",
            "id": "injectable-FirebaseExampleService-5c076797da4fccc3067d91d65894cfcd541a0d8044e5996e3bfb9096ec332539398bafd6fbc7a32258df86b64ab106c4aadce22fee778be47e61385ebfa51dd7",
            "file": "src/app/modules/documentation/services/firebase-example.service.ts",
            "properties": [
                {
                    "name": "_connector",
                    "defaultValue": "inject(FirebaseConnectorService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "_helper",
                    "defaultValue": "new FirebaseCollectionHelper()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "$snapshot",
                    "defaultValue": "this.snapshot.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "app",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FirebaseApp",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "collection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CollectionReference<DocumentData>",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "db",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Firestore",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "snapshot",
                    "defaultValue": "new Subject<ListDocumentSnapshot>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                }
            ],
            "methods": [
                {
                    "name": "getAll",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<Data>",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        164
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "payload",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "payload",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "getByColumn",
                    "args": [
                        {
                            "name": "column",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "column",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "getById",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "getDocumentReference",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "collection",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.collectionName"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "collection",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.collectionName",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "handleMonitoringSnapshot",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 133,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "handlerCreate",
                    "args": [
                        {
                            "name": "payload",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "payload",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "handlerGetAll",
                    "args": [
                        {
                            "name": "querys",
                            "type": "QueryFieldFilterConstraint[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "querys",
                            "type": "QueryFieldFilterConstraint[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "[]",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "handlerGetById",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "collection",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.collectionName"
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "collection",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.collectionName",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "handlerUpdate",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "payload",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 119,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "payload",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "payload",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "payload",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "FirebaseCollectionBase"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { QueryFieldFilterConstraint } from 'firebase/firestore';\nimport { FirebaseCollectionBase } from '../../@core/firebase/firebase-collection.base';\n\n@Injectable({ providedIn: 'root' })\nexport class FirebaseExampleService extends FirebaseCollectionBase {\n  constructor() {\n    super('CollectionExample');\n  }\n\n  public override getAll<Data>(): Promise<Data> {\n    const filter: QueryFieldFilterConstraint[] = [\n      // where('example_key', '==', 'example_value'),\n    ];\n\n    return this.handlerGetAll(filter);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "extends": [
                "FirebaseCollectionBase"
            ],
            "type": "injectable"
        },
        {
            "name": "FirebaseStorageService",
            "id": "injectable-FirebaseStorageService-b8a77cd24b5fce868034c37b155b5adf6eab9a9887b945c92e2b2aed4523ffbd2e8e8424069aa6717dc9dc55af596cc4a7b67665866f4248c49ee33c9f31fde2",
            "file": "src/app/modules/@core/firebase/firebase-storage.service.ts",
            "properties": [
                {
                    "name": "storage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FirebaseStorage",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [
                {
                    "name": "#init",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "download",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "preventAutoDownload",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "preventAutoDownload",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAll",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "maxResults",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "100"
                        },
                        {
                            "name": "pageToken",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "maxResults",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "100",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "pageToken",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "upload",
                    "args": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { getApp, initializeApp } from 'firebase/app';\nimport {\n  FirebaseStorage,\n  deleteObject,\n  getDownloadURL,\n  getStorage,\n  list,\n  ref,\n  uploadBytesResumable,\n} from 'firebase/storage';\nimport { environment } from '../../../../environments/environment';\nimport { generateUUID } from '../functions/uuid.function';\nimport { DownloadUtil } from '../util/download.util';\nimport { FIREBASE_STORAGE_ERROR_LIST } from './@constans/firebase-error.constant';\n\n@Injectable({ providedIn: 'root' })\nexport class FirebaseStorageService {\n  public storage!: FirebaseStorage;\n\n  constructor() {\n    this.#init();\n  }\n\n  #init() {\n    initializeApp(environment.firebase);\n    this.storage = getStorage(getApp());\n  }\n\n  public getAll(\n    path: string,\n    maxResults: number = 100,\n    pageToken: string = ''\n  ) {\n    return list(ref(this.storage, path), {\n      pageToken,\n      maxResults: maxResults || 100,\n    });\n  }\n\n  public upload(file: File, path: string = '') {\n    const extesion = file.type.split('/').pop();\n    const name = `${generateUUID()}.${extesion}`;\n\n    const fullPath = !!path ? `${path}/${name}` : name;\n    const storageReference = ref(this.storage, fullPath);\n    return uploadBytesResumable(storageReference, file);\n  }\n\n  public delete(path: string) {\n    const reference = ref(this.storage, path);\n    return deleteObject(reference);\n  }\n\n  public async download(path: string, preventAutoDownload: boolean = false) {\n    try {\n      const reference = ref(this.storage, path);\n      const url = await getDownloadURL(reference);\n\n      if (!preventAutoDownload)\n        DownloadUtil.processBlobByUrl(url, reference.name);\n\n      return url;\n    } catch (error: any) {\n      const defaultErrorMessage = `Unknown error occurred, inspect the server response`;\n\n      const item = FIREBASE_STORAGE_ERROR_LIST.find(\n        (value) => value.key === error.code\n      );\n\n      const message = item?.message || defaultErrorMessage;\n\n      throw { message };\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "FormGeneratorService",
            "id": "injectable-FormGeneratorService-68b9c5d48d21b5f8403ca8af7796001c3c5199af379db511134224d30f1cb53d4f4b84abd999d2add80d299abda1b0e237d97462cc6688ef9605f76df3054255",
            "file": "src/app/modules/@core/components/_form-generator/form-generator.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "init",
                    "args": [
                        {
                            "name": "fields",
                            "type": "IFormGeneratorField[][]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ fields: {}; group: any; setOptionsField: (fieldName: keyof Data, options: {}) => void; }",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "fields",
                            "type": "IFormGeneratorField[][]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initGroup",
                    "args": [
                        {
                            "name": "fields",
                            "type": "IFormGeneratorField[][]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fields",
                            "type": "IFormGeneratorField[][]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "looperHandler",
                    "args": [
                        {
                            "name": "fields",
                            "type": "IFormGeneratorField[][]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "fieldName",
                            "type": "KeyType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "callback",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "field",
                                    "type": "IFormGeneratorField<Data>",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [
                        "Data",
                        "KeyType"
                    ],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fields",
                            "type": "IFormGeneratorField[][]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "fieldName",
                            "type": "KeyType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "callback",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "field",
                                    "type": "IFormGeneratorField<Data>",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setOptionsField",
                    "args": [
                        {
                            "name": "fields",
                            "type": "IFormGeneratorField[][]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "fieldName",
                            "type": "FieldKeyType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "IFormOption[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [
                        "Data",
                        "FieldKeyType"
                    ],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "fields",
                            "type": "IFormGeneratorField[][]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "fieldName",
                            "type": "FieldKeyType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "IFormOption[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { IFormOption } from '../../interfaces/app-form.interface';\nimport { IFormGeneratorField } from './app-form-generator.interface';\n\n@Injectable({ providedIn: 'root' })\nexport class FormGeneratorService {\n  constructor(private formBuilder: FormBuilder) {}\n\n  public init<Data extends {}>(fields: IFormGeneratorField<keyof Data>[][]) {\n    type FieldKeyType = keyof Data;\n\n    return {\n      fields,\n      group: this.initGroup<Data>(fields),\n      setOptionsField: (fieldName: FieldKeyType, options: IFormOption[]) =>\n        this.setOptionsField<Data, FieldKeyType>(fields, fieldName, options),\n    };\n  }\n\n  private initGroup<Data extends {}>(\n    fields: IFormGeneratorField<keyof Data>[][]\n  ) {\n    const group = fields.flat().reduce((initial, field) => {\n      const validators = field.validators || [];\n      return { ...initial, [field.name]: [field.initialValue, ...validators] };\n    }, {});\n\n    return this.formBuilder.group<Data>(group as Data);\n  }\n\n  private looperHandler<Data, KeyType>(\n    fields: IFormGeneratorField<keyof Data>[][],\n    fieldName: KeyType,\n    callback: (field: IFormGeneratorField<keyof Data>) => void\n  ) {\n    fields.forEach((row) =>\n      row.forEach((field) => {\n        if (field.name === fieldName) callback(field);\n      })\n    );\n  }\n\n  private setOptionsField<Data, FieldKeyType>(\n    fields: IFormGeneratorField<keyof Data>[][],\n    fieldName: FieldKeyType,\n    options: IFormOption[]\n  ) {\n    this.looperHandler<Data, FieldKeyType>(fields, fieldName, (field) => {\n      field.additional = { ...field.additional, options };\n    });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "SEOService",
            "id": "injectable-SEOService-2a7ca74d466c423e5dea528e536b8985f9a2b7256d53f679e8f68fbcf58a99c05e1e913a7bce18f6c02d59a8ee007bc4e7c8544a6835c44643b52de8088f8dbe",
            "file": "src/app/modules/@core/services/seo.service.ts",
            "properties": [
                {
                    "name": "$routerTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "destoryTitleMonitoring",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "getCurrentDomain",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "getRouteData",
                    "args": [
                        {
                            "name": "route",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.route"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.route",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initTitleMonitoring",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "onRouteChange",
                    "args": [
                        {
                            "name": "callback",
                            "type": "Function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "callback",
                            "type": "Function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { Subscription, filter, map } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class SEOService {\n  private $routerTitle!: Subscription;\n\n  constructor(\n    private title: Title,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  public onRouteChange(callback?: Function) {\n    return this.router.events.pipe(\n      filter((event) => event instanceof NavigationEnd),\n      map(() => {\n        if (!!callback) callback();\n\n        const child: ActivatedRoute | null = this.route.firstChild;\n        return child?.snapshot.data || {};\n      })\n    );\n  }\n\n  public initTitleMonitoring() {\n    this.$routerTitle = this.onRouteChange().subscribe((data) => {\n      if (data['title']) this.title.setTitle(`Boilerplate - ${data['title']}`);\n    });\n  }\n\n  public getRouteData(route = this.route): any {\n    if (!!route.children.length) return this.getRouteData(route.children[0]);\n    else return route.snapshot.data;\n  }\n\n  public destoryTitleMonitoring() {\n    this.$routerTitle.unsubscribe();\n  }\n\n  public getCurrentDomain() {\n    return window.location.origin;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "title",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "title",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "StripeConnectorService",
            "id": "injectable-StripeConnectorService-0efa76fc9c9ce6263553b123423e02a37d311d16c37e7092df12a6234f3591626ef1461564d304def55e5bb6ac25238e31e52ba6c16b3a9cba7c0fc21183ccd9",
            "file": "src/app/modules/@core/stripe/stripe.connector.ts",
            "properties": [
                {
                    "name": "ngxStripe",
                    "defaultValue": "injectStripe(environment.stripe.public_key)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "stripe",
                    "defaultValue": "new Stripe(environment.stripe.secret_key)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { injectStripe } from 'ngx-stripe';\nimport Stripe from 'stripe';\nimport { environment } from '../../../../environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class StripeConnectorService {\n  public stripe = new Stripe(environment.stripe.secret_key);\n  public ngxStripe = injectStripe(environment.stripe.public_key);\n\n  constructor() {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "StripeCustomerService",
            "id": "injectable-StripeCustomerService-927f34d1652fe7be100653a98f327ac09c50b14226173f01a5f5921b51f6069ed0272e68694a6498d9e671c1878e7d1f6fe218e53d135386d879481f46b0b195",
            "file": "src/app/modules/@core/stripe/stripe-customer.service.ts",
            "properties": [
                {
                    "name": "_connector",
                    "defaultValue": "inject(StripeConnectorService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "originRoute",
                    "defaultValue": "`${this.seoService.getCurrentDomain()}/features/stripe`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "data",
                            "type": "IStripeCustmerCreate",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "IStripeCustmerCreate",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getById",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<IStripeCustomer>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSubscriptions",
                    "args": [
                        {
                            "name": "customer",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "customer",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openPortal",
                    "args": [
                        {
                            "name": "customerId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "backToRoute",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.originRoute"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "customerId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "backToRoute",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.originRoute",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, inject } from '@angular/core';\nimport { SEOService } from '../services/seo.service';\nimport {\n  IStripeCustmerCreate,\n  IStripeCustomer,\n} from './@interfaces/stripe.interface';\nimport { StripeConnectorService } from './stripe.connector';\n\n@Injectable({ providedIn: 'root' })\nexport class StripeCustomerService {\n  private _connector = inject(StripeConnectorService);\n  private originRoute = `${this.seoService.getCurrentDomain()}/features/stripe`;\n\n  constructor(private seoService: SEOService) {}\n\n  public getById(id: string) {\n    return this._connector.stripe.customers.retrieve(\n      id\n    ) as Promise<IStripeCustomer>;\n  }\n\n  public create(data: IStripeCustmerCreate, id: string) {\n    return this._connector.stripe.customers.create({\n      ...data,\n      metadata: { id },\n    });\n  }\n\n  public openPortal(customerId: string, backToRoute = this.originRoute) {\n    return this._connector.stripe.billingPortal.sessions.create({\n      customer: customerId,\n      return_url: backToRoute,\n    });\n  }\n\n  public getSubscriptions(customer: string) {\n    return this._connector.stripe.subscriptions.list({ customer });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "seoService",
                        "type": "SEOService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "seoService",
                        "type": "SEOService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "StripeService",
            "id": "injectable-StripeService-663bb68daa34d867cd72585b691bb33a0d063153994fdca7644fd52acb8e58e262252bb63921157dee9eaefdbc111bdd5ebf515506a368f1ce0764e41de02aaf",
            "file": "src/app/modules/@core/stripe/stripe.service.ts",
            "properties": [
                {
                    "name": "_connector",
                    "defaultValue": "inject(StripeConnectorService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_customer",
                    "defaultValue": "inject(StripeCustomerService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "originRoute",
                    "defaultValue": "`${this.seoService.getCurrentDomain()}/features/stripe`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "createSession",
                    "args": [
                        {
                            "name": "products",
                            "type": "IStripeProductLineItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "customerId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "products",
                            "type": "IStripeProductLineItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "customerId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "redirect",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, inject } from '@angular/core';\nimport { SEOService } from '../services/seo.service';\nimport { IStripeProductLineItem } from './@interfaces/stripe.interface';\nimport { StripeCustomerService } from './stripe-customer.service';\nimport { StripeConnectorService } from './stripe.connector';\n\n@Injectable({ providedIn: 'root' })\nexport class StripeService {\n  public _customer = inject(StripeCustomerService);\n  private _connector = inject(StripeConnectorService);\n  private originRoute = `${this.seoService.getCurrentDomain()}/features/stripe`;\n\n  constructor(private seoService: SEOService) {}\n\n  public redirect(url: string) {\n    window.open(url, '_self');\n  }\n\n  public createSession(products: IStripeProductLineItem[], customerId: string) {\n    return this._connector.stripe.checkout.sessions.create({\n      mode: 'subscription',\n      line_items: products,\n      customer: customerId,\n      cancel_url: `${this.originRoute}?canceled=true`,\n      success_url: `${this.originRoute}?success=true`,\n    });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "seoService",
                        "type": "SEOService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "seoService",
                        "type": "SEOService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "SupabaseAuthenticationService",
            "id": "injectable-SupabaseAuthenticationService-d7d69f292ad4a88cb8e602165268e1408c459d5f7abba633d6cd60ad77773ee912575be08c6a2bb28bc4193808879d162ef4ef5a9b0c2beb32e6dc104194baeb",
            "file": "src/app/modules/@core/supabase/supabase-authentication.service.ts",
            "properties": [
                {
                    "name": "_connector",
                    "defaultValue": "inject(SupabaseConnectorService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "SupabaseClientBase"
                    }
                },
                {
                    "name": "authStore",
                    "defaultValue": "inject(AuthStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "SupabaseClientBase"
                    }
                },
                {
                    "name": "supabase",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SupabaseClient",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "SupabaseClientBase"
                    }
                },
                {
                    "name": "tableName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "SupabaseClientBase"
                    }
                }
            ],
            "methods": [
                {
                    "name": "signIn",
                    "args": [
                        {
                            "name": "data",
                            "type": "SignInWithPasswordCredentials",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "SignInWithPasswordCredentials",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "signOut",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "signUp",
                    "args": [
                        {
                            "name": "data",
                            "type": "SignUpWithPasswordCredentials",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "SignUpWithPasswordCredentials",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "checkSignInUserSession",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "SupabaseClientBase"
                    }
                },
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "data",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "SupabaseClientBase"
                    }
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "SupabaseClientBase"
                    }
                },
                {
                    "name": "getAll",
                    "args": [
                        {
                            "name": "columns",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'*'"
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "columns",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'*'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "SupabaseClientBase"
                    }
                },
                {
                    "name": "getByColumn",
                    "args": [
                        {
                            "name": "column",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "column",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "SupabaseClientBase"
                    }
                },
                {
                    "name": "getById",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "SupabaseClientBase"
                    }
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "data",
                            "type": "Partial<Data>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "Partial<Data>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "SupabaseClientBase"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport {\n  SignInWithPasswordCredentials,\n  SignUpWithPasswordCredentials,\n} from '@supabase/supabase-js';\nimport { SupabaseClientBase } from './supabase-client.base';\n\n@Injectable({ providedIn: 'root' })\nexport class SupabaseAuthenticationService extends SupabaseClientBase {\n  constructor() {\n    super('User');\n  }\n\n  public signUp(data: SignUpWithPasswordCredentials) {\n    return this.supabase.auth.signUp(data);\n  }\n\n  public signIn(data: SignInWithPasswordCredentials) {\n    return this.supabase.auth.signInWithPassword(data);\n  }\n\n  public signOut() {\n    return this.supabase.auth.signOut();\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "extends": [
                "SupabaseClientBase"
            ],
            "type": "injectable"
        },
        {
            "name": "SupabaseBucketService",
            "id": "injectable-SupabaseBucketService-9c8495e56a42a6eef4beeb7405117582d07190ad1208526b4d2088ddcc0f479cfdeff463de802d4b16c8d0d79b7ca7881a31340aae44f88b6b3db4968180b594",
            "file": "src/app/modules/@core/supabase/supabase-bucket.service.ts",
            "properties": [
                {
                    "name": "#supabaseClientBase",
                    "defaultValue": "new SupabaseClientBase('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "supabase",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SupabaseClient",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "ISupabaseBucketCreateOptions",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "ISupabaseBucketCreateOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "empty",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAll",
                    "args": [],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ]
                },
                {
                    "name": "getBucket",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "SUPABASE_BUCKETS.default"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "SUPABASE_BUCKETS.default",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "upload",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "ISupabaseBucketCreateOptions",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "ISupabaseBucketCreateOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { SupabaseClient } from '@supabase/supabase-js';\nimport { SUPABASE_BUCKETS } from './@constants/bucket.constant';\nimport { ISupabaseBucketCreateOptions } from './@interfaces/supabase-bucket.interface';\nimport { SupabaseClientBase } from './supabase-client.base';\n\n@Injectable({ providedIn: 'root' })\nexport class SupabaseBucketService {\n  #supabaseClientBase = new SupabaseClientBase('');\n  public supabase: SupabaseClient;\n\n  constructor() {\n    this.supabase = this.#supabaseClientBase.supabase;\n  }\n\n  public getBucket(name: string = SUPABASE_BUCKETS.default) {\n    return this.supabase.storage.from(name);\n  }\n\n  public async getAll() {\n    try {\n      const response = await this.supabase.storage.listBuckets();\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  public async get(name: string) {\n    try {\n      const response = await this.supabase.storage.getBucket(name);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  public async empty(name: string) {\n    try {\n      const response = await this.supabase.storage.emptyBucket(name);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  public async delete(name: string) {\n    try {\n      const response = await this.supabase.storage.deleteBucket(name);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  public async create(name: string, options: ISupabaseBucketCreateOptions) {\n    try {\n      const response = await this.supabase.storage.createBucket(name, options);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  public async upload(name: string, options: ISupabaseBucketCreateOptions) {\n    try {\n      const response = await this.supabase.storage.updateBucket(name, options);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "SupabaseConnectorService",
            "id": "injectable-SupabaseConnectorService-48e1ef92253eefc68e2277a1e1dc872179d47d466970f367be90579781b89015d3d01785e235b77ddf4aeeebe59dbaea44cda51aefe111d028bdf9146a4195ab",
            "file": "src/app/modules/@core/supabase/supabase-connector.service.ts",
            "properties": [
                {
                    "name": "supabase",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SupabaseClient",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { SupabaseClient, createClient } from '@supabase/supabase-js';\nimport { environment } from '../../../../environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class SupabaseConnectorService {\n  public supabase: SupabaseClient;\n\n  constructor() {\n    this.supabase = createClient(\n      environment.supabase.url,\n      environment.supabase.key\n    );\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 7
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "SupabaseExampleService",
            "id": "injectable-SupabaseExampleService-5807bf0be659156eb7be213d8162b7d3b98839c721ea4ff51d054e38e5c564b0120799c6efc91bc58a6d63f71c020f0cb040954abca164611e43a4be953fda5b",
            "file": "src/app/modules/documentation/services/supabase-example.service.ts",
            "properties": [
                {
                    "name": "_connector",
                    "defaultValue": "inject(SupabaseConnectorService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "SupabaseClientBase"
                    }
                },
                {
                    "name": "authStore",
                    "defaultValue": "inject(AuthStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "SupabaseClientBase"
                    }
                },
                {
                    "name": "supabase",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SupabaseClient",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "SupabaseClientBase"
                    }
                },
                {
                    "name": "tableName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "SupabaseClientBase"
                    }
                }
            ],
            "methods": [
                {
                    "name": "checkSignInUserSession",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "SupabaseClientBase"
                    }
                },
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "data",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "SupabaseClientBase"
                    }
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "SupabaseClientBase"
                    }
                },
                {
                    "name": "getAll",
                    "args": [
                        {
                            "name": "columns",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'*'"
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "columns",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'*'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "SupabaseClientBase"
                    }
                },
                {
                    "name": "getByColumn",
                    "args": [
                        {
                            "name": "column",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "column",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "SupabaseClientBase"
                    }
                },
                {
                    "name": "getById",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "SupabaseClientBase"
                    }
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "data",
                            "type": "Partial<Data>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "Partial<Data>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "SupabaseClientBase"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { SupabaseClientBase } from '../../@core/supabase/supabase-client.base';\n\n@Injectable({ providedIn: 'root' })\nexport class SupabaseExampleService extends SupabaseClientBase {\n  constructor() {\n    super('TableExample');\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 5
            },
            "extends": [
                "SupabaseClientBase"
            ],
            "type": "injectable"
        },
        {
            "name": "SupabaseStorageService",
            "id": "injectable-SupabaseStorageService-b7729cb528048e49841b28b0e7bd2c3b0a449f0c4795a2581fefa763e00f0feb7497b52ab9c1aed570e6718344c7ed88f7a4bced9997348556fe7afb0afde453",
            "file": "src/app/modules/@core/supabase/supabase-storage.service.ts",
            "properties": [
                {
                    "name": "_bucketService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SupabaseBucketService",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [
                {
                    "name": "copy",
                    "args": [
                        {
                            "name": "bucketName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "pathFrom",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "pathTo",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "bucketName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "pathFrom",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "pathTo",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "bucketName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "paths",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "bucketName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "paths",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "download",
                    "args": [
                        {
                            "name": "bucketName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "bucketName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAll",
                    "args": [
                        {
                            "name": "bucketName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "ISupabaseStorageSeachOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "bucketName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "ISupabaseStorageSeachOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPublicURL",
                    "args": [
                        {
                            "name": "bucketName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "bucketName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSignedURL",
                    "args": [
                        {
                            "name": "bucketName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "seconds",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "60"
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "bucketName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "seconds",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "60",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "move",
                    "args": [
                        {
                            "name": "bucketName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "pathFrom",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "pathTo",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "bucketName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "pathFrom",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "pathTo",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "replace",
                    "args": [
                        {
                            "name": "bucketName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "ISupabaseStorageUploadOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "bucketName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "ISupabaseStorageUploadOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "upload",
                    "args": [
                        {
                            "name": "bucketName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "ISupabaseStorageUploadOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "bucketName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "ISupabaseStorageUploadOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { generateUUID } from '../functions/uuid.function';\nimport { DownloadUtil } from '../util/download.util';\nimport {\n  ISupabaseStorageFile,\n  ISupabaseStorageSeachOptions,\n  ISupabaseStorageUploadOptions,\n  ISupabaseStorageUploadResponse,\n} from './@interfaces/supabase-storage.interface';\nimport { SupabaseBucketService } from './supabase-bucket.service';\n\n@Injectable({ providedIn: 'root' })\nexport class SupabaseStorageService {\n  constructor(public _bucketService: SupabaseBucketService) {}\n\n  public async getAll(\n    bucketName: string,\n    path: string,\n    options?: ISupabaseStorageSeachOptions\n  ) {\n    try {\n      const bucket = this._bucketService.getBucket(bucketName);\n      const response = await bucket.list(path, options);\n      return { ...response, data: response.data as ISupabaseStorageFile[] };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  public async upload(\n    bucketName: string,\n    path: string,\n    file: File,\n    options?: ISupabaseStorageUploadOptions\n  ) {\n    try {\n      const extesion = file.type.split('/').pop();\n      const fullPath = `${path}/${generateUUID()}.${extesion}`;\n\n      const bucket = this._bucketService.getBucket(bucketName);\n      const response = await bucket.upload(fullPath, file, options);\n\n      return {\n        ...response,\n        data: response.data as ISupabaseStorageUploadResponse,\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  public async delete(bucketName: string, paths: string[]) {\n    try {\n      const bucket = this._bucketService.getBucket(bucketName);\n      const response = await bucket.remove(paths);\n\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  public async download(bucketName: string, path: string) {\n    try {\n      const bucket = this._bucketService.getBucket(bucketName);\n      const response = await bucket.download(path);\n\n      const splited = path.split('/');\n      const name = splited.length ? splited[splited.length - 1] : path;\n\n      DownloadUtil.blob(response.data as Blob, name);\n      return { ...response, data: response.data as Blob };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  public async getSignedURL(\n    bucketName: string,\n    path: string,\n    seconds: number = 60\n  ) {\n    try {\n      const bucket = this._bucketService.getBucket(bucketName);\n      const response = await bucket.createSignedUrl(path, seconds);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  public getPublicURL(bucketName: string, path: string) {\n    try {\n      const bucket = this._bucketService.getBucket(bucketName);\n      return bucket.getPublicUrl(path);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  public async replace(\n    bucketName: string,\n    path: string,\n    file: File,\n    options?: ISupabaseStorageUploadOptions\n  ) {\n    try {\n      const bucket = this._bucketService.getBucket(bucketName);\n      const response = await bucket.update(path, file, options);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  public async copy(bucketName: string, pathFrom: string, pathTo: string) {\n    try {\n      const bucket = this._bucketService.getBucket(bucketName);\n      const response = await bucket.copy(pathFrom, pathTo);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  public async move(bucketName: string, pathFrom: string, pathTo: string) {\n    try {\n      const bucket = this._bucketService.getBucket(bucketName);\n      const response = await bucket.move(pathFrom, pathTo);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_bucketService",
                        "type": "SupabaseBucketService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "_bucketService",
                        "type": "SupabaseBucketService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ThemeService",
            "id": "injectable-ThemeService-594e182838177e54e7a070361d79a3d9572efce12d83aaa4f47f2a81c4b85fd7ba0c0839890cdc70e8ea0f690f9b367e5526db063a0ccb8dabe6fa30c706498c",
            "file": "src/app/modules/@core/services/theme.service.ts",
            "properties": [
                {
                    "name": "uiStore",
                    "defaultValue": "inject(UiStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [
                {
                    "name": "init",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "setTheme",
                    "args": [
                        {
                            "name": "theme",
                            "type": "ThemeType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "theme",
                            "type": "ThemeType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setVariables",
                    "args": [
                        {
                            "name": "theme",
                            "type": "ThemeType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "theme",
                            "type": "ThemeType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, inject } from '@angular/core';\nimport { UiStore } from '../../../store/ui.store';\nimport { THEME_CONFIG } from '../config/theme.config';\nimport { ThemeType } from '../types/theme.type';\n\n@Injectable({ providedIn: 'root' })\nexport class ThemeService {\n  public uiStore = inject(UiStore);\n\n  public setTheme(theme: ThemeType) {\n    this.setVariables(theme);\n\n    document.body.className = theme;\n    this.uiStore.setTheme(theme);\n  }\n\n  public init() {\n    this.setTheme(this.uiStore.theme() as ThemeType);\n  }\n\n  public setVariables(theme: ThemeType) {\n    const appStyle = document.documentElement.style;\n    if (!appStyle) return;\n\n    const variables = THEME_CONFIG[theme];\n    appStyle.setProperty(`--bg-primary`, variables.bgPrimary);\n    appStyle.setProperty(`--bg-secondary`, variables.bgSecondary);\n    appStyle.setProperty(`--text-primary`, variables.textPrimary);\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "DownloadUtil",
            "id": "class-DownloadUtil-9e5d0d2b0c68ca70e85fabba9604c42c82198f32d1996918c0653158777f063d37dd306bb68d719227053ce144d86964218db10428a3ff52770446f72e13c6ec",
            "file": "src/app/modules/@core/util/download.util.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class DownloadUtil {\n  private static handlerElement(\n    content: string | Blob,\n    fileName: string,\n    preventClick: boolean = false\n  ): HTMLAnchorElement {\n    const anchor = document.createElement('a');\n    anchor.href = content as string;\n    anchor.setAttribute('download', fileName);\n\n    if (!preventClick) anchor.click();\n\n    return anchor;\n  }\n\n  static blob(blob: Blob, fileName: string) {\n    const blobUrl = URL.createObjectURL(blob);\n    this.handlerElement(blobUrl, fileName);\n  }\n\n  static processBlobByUrl(url: string, fileName: string) {\n    const xhr = new XMLHttpRequest();\n\n    xhr.responseType = 'blob';\n    xhr.onload = () => {\n      this.blob(xhr.response as Blob, fileName);\n    };\n    xhr.open('GET', url);\n    xhr.send();\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "blob",
                    "args": [
                        {
                            "name": "blob",
                            "type": "Blob",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "fileName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "blob",
                            "type": "Blob",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "fileName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handlerElement",
                    "args": [
                        {
                            "name": "content",
                            "type": "string | Blob",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "fileName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "preventClick",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "HTMLAnchorElement",
                    "typeParameters": [],
                    "line": 2,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "content",
                            "type": "string | Blob",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "fileName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "preventClick",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "processBlobByUrl",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "fileName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "fileName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "FirebaseCollectionBase",
            "id": "class-FirebaseCollectionBase-611a1a541e679d28f4af3f0a4ba83d94f67dc1fdb1f3aa541030812ef4b0e2929a26fc0a65f6f38f08800ed0e129b1ab75942c438206238141a77c054198eb52",
            "file": "src/app/modules/@core/firebase/firebase-collection.base.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { inject } from '@angular/core';\nimport { FirebaseApp } from 'firebase/app';\nimport {\n  CollectionReference,\n  DocumentData,\n  Firestore,\n  QueryFieldFilterConstraint,\n  addDoc,\n  collection,\n  deleteDoc,\n  doc,\n  getDoc,\n  getDocs,\n  getFirestore,\n  onSnapshot,\n  query,\n  updateDoc,\n  where,\n} from 'firebase/firestore';\nimport { Subject } from 'rxjs';\nimport { ListDocumentSnapshot } from './@types/firebase.type';\nimport { FirebaseCollectionHelper } from './firebase-collection.helper';\nimport { FirebaseConnectorService } from './firebase-connector.service';\n\nexport class FirebaseCollectionBase {\n  private _connector = inject(FirebaseConnectorService);\n  private snapshot = new Subject<ListDocumentSnapshot>();\n\n  public db!: Firestore;\n  public app: FirebaseApp;\n  public _helper = new FirebaseCollectionHelper();\n  public $snapshot = this.snapshot.asObservable();\n  public collection!: CollectionReference<DocumentData>;\n\n  constructor(\n    private collectionName: string,\n    private snapshotChangeEnable: boolean = false\n  ) {\n    this.app = this._connector.app;\n\n    this.db = getFirestore();\n    this.collection = collection(this.db, this.collectionName);\n\n    this.handleMonitoringSnapshot();\n  }\n\n  public getAll<Data>(querys: QueryFieldFilterConstraint[] = []) {\n    return this.handlerGetAll<Data>(querys);\n  }\n\n  public getById<Data>(id: string) {\n    return this.handlerGetById<Data>(id);\n  }\n\n  public create<Data>(payload: Data) {\n    return this.handlerCreate(payload);\n  }\n\n  public update<Data>(id: string, payload: Data) {\n    return this.handlerUpdate(id, payload);\n  }\n\n  public delete(id: string) {\n    return deleteDoc(this.getDocumentReference(id));\n  }\n\n  public getDocumentReference(id: string, collection = this.collectionName) {\n    return doc(this.db, collection, id);\n  }\n\n  public async getByColumn<Data>(column: string, value: any) {\n    try {\n      const snapshot = await getDocs(\n        query(this.collection, where(column, '==', value))\n      );\n\n      const response = await this._helper.getCollectionData<Data>(snapshot);\n      const [result] = response as Data[];\n\n      return result || {};\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // #region: Protected methods\n  protected async handlerGetAll<Data>(\n    querys: QueryFieldFilterConstraint[] = []\n  ) {\n    try {\n      const snapshot = await getDocs(query(this.collection, ...querys));\n      return this._helper.getCollectionData<Data>(snapshot);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  protected async handlerGetById<Data>(\n    id: string,\n    collection = this.collectionName\n  ) {\n    try {\n      const snapshot = await getDoc(this.getDocumentReference(id, collection));\n      return this._helper.getDocumentData<Data>(snapshot);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  protected async handlerCreate<Data>(payload: Data) {\n    try {\n      const response = await addDoc(this.collection, Object(payload));\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  protected async handlerUpdate<Data>(id: string, payload: Data) {\n    try {\n      const response = await updateDoc(\n        this.getDocumentReference(id),\n        Object(payload)\n      );\n\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  }\n  // #endregion: Protected methods\n\n  private handleMonitoringSnapshot() {\n    if (this.snapshotChangeEnable) {\n      onSnapshot(\n        this.collection,\n        (snapshot) => this.snapshot.next(snapshot),\n        (err) => console.log(err)\n      );\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "collectionName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snapshotChangeEnable",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "false"
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "collectionName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snapshotChangeEnable",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "false",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "_connector",
                    "defaultValue": "inject(FirebaseConnectorService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_helper",
                    "defaultValue": "new FirebaseCollectionHelper()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "$snapshot",
                    "defaultValue": "this.snapshot.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "app",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FirebaseApp",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "collection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CollectionReference<DocumentData>",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "db",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Firestore",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "snapshot",
                    "defaultValue": "new Subject<ListDocumentSnapshot>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "payload",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "payload",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAll",
                    "args": [
                        {
                            "name": "querys",
                            "type": "QueryFieldFilterConstraint[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "querys",
                            "type": "QueryFieldFilterConstraint[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "[]",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getByColumn",
                    "args": [
                        {
                            "name": "column",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "column",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getById",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDocumentReference",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "collection",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.collectionName"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "collection",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.collectionName",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleMonitoringSnapshot",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 133,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "handlerCreate",
                    "args": [
                        {
                            "name": "payload",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "payload",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handlerGetAll",
                    "args": [
                        {
                            "name": "querys",
                            "type": "QueryFieldFilterConstraint[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "querys",
                            "type": "QueryFieldFilterConstraint[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "[]",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handlerGetById",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "collection",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.collectionName"
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "collection",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.collectionName",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handlerUpdate",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "payload",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 119,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "payload",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "payload",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "payload",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "FirebaseCollectionHelper",
            "id": "class-FirebaseCollectionHelper-de2ba08c1d1816bf1a42a1aee91da6050c7fbee2fb34b52c6dfeb067c8d9c45d232e7e5534fb713b4fa83645a54a7af220448d5eb89bc17bc18a04a849a63f39",
            "file": "src/app/modules/@core/firebase/firebase-collection.helper.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {\n  ListDocumentSnapshot,\n  SingleDocumentSnapshot,\n} from './@types/firebase.type';\n\nexport class FirebaseCollectionHelper {\n  public getDocumentData<Data>(snapshot: SingleDocumentSnapshot) {\n    try {\n      const documentData = snapshot.data();\n\n      if (!Object.keys(Object(documentData)).length || !documentData) {\n        throw new Error('Document not found');\n      }\n\n      return { ...documentData, id: snapshot.id } as Data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  public getCollectionData<Data>(snapshot: ListDocumentSnapshot) {\n    return snapshot.docs.map((doc) => {\n      const document = { ...doc.data(), id: doc.id };\n      return document;\n    }) as Data;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getCollectionData",
                    "args": [
                        {
                            "name": "snapshot",
                            "type": "ListDocumentSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Data",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "snapshot",
                            "type": "ListDocumentSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDocumentData",
                    "args": [
                        {
                            "name": "snapshot",
                            "type": "SingleDocumentSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Data",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "snapshot",
                            "type": "SingleDocumentSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "LocalStorageService",
            "id": "class-LocalStorageService-de91fb83d55f930d1d90aae35fd8bcd844efdfec0b9344d8693b4c7fa16c6a2b61b4ae2d47bc9e4ed1be472b8b00cc67e48db37c504cebdc6bbb630aa4b77c2e",
            "file": "src/app/store/@persist/_local.storage.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class LocalStorageService {\n  public get(key: string) {\n    return localStorage.getItem(key);\n  }\n\n  public set(key: string, value: any) {\n    localStorage.setItem(key, value);\n  }\n\n  public remove(key: string) {\n    localStorage.removeItem(key);\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 2,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "remove",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "set",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 6,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "PersistService",
            "id": "class-PersistService-5259975898151327565ef1f41483ba666dd0a25623aa5883f6ce2c96f9a9f313f98ff982f404f9e85cee11397d0113455538798d4b8d5fba9c2499b6865003e7",
            "file": "src/app/store/@persist/persist.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { LocalStorageService } from './_local.storage';\nimport { SessionStorageService } from './_session.storage';\n\nexport class PersistService {\n  private readonly storeKey = '@App';\n  private storageControl = {\n    local: new LocalStorageService(),\n    session: new SessionStorageService(),\n  };\n\n  constructor(\n    private name: string,\n    private storageKey: 'local' | 'session' = 'local'\n  ) {}\n\n  private get moduleKey(): string {\n    return `${this.storeKey}:${this.name}`;\n  }\n\n  private get storage() {\n    return this.storageControl[this.storageKey];\n  }\n\n  private getCurrentState() {\n    const storaged = this.storage.get(this.moduleKey);\n\n    if (storaged) {\n      try {\n        return JSON.parse(storaged);\n      } catch (error) {\n        console.error(\n          `[app]: an error occurred while converting to object ${this.moduleKey}`\n        );\n        return {};\n      }\n    } else return {};\n  }\n\n  private getSignalStateValue(store: object, model: object) {\n    const keys = Object.keys(model);\n\n    return Object.entries(store).reduce((initial, [key, value]) => {\n      const result = keys.includes(key) ? { [key]: value() } : {};\n      return { ...initial, ...result };\n    }, {});\n  }\n\n  private setState(value: object) {\n    this.storage.set(this.moduleKey, JSON.stringify(value));\n    return value;\n  }\n\n  public initState<Data>(model: Data): Data {\n    const state = this.getCurrentState();\n    const hasState = !!Object.keys(state).length;\n\n    if (hasState) return state;\n    else return this.setState(Object(model)) as Data;\n  }\n\n  public commit(store: object, model: object) {\n    const value = this.getSignalStateValue(store, model);\n    return this.setState(value);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "name",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "storageKey",
                        "type": "\"local\" | \"session\"",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "'local'"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "name",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "storageKey",
                        "type": "\"local\" | \"session\"",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "'local'",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "storageControl",
                    "defaultValue": "{\n    local: new LocalStorageService(),\n    session: new SessionStorageService(),\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "storeKey",
                    "defaultValue": "'@App'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methods": [
                {
                    "name": "commit",
                    "args": [
                        {
                            "name": "store",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "model",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "object",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "store",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "model",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCurrentState",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getSignalStateValue",
                    "args": [
                        {
                            "name": "store",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "model",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "store",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "model",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initState",
                    "args": [
                        {
                            "name": "model",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Data",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "model",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setState",
                    "args": [
                        {
                            "name": "value",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "object",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "accessors": {
                "moduleKey": {
                    "name": "moduleKey",
                    "getSignature": {
                        "name": "moduleKey",
                        "type": "string",
                        "returnType": "string",
                        "line": 16
                    }
                },
                "storage": {
                    "name": "storage",
                    "getSignature": {
                        "name": "storage",
                        "type": "",
                        "returnType": "",
                        "line": 20
                    }
                }
            },
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "SessionStorageService",
            "id": "class-SessionStorageService-7a988e1a55fd61219faa49954800fedb6f60762c80e805ae410a5ec359e18cf11ad4a091bbd7d50a852b77799024596c3a8463871fb72e55bf073f340139f04a",
            "file": "src/app/store/@persist/_session.storage.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class SessionStorageService {\n  get(key: string) {\n    return sessionStorage.getItem(key);\n  }\n\n  set(key: string, value: any) {\n    sessionStorage.setItem(key, value);\n  }\n\n  remove(key: string) {\n    sessionStorage.removeItem(key);\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 2,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "remove",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "set",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 6,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "StorybookFormBase",
            "id": "class-StorybookFormBase-f06dae442fc9eec28dc56aac0145cb6305e2079542f83334c43c03ebbe656447e6811d2ff2292dd4ed2eb19a26f2ae3694a71302e1ac96aca16d5e7d11cdd65c",
            "file": "src/stories/form/_base.form.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { IFormOption } from '../../app/modules/@core/interfaces/app-form.interface';\n\nexport class StorybookFormBase {\n  public initialOptions: IFormOption[] = [\n    { label: 'Option 1', value: 1 },\n    { label: 'Option 2', value: 2 },\n  ];\n\n  public commonImports = [\n    FormsModule,\n    MatCheckboxModule,\n    ReactiveFormsModule,\n    MatSlideToggleModule,\n\n    MatInputModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    BrowserAnimationsModule,\n  ];\n\n  public buildExcludeFormProps(items: string[], excludeCommon = true) {\n    const commonInputs = ['model', 'isDynamic'];\n    const commonProperties = [\n      'onChange',\n      'onTouched',\n      'rangeControl',\n      '$modelControl',\n    ];\n    const commonMethods = [\n      'ngOnInit',\n      'writeValue',\n      'ngOnDestroy',\n      'setInitialValue',\n      'registerOnChange',\n      'registerOnTouched',\n      'initMonitoringChanges',\n    ];\n\n    const commonItems = [\n      ...commonInputs,\n      ...commonMethods,\n      ...commonProperties,\n    ];\n    const excludeItems = excludeCommon ? commonItems : [];\n\n    return [...excludeItems, ...items];\n  }\n}\n",
            "properties": [
                {
                    "name": "commonImports",
                    "defaultValue": "[\n    FormsModule,\n    MatCheckboxModule,\n    ReactiveFormsModule,\n    MatSlideToggleModule,\n\n    MatInputModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    BrowserAnimationsModule,\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "initialOptions",
                    "defaultValue": "[\n    { label: 'Option 1', value: 1 },\n    { label: 'Option 2', value: 2 },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IFormOption[]",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [
                {
                    "name": "buildExcludeFormProps",
                    "args": [
                        {
                            "name": "items",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "excludeCommon",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "true"
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "items",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "excludeCommon",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "true",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "SupabaseClientBase",
            "id": "class-SupabaseClientBase-6cb6861fa2d68b4e930587320309ab566ebd4abd8a93506e9dc9a26008f4ea8e0368ed55eaec626474ef4d2d645f61ad821de0439d76789f5bbea70c1c009be5",
            "file": "src/app/modules/@core/supabase/supabase-client.base.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { inject } from '@angular/core';\nimport { SupabaseClient } from '@supabase/supabase-js';\nimport { AuthStore } from '../../../store/auth.store';\nimport { SupabaseConnectorService } from './supabase-connector.service';\n\nexport class SupabaseClientBase {\n  public supabase: SupabaseClient;\n  private authStore = inject(AuthStore);\n  private _connector = inject(SupabaseConnectorService);\n\n  constructor(public tableName: string) {\n    this.supabase = this._connector.supabase;\n    this.checkSignInUserSession();\n  }\n\n  private checkSignInUserSession() {\n    if (!!this.authStore.supabaseToken()) return;\n\n    const credentials = {\n      access_token: this.authStore.supabaseToken(),\n      refresh_token: this.authStore.supabaseRefreshToken(),\n    };\n\n    this.supabase.auth\n      .setSession(credentials)\n      .then(() => {})\n      .catch((error) => {});\n  }\n\n  public async getByColumn<Data>(column: string, value: any) {\n    try {\n      const response = await this.supabase\n        .from(this.tableName)\n        .select()\n        .eq(column, value)\n        .single();\n\n      return { ...response, data: response.data as Data };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  public async getAll<Data>(columns: string = '*') {\n    try {\n      const response = await this.supabase.from(this.tableName).select(columns);\n      return { ...response, data: response.data as Data };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  public getById<Data>(id: number) {\n    return this.getByColumn<Data>('id', id);\n  }\n\n  public async create<Data>(data: Data) {\n    try {\n      const response = await this.supabase\n        .from(this.tableName)\n        .insert(data)\n        .select()\n        .single();\n      return { ...response, data: response.data as Data };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  public async update<Data>(data: Partial<Data>, id: number) {\n    try {\n      const response = await this.supabase\n        .from(this.tableName)\n        .update(data)\n        .eq('id', id)\n        .select()\n        .single();\n      return { ...response, data: response.data as Data };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  public async delete(id: number) {\n    try {\n      const response = await this.supabase\n        .from(this.tableName)\n        .delete()\n        .eq('id', id);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "tableName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "tableName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "_connector",
                    "defaultValue": "inject(SupabaseConnectorService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "authStore",
                    "defaultValue": "inject(AuthStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "supabase",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SupabaseClient",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "tableName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [
                {
                    "name": "checkSignInUserSession",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "data",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAll",
                    "args": [
                        {
                            "name": "columns",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'*'"
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "columns",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'*'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getByColumn",
                    "args": [
                        {
                            "name": "column",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "column",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getById",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "data",
                            "type": "Partial<Data>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [
                        "Data"
                    ],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125,
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "Partial<Data>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "AnimateDirective",
            "id": "directive-AnimateDirective-516bdbd565e14e29fc0f61a29cd33a37afbacee33da7afc83d04ef54518ab2867e47df119f804601f981fc934b3194d556cea38fe780d30a2e4d7bfb73148dc2",
            "file": "src/app/modules/@core/directives/animate.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, Input, OnInit } from '@angular/core';\n\n@Directive({\n  standalone: true,\n  selector: '[animate]',\n})\nexport class AnimateDirective implements OnInit {\n  @Input() animation = '';\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit() {\n    this.setAnimation();\n  }\n\n  setAnimation() {\n    this.el.nativeElement.classList.add(`animate__animated`);\n    this.el.nativeElement.classList.add(this.animation);\n  }\n}\n",
            "selector": "[animate]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "animation",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setAnimation",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "FieldGeneratorDirective",
            "id": "directive-FieldGeneratorDirective-742d7e3c6d1b204950615ec773c9ca05327c918585f6836ea00e11fe6dc31c94b531b49d72f0ddce83d0e816c4fe8743d79429da6b4fa8496dbe68bb6d959645",
            "file": "src/app/modules/@core/components/_form-generator/field-generator.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  Input,\n  ViewContainerRef,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { AppCheckboxComponent } from '../form/app-checkbox/app-checkbox.component';\nimport { AppDatepickerComponent } from '../form/app-datepicker/app-datepicker.component';\nimport {\n  APP_FILE_UPLOAD_DEFAULT_VALUES,\n  AppFileUploadComponent,\n} from '../form/app-file-upload/app-file-upload.component';\nimport {\n  APP_IMAGE_CROPPER_DEFAULT_VALUES,\n  AppImageCropperComponent,\n} from '../form/app-image-cropper/app-image-cropper.component';\nimport { AppInputComponent } from '../form/app-input/app-input.component';\nimport { AppRadioButtonComponent } from '../form/app-radio-button/app-radio-button.component';\nimport { AppSelectComponent } from '../form/app-select/app-select.component';\nimport {\n  APP_SLIDER_UPLOAD_DEFAULT_VALUES,\n  AppSliderComponent,\n} from '../form/app-slider/app-slider.component';\nimport { AppTextEditorComponent } from '../form/app-text-editor/app-text-editor.component';\nimport { AppTextareaComponent } from '../form/app-textarea/app-textarea.component';\nimport { IFormGeneratorField } from './app-form-generator.interface';\n\nconst components = {\n  input: AppInputComponent,\n  select: AppSelectComponent,\n  slider: AppSliderComponent,\n  radio: AppRadioButtonComponent,\n  textarea: AppTextareaComponent,\n  checkbox: AppCheckboxComponent,\n  datepicker: AppDatepickerComponent,\n  'text-editor': AppTextEditorComponent,\n  'file-upload': AppFileUploadComponent,\n  'image-cropper': AppImageCropperComponent,\n};\n\nexport type FormGeneratorFieldType = keyof typeof components;\ntype HandlerCallbackPropsType = { [key in FormGeneratorFieldType]: Function };\n\n@Directive({\n  standalone: true,\n  selector: '[appFieldGenerator]',\n})\nexport class FieldGeneratorDirective {\n  @Input({ required: true }) group!: FormGroup;\n  @Input({ required: true }) field!: IFormGeneratorField<{}>;\n\n  private componentRef!: ComponentRef<any>;\n\n  constructor(\n    private container: ViewContainerRef,\n    private resolver: ComponentFactoryResolver\n  ) {}\n\n  ngOnInit(): void {\n    const factory = this.resolver.resolveComponentFactory(\n      components[this.field.type] as any\n    );\n\n    this.componentRef = this.container.createComponent(factory);\n\n    this.componentRef.instance.isDynamic = true;\n    this.componentRef.instance.group = this.group;\n    this.componentRef.instance.name = this.field.name;\n    this.componentRef.instance.label = this.field.label;\n    this.componentRef.instance.formControlName = this.field.name;\n\n    if (this.field.additional) {\n      const callbacks: HandlerCallbackPropsType = {\n        input: () => {},\n        radio: () => {},\n        select: () => {},\n        textarea: () => {},\n        slider: () => this.setSliderProps(),\n        checkbox: () => this.setCheckboxProps(),\n        datepicker: () => this.setDatePickerProps(),\n        'text-editor': () => this.setTextEditorProps(),\n        'file-upload': () => this.setFileUploadProps(),\n        'image-cropper': () => this.setImageCropperProps(),\n      };\n\n      this.setCommonProps();\n      callbacks[this.field.type]();\n    }\n  }\n\n  private setCommonProps() {\n    if (!this.field.additional) return;\n\n    const { options, inputType, className, placeholder } =\n      this.field.additional;\n\n    this.componentRef.instance.items = options || [];\n    this.componentRef.instance.type = inputType || '';\n\n    this.componentRef.instance.className = className || '';\n    this.componentRef.instance.placeholder = placeholder || '';\n  }\n\n  private setCheckboxProps() {\n    if (!this.field.additional) return;\n\n    this.componentRef.instance.toggle =\n      this.field.additional.checkbox?.isToggle || false;\n  }\n\n  private setSliderProps() {\n    if (!this.field.additional) return;\n\n    const { instance } = this.componentRef;\n    const { slider } = this.field.additional;\n    const props = APP_SLIDER_UPLOAD_DEFAULT_VALUES;\n\n    instance.min = slider?.min || props.min;\n    instance.max = slider?.max || props.max;\n    instance.step = slider?.step || props.step;\n    instance.range = slider?.range || props.range;\n    instance.showTickMarks = slider?.showTickMarks || props.showTickMarks;\n  }\n\n  private setTextEditorProps() {\n    if (!this.field.additional) return;\n\n    this.componentRef.instance.config =\n      this.field.additional.textEditor?.config || {};\n  }\n\n  private setDatePickerProps() {\n    if (!this.field.additional) return;\n\n    this.componentRef.instance.range =\n      this.field.additional.datepicker?.isDatepickerRange || false;\n  }\n\n  private setFileUploadProps() {\n    if (!this.field.additional) return;\n\n    const { instance } = this.componentRef;\n    const { fileUpload } = this.field.additional;\n    const props = APP_FILE_UPLOAD_DEFAULT_VALUES;\n\n    instance.maxFiles = fileUpload?.maxFiles || props.maxFiles;\n    instance.fileTypes = fileUpload?.fileTypes || props.fileTypes;\n    instance.limitErrorMessage =\n      fileUpload?.limitErrorMessage || props.limitErrorMessage;\n  }\n\n  private setImageCropperProps() {\n    if (!this.field.additional) return;\n\n    const { instance } = this.componentRef;\n    const { imageCropper } = this.field.additional;\n    const props = APP_IMAGE_CROPPER_DEFAULT_VALUES;\n\n    instance.scale = imageCropper?.scale || props.scale;\n    instance.height = imageCropper?.height || props.height;\n    instance.rounded = imageCropper?.rounded || props.rounded;\n    instance.imageURL = imageCropper?.imageURL || props.imageURL;\n    instance.buttonText = imageCropper?.buttonText || props.buttonText;\n    instance.background = imageCropper?.background || props.background;\n    instance.aspectRatio = imageCropper?.aspectRatio || props.aspectRatio;\n    instance.onlyScaleDown = imageCropper?.onlyScaleDown || props.onlyScaleDown;\n    instance.cropperMinWidth =\n      imageCropper?.cropperMinWidth || props.cropperMinWidth;\n    instance.maintainAspectRatio =\n      imageCropper?.maintainAspectRatio || props.maintainAspectRatio;\n  }\n}\n",
            "selector": "[appFieldGenerator]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "required": true,
                    "name": "field",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 52,
                    "type": "IFormGeneratorField<literal type>",
                    "decorators": []
                },
                {
                    "required": true,
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 51,
                    "type": "FormGroup",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "componentRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ComponentRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setCheckboxProps",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "setCommonProps",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "setDatePickerProps",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 134,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "setFileUploadProps",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 141,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "setImageCropperProps",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 154,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "setSliderProps",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "setTextEditorProps",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 127,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "extends": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "container",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "resolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 54,
                "jsdoctags": [
                    {
                        "name": "container",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "resolver",
                        "type": "ComponentFactoryResolver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AppCheckboxComponent",
            "id": "component-AppCheckboxComponent-df90c26e2c53c431d3ad4fa4627f850dc430c1417422013bf1ceba6845dfaac1dac8c54ffbb494658ce80380a48365a6cab58cf00d8a51d40339280c11c91749",
            "file": "src/app/modules/@core/components/form/app-checkbox/app-checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    multi: true, provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AppCheckboxComponent),\n}",
                    "type": "component"
                }
            ],
            "selector": "app-checkbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-checkbox.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "required": false,
                    "name": "toggle",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "toggleClassName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "appearance",
                    "defaultValue": "'fill'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"outline\" | \"fill\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "className",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "formControlName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "group",
                    "defaultValue": "this.formBuilder.group({\n    [this.name]: [''],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "ModelControlType",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "isDynamic",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "$modelControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "alertService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AlertService",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelControlType",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initMonitoringChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "setInitialValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "MatCheckboxModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "MatSlideToggleModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, booleanAttribute, forwardRef } from '@angular/core';\nimport {\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { ModelControl } from '../model-control';\n\n@Component({\n  standalone: true,\n  selector: 'app-checkbox',\n  styleUrl: './app-checkbox.component.scss',\n  templateUrl: './app-checkbox.component.html',\n  imports: [\n    FormsModule,\n    MatCheckboxModule,\n    ReactiveFormsModule,\n    MatSlideToggleModule,\n  ],\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AppCheckboxComponent),\n    },\n  ],\n})\nexport class AppCheckboxComponent extends ModelControl {\n  @Input() toggleClassName: string = '';\n  @Input({ transform: booleanAttribute }) toggle: boolean = false;\n\n  ngOnInit() {\n    if (!this.isDynamic) this.initMonitoringChanges();\n  }\n}\n",
            "styleUrl": "./app-checkbox.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "ModelControl"
            ],
            "templateData": "<article id=\"app-checkbox\" [class]=\"className\" [formGroup]=\"group\">\n  @if(toggle) {\n  <mat-slide-toggle\n    [id]=\"id\"\n    [name]=\"name\"\n    [class]=\"toggleClassName\"\n    [formControlName]=\"formControlName\"\n  >\n    {{ label }}\n  </mat-slide-toggle>\n  } @else {\n  <mat-checkbox [id]=\"id\" [name]=\"name\" [formControlName]=\"formControlName\">\n    {{ label }}\n  </mat-checkbox>\n  }\n</article>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-7fbc0add894473c237ce3672c845a3df890424a48096d14be7311a674e5479a1ac196103b49f07370ede3266a26bcba08d0fb591b249a1c8e62c11f9e4769e0d",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "loadingStore",
                    "defaultValue": "inject(LoadingStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "checkLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "prepareRoute",
                    "args": [
                        {
                            "name": "outlet",
                            "type": "RouterOutlet",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "outlet",
                            "type": "RouterOutlet",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "AppLoadingComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { trigger } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport { RouterModule, RouterOutlet } from '@angular/router';\nimport Iconify from '@iconify/iconify';\nimport { ROUTER_STACK_ANIMATION } from './modules/@core/animations/router-stack.animation';\nimport { AppLoadingComponent } from './modules/@core/components/app-loading/app-loading.component';\nimport { SEOService } from './modules/@core/services/seo.service';\nimport { ThemeService } from './modules/@core/services/theme.service';\nimport { LoadingStore } from './store/loading.store';\n\n@Component({\n  standalone: true,\n  selector: 'app-root',\n  styleUrl: './app.component.scss',\n  templateUrl: './app.component.html',\n  animations: [trigger('triggerName', ROUTER_STACK_ANIMATION)],\n  imports: [CommonModule, RouterOutlet, RouterModule, AppLoadingComponent],\n})\nexport class AppComponent {\n  public loadingStore = inject(LoadingStore);\n\n  constructor(\n    private seoService: SEOService,\n    private themeService: ThemeService\n  ) {\n    Iconify.listIcons();\n    this.checkLoading();\n    this.themeService.init();\n    this.seoService.initTitleMonitoring();\n  }\n\n  public prepareRoute(outlet: RouterOutlet) {\n    return (\n      outlet && outlet.activatedRouteData && outlet.activatedRouteData['id']\n    );\n  }\n\n  public checkLoading() {\n    if (this.loadingStore.show()) this.loadingStore.setState(false);\n  }\n}\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "seoService",
                        "type": "SEOService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "seoService",
                        "type": "SEOService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<main [@triggerName]=\"prepareRoute(outlet)\">\n  <router-outlet #outlet=\"outlet\" />\n</main>\n\n<app-loading />\n"
        },
        {
            "name": "AppDatepickerComponent",
            "id": "component-AppDatepickerComponent-1b260c88ad745b663459ba6cf8f3c1a6dcc2589d86b0eb3172c3012f071a44ffbf2ef0034e80c9f8e9dfbbc724f6baef68b2c9d853bc2ac47de0cf9b0d6f1ff9",
            "file": "src/app/modules/@core/components/form/app-datepicker/app-datepicker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    multi: true, provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AppDatepickerComponent),\n}",
                    "type": "component"
                }
            ],
            "selector": "app-datepicker",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-datepicker.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "placeholderEnd",
                    "defaultValue": "'End date'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholderStart",
                    "defaultValue": "'Start date'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "range",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "appearance",
                    "defaultValue": "'fill'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"outline\" | \"fill\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "className",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "formControlName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "group",
                    "defaultValue": "this.formBuilder.group({\n    [this.name]: [''],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "ModelControlType",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "isDynamic",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "rangeControl",
                    "defaultValue": "new FormGroup({\n    start: new FormControl<Date | null>(null),\n    end: new FormControl<Date | null>(null),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "$modelControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "alertService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AlertService",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelControlType",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setRangeInitialValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initMonitoringChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "setInitialValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatDatepickerModule",
                    "type": "module"
                },
                {
                    "name": "MatNativeDateModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, booleanAttribute, forwardRef } from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { DatePickerRangeValue } from '../../../types/datepicker.type';\nimport { ModelControl } from '../model-control';\n\n@Component({\n  standalone: true,\n  selector: 'app-datepicker',\n  styleUrl: './app-datepicker.component.scss',\n  templateUrl: './app-datepicker.component.html',\n  imports: [\n    FormsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AppDatepickerComponent),\n    },\n  ],\n})\nexport class AppDatepickerComponent extends ModelControl {\n  @Input() placeholderEnd: string = 'End date';\n  @Input() placeholderStart: string = 'Start date';\n  @Input({ transform: booleanAttribute }) range: boolean = false;\n\n  public rangeControl = new FormGroup({\n    start: new FormControl<Date | null>(null),\n    end: new FormControl<Date | null>(null),\n  });\n\n  ngOnInit() {\n    if (!this.isDynamic) this.initMonitoringChanges();\n    if (this.range) this.setRangeInitialValue();\n\n    this.$modelControl = this.rangeControl.valueChanges.subscribe((value) => {\n      this.group.patchValue({ [this.formControlName]: value });\n    });\n  }\n\n  setRangeInitialValue() {\n    const controlValue = this.group.controls[this.formControlName].value;\n\n    if (controlValue) {\n      this.rangeControl.setValue({\n        end: controlValue.end,\n        start: controlValue.start,\n      });\n\n      return;\n    }\n\n    if (typeof this.initialValue !== 'object' || !this.initialValue) return;\n\n    this.rangeControl.setValue({\n      start: (this.initialValue as DatePickerRangeValue).start,\n      end: (this.initialValue as DatePickerRangeValue).end,\n    });\n  }\n}\n",
            "styleUrl": "./app-datepicker.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "ModelControl"
            ],
            "templateData": "@if(range) {\n<mat-form-field\n  [class]=\"className\"\n  [appearance]=\"appearance\"\n  id=\"app-datepicker-range\"\n>\n  <mat-label>{{ label }}</mat-label>\n\n  <mat-date-range-input [formGroup]=\"rangeControl\" [rangePicker]=\"pickerRange\">\n    <input\n      matStartDate\n      formControlName=\"start\"\n      [placeholder]=\"placeholderStart\"\n    />\n    <input matEndDate formControlName=\"end\" [placeholder]=\"placeholderEnd\" />\n  </mat-date-range-input>\n\n  <mat-datepicker-toggle matIconSuffix [for]=\"pickerRange\" />\n  <mat-date-range-picker #pickerRange />\n</mat-form-field>\n} @else {\n<mat-form-field\n  id=\"app-datepicker\"\n  [class]=\"className\"\n  [formGroup]=\"group\"\n  [appearance]=\"appearance\"\n>\n  <mat-label>{{ label }}</mat-label>\n\n  <input\n    matInput\n    [id]=\"id\"\n    [name]=\"name\"\n    [matDatepicker]=\"picker\"\n    [placeholder]=\"placeholder\"\n    [formControlName]=\"formControlName\"\n  />\n  <mat-datepicker-toggle matIconSuffix [for]=\"picker\" />\n  <mat-datepicker #picker />\n</mat-form-field>\n}\n"
        },
        {
            "name": "AppFileUploadComponent",
            "id": "component-AppFileUploadComponent-a83d5eed8ce090787c94993b7108860b72971e35a3f07727d786125a9f324579ef4571c20412671c0ac77d0d275847531a276165bedfd29387de66f6373a717f",
            "file": "src/app/modules/@core/components/form/app-file-upload/app-file-upload.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    multi: true, provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AppFileUploadComponent),\n}",
                    "type": "component"
                }
            ],
            "selector": "app-file-upload",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-file-upload.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "fileTypes",
                    "defaultValue": "['*/*']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "FileUploadType[]",
                    "decorators": []
                },
                {
                    "name": "limitErrorMessage",
                    "defaultValue": "`File limit reached`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "maxFiles",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "appearance",
                    "defaultValue": "'fill'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"outline\" | \"fill\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "className",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "formControlName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "group",
                    "defaultValue": "this.formBuilder.group({\n    [this.name]: [''],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "ModelControlType",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "isDynamic",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "files",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "File[]",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "filesControl",
                    "defaultValue": "new FormGroup({ model: new FormControl<File[]>([]) })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "fileType",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "inputId",
                    "defaultValue": "'file-upload-input'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "isMultiple",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "$modelControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "alertService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AlertService",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelControlType",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "clearFileSelection",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "handleDragOver",
                    "args": [
                        {
                            "name": "event",
                            "type": "DragEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "DragEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleDrop",
                    "args": [
                        {
                            "name": "event",
                            "type": "DragEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "DragEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleFileChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleRemove",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "processFiles",
                    "args": [
                        {
                            "name": "files",
                            "type": "FileList | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "files",
                            "type": "FileList | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initMonitoringChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "setInitialValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, forwardRef } from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { FileUploadType } from '../../../types/file-upload.type';\nimport { ModelControl } from '../model-control';\n\n@Component({\n  standalone: true,\n  selector: 'app-file-upload',\n  styleUrl: './app-file-upload.component.scss',\n  templateUrl: './app-file-upload.component.html',\n  imports: [ReactiveFormsModule],\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AppFileUploadComponent),\n    },\n  ],\n})\nexport class AppFileUploadComponent extends ModelControl {\n  @Input() maxFiles: number = 1;\n  @Input() fileTypes: FileUploadType[] = ['*/*'];\n  @Input() limitErrorMessage: string = `File limit reached`;\n\n  public files: File[] = [];\n  public isMultiple?: boolean;\n  public fileType: string = '';\n  public inputId: string = 'file-upload-input';\n  public filesControl = new FormGroup({ model: new FormControl<File[]>([]) });\n\n  ngOnInit() {\n    this.isMultiple = this.maxFiles > 1;\n    this.fileType = this.fileTypes.join(',');\n    this.inputId = `${this.inputId}-${this.name}`;\n\n    if (!this.isDynamic) this.initMonitoringChanges();\n\n    this.$modelControl = this.filesControl.valueChanges.subscribe(() => {\n      this.group.patchValue({ [this.formControlName]: this.files });\n    });\n  }\n\n  public handleDragOver(event: DragEvent) {\n    event.preventDefault();\n  }\n\n  public handleDrop(event: DragEvent) {\n    event.preventDefault();\n    this.processFiles(event.dataTransfer?.files);\n  }\n\n  public handleFileChange(event: Event) {\n    const inputElement = event.target as HTMLInputElement;\n    this.processFiles(inputElement.files);\n  }\n\n  public handleRemove(index: number) {\n    this.files.splice(index, 1);\n    this.filesControl.setValue({ model: [] });\n  }\n\n  public processFiles(files?: FileList | null) {\n    if (!files || !files.length) return;\n\n    const items = [];\n    for (let i = 0; i < files.length; i++) items.push(files[i]);\n\n    const filesControl =\n      this.maxFiles === 1 ? items : [...this.files, ...items];\n\n    if (files.length > this.maxFiles || filesControl.length > this.maxFiles) {\n      this.alertService.snackBar.open(this.limitErrorMessage, 'Close');\n      return;\n    }\n\n    this.files = filesControl;\n    this.filesControl.setValue({ model: [] });\n  }\n\n  public clearFileSelection() {\n    this.files = [];\n    this.filesControl.reset();\n  }\n}\n\nexport const APP_FILE_UPLOAD_DEFAULT_VALUES = {\n  maxFiles: 1,\n  fileTypes: ['*/*'],\n  limitErrorMessage: `File limit reached`,\n};\n",
            "styleUrl": "./app-file-upload.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "ModelControl"
            ],
            "templateData": "<article id=\"app-file-upload\" [formGroup]=\"filesControl\">\n  <input\n    type=\"file\"\n    [name]=\"name\"\n    [id]=\"inputId\"\n    [accept]=\"fileType\"\n    [formGroup]=\"group\"\n    formControlName=\"model\"\n    (change)=\"handleFileChange($event)\"\n    [attr.multiple]=\"isMultiple ? true : null\"\n  />\n\n  <label\n    [for]=\"inputId\"\n    (drop)=\"handleDrop($event)\"\n    (dragover)=\"handleDragOver($event)\"\n  >\n    <h3>{{ label }}</h3>\n\n    @if(!files.length) {\n    <p>{{ placeholder }}</p>\n    } @if(files.length === 1) {\n    <span>{{ files[0].name }}</span>\n    } @else if(files.length > 1) {\n    <span>{{ files.length }}/{{ maxFiles }}</span>\n    }\n  </label>\n\n  @if(files.length > 1) {\n  <ul>\n    @for (item of files; track $index) {\n    <li>\n      <span>{{ item.name }}</span>\n      <button type=\"button\" (click)=\"handleRemove($index)\">\n        <i class=\"iconify\" data-icon=\"ep:close-bold\"></i>\n      </button>\n    </li>\n    }\n  </ul>\n  }\n</article>\n"
        },
        {
            "name": "AppFormGeneratorComponent",
            "id": "component-AppFormGeneratorComponent-7121d2f19f4a13df202d900b53f2b9959f035e69db3b88199ad5bc1cf2e0221c4ea47c4dcb3305db59eb209f4be9908e5ba38c05300f554cce07b781472fdab8",
            "file": "src/app/modules/@core/components/_form-generator/app-form-generator/app-form-generator.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-generator",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-form-generator.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "actionPositionX",
                    "defaultValue": "'right'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "\"left\" | \"right\" | \"center\"",
                    "decorators": []
                },
                {
                    "name": "actionPositionY",
                    "defaultValue": "'top'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "\"top\" | \"bottom\"",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "column",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "fieldGap",
                    "defaultValue": "'16px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "required": true,
                    "name": "fields",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 37,
                    "type": "IFormGeneratorField[][]",
                    "decorators": []
                },
                {
                    "required": true,
                    "name": "formGroup",
                    "defaultValue": "this.formBuilder.group({})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 40,
                    "type": "FormGroup",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "mobileColumn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "submitText",
                    "defaultValue": "'Submit'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "watchValues",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onSubmit",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "EventEmitter"
                },
                {
                    "name": "onValueChanges",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "defaultFieldWidth",
                    "defaultValue": "'100%'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "dynamicColumClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "uniqueId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handleSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "initWatchValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgStyle"
                },
                {
                    "name": "NgClass"
                },
                {
                    "name": "JsonPipe",
                    "type": "pipe"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "FieldGeneratorDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { JsonPipe, NgClass, NgStyle } from '@angular/common';\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation,\n  booleanAttribute,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport { IFormGeneratorField } from '../app-form-generator.interface';\nimport { FieldGeneratorDirective } from '../field-generator.directive';\n\n@Component({\n  standalone: true,\n  selector: 'app-form-generator',\n  encapsulation: ViewEncapsulation.None,\n  styleUrl: './app-form-generator.component.scss',\n  templateUrl: './app-form-generator.component.html',\n  imports: [\n    NgStyle,\n    NgClass,\n    JsonPipe,\n    ReactiveFormsModule,\n    FieldGeneratorDirective,\n  ],\n})\nexport class AppFormGeneratorComponent {\n  @Input() id: string = '';\n  @Input() fieldGap: string = '16px';\n  @Input() submitText: string = 'Submit';\n\n  @Input() actionPositionY: 'top' | 'bottom' = 'top';\n  @Input() actionPositionX: 'left' | 'right' | 'center' = 'right';\n\n  @Input({ transform: booleanAttribute }) column: boolean = false;\n  @Input({ required: true }) fields: IFormGeneratorField<{}>[][] = [];\n  @Input({ transform: booleanAttribute }) watchValues: boolean = false;\n  @Input({ transform: booleanAttribute }) mobileColumn: boolean = false;\n  @Input({ required: true }) formGroup: FormGroup = this.formBuilder.group({});\n\n  @Output() onSubmit = new EventEmitter();\n  @Output() onValueChanges = new EventEmitter();\n\n  public uniqueId: string = '';\n  public dynamicColumClass: string = '';\n  public readonly defaultFieldWidth: string = '100%';\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  ngOnInit() {\n    this.initWatchValues();\n    this.uniqueId = `app-form-generator-${this.id}`;\n  }\n\n  private initWatchValues() {\n    if (!this.watchValues) return;\n\n    this.formGroup.valueChanges.subscribe((value) => {\n      this.onValueChanges.emit(value);\n    });\n  }\n\n  public handleSubmit() {\n    this.onSubmit.emit(this.formGroup.value);\n  }\n}\n",
            "styleUrl": "./app-form-generator.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 47,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<form\n  novalidate\n  [id]=\"uniqueId\"\n  [formGroup]=\"formGroup\"\n  (ngSubmit)=\"handleSubmit()\"\n  class=\"app-form-generator\"\n>\n  <nav class=\"{{ actionPositionY }} {{ actionPositionX }}\">\n    <button class=\"btn-primary\" [disabled]=\"formGroup.invalid\" type=\"submit\">\n      {{ submitText }}\n    </button>\n  </nav>\n\n  <section>\n    @for (row of fields; track row) {\n    <article\n      [ngStyle]=\"{ gap: fieldGap }\"\n      [ngClass]=\"{ column, 'mobile-column': mobileColumn }\"\n    >\n      @for (item of row; track $index) {\n      <div [ngStyle]=\"{ width: item.width || defaultFieldWidth }\">\n        <ng-container\n          appFieldGenerator\n          [group]=\"formGroup\"\n          [field]=\"item\"\n        ></ng-container>\n      </div>\n      }\n    </article>\n    }\n  </section>\n</form>\n"
        },
        {
            "name": "AppFormImageComponent",
            "id": "component-AppFormImageComponent-e2d9a9691c45ff0b6e435ff37879f34fcbc7c7f47ef1262548337b342d46e4c30398a603aa99cfbeb23265fe04dd4fced27d5fed356e9a288f5ebea57f3b83d7",
            "file": "src/app/modules/@core/components/form/app-form-image/app-form-image.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-image",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-form-image.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  imports: [],\n  standalone: true,\n  selector: 'app-form-image',\n  styleUrl: './app-form-image.component.scss',\n  templateUrl: './app-form-image.component.html',\n})\nexport class AppFormImageComponent {}\n",
            "styleUrl": "./app-form-image.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>app-form-image works!</p>\n"
        },
        {
            "name": "AppImageCropperComponent",
            "id": "component-AppImageCropperComponent-0b71fcbed20117e3462da9bbf1a3fdfcef2e1d2061141383469268d3894db71af2125fe2271efaabd163f0ee905fafc91a422d750068e9f884e8f719fbbe917c",
            "file": "src/app/modules/@core/components/form/app-image-cropper/app-image-cropper.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    multi: true, provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AppImageCropperComponent),\n}",
                    "type": "component"
                }
            ],
            "selector": "app-image-cropper",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-image-cropper.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "aspectRatio",
                    "defaultValue": "APP_IMAGE_CROPPER_DEFAULT_VALUES.aspectRatio",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "background",
                    "defaultValue": "APP_IMAGE_CROPPER_DEFAULT_VALUES.background",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "buttonText",
                    "defaultValue": "APP_IMAGE_CROPPER_DEFAULT_VALUES.buttonText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "cropperMinWidth",
                    "defaultValue": "APP_IMAGE_CROPPER_DEFAULT_VALUES.cropperMinWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "height",
                    "defaultValue": "APP_IMAGE_CROPPER_DEFAULT_VALUES.height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "imageURL",
                    "defaultValue": "APP_IMAGE_CROPPER_DEFAULT_VALUES.imageURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "maintainAspectRatio",
                    "defaultValue": "APP_IMAGE_CROPPER_DEFAULT_VALUES.maintainAspectRatio",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "onlyScaleDown",
                    "defaultValue": "APP_IMAGE_CROPPER_DEFAULT_VALUES.onlyScaleDown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "rounded",
                    "defaultValue": "APP_IMAGE_CROPPER_DEFAULT_VALUES.rounded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "scale",
                    "defaultValue": "APP_IMAGE_CROPPER_DEFAULT_VALUES.scale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "appearance",
                    "defaultValue": "'fill'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"outline\" | \"fill\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "className",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "formControlName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "group",
                    "defaultValue": "this.formBuilder.group({\n    [this.name]: [''],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "ModelControlType",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "isDynamic",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "canvasRotation",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "containWithinAspectRatio",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "imageChangedEvent",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "inputId",
                    "defaultValue": "'image-upload-input'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "rotation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "sanitizer",
                    "defaultValue": "inject(DomSanitizer)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showCropper",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "transform",
                    "defaultValue": "{ translateUnit: 'px' }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ImageTransform",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "translateH",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "translateV",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "$modelControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "alertService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AlertService",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelControlType",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "cropperReady",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "fileChangeEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "flipAfterRotate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 134,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "flipHorizontal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "flipVertical",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "imageCropped",
                    "args": [
                        {
                            "name": "event",
                            "type": "ImageCroppedEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "ImageCroppedEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "imageLoaded",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "loadImageFailed",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resetImage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "rotateLeft",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "toggleContainWithinAspectRatio",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 130,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "zoomIn",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 125,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "zoomOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "initMonitoringChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "setInitialValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ImageCropperModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  booleanAttribute,\n  forwardRef,\n  inject,\n} from '@angular/core';\nimport { FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {\n  ImageCroppedEvent,\n  ImageCropperModule,\n  ImageTransform,\n} from 'ngx-image-cropper';\nimport { ModelControl } from '../model-control';\n\n@Component({\n  standalone: true,\n  selector: 'app-image-cropper',\n  styleUrl: './app-image-cropper.component.scss',\n  templateUrl: './app-image-cropper.component.html',\n  imports: [ImageCropperModule, FormsModule],\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AppImageCropperComponent),\n    },\n  ],\n})\nexport class AppImageCropperComponent extends ModelControl {\n  @Input() scale: number = APP_IMAGE_CROPPER_DEFAULT_VALUES.scale;\n  @Input() height: string = APP_IMAGE_CROPPER_DEFAULT_VALUES.height;\n  @Input() imageURL: string = APP_IMAGE_CROPPER_DEFAULT_VALUES.imageURL;\n  @Input() background: string = APP_IMAGE_CROPPER_DEFAULT_VALUES.background;\n  @Input() buttonText: string = APP_IMAGE_CROPPER_DEFAULT_VALUES.buttonText;\n  @Input() aspectRatio: number = APP_IMAGE_CROPPER_DEFAULT_VALUES.aspectRatio;\n\n  @Input() cropperMinWidth: number =\n    APP_IMAGE_CROPPER_DEFAULT_VALUES.cropperMinWidth;\n  @Input({ transform: booleanAttribute }) rounded =\n    APP_IMAGE_CROPPER_DEFAULT_VALUES.rounded;\n  @Input({ transform: booleanAttribute }) onlyScaleDown =\n    APP_IMAGE_CROPPER_DEFAULT_VALUES.onlyScaleDown;\n  @Input({ transform: booleanAttribute }) maintainAspectRatio =\n    APP_IMAGE_CROPPER_DEFAULT_VALUES.maintainAspectRatio;\n\n  public translateH = 0;\n  public translateV = 0;\n  public loading = false;\n  public rotation?: number;\n  public canvasRotation = 0;\n  public showCropper = false;\n  public imageChangedEvent = '';\n  public containWithinAspectRatio = false;\n  public inputId: string = 'image-upload-input';\n  public transform: ImageTransform = { translateUnit: 'px' };\n\n  private sanitizer = inject(DomSanitizer);\n\n  ngOnInit() {\n    if (this.rounded) this.aspectRatio = 4 / 4;\n    if (!this.isDynamic) this.initMonitoringChanges();\n\n    this.inputId = `${this.inputId}-${this.name}`;\n  }\n\n  public imageCropped(event: ImageCroppedEvent) {\n    const preview = this.sanitizer.bypassSecurityTrustUrl(\n      event.objectUrl || event.base64 || ''\n    );\n\n    this.group.patchValue({ [this.formControlName]: event.objectUrl });\n  }\n\n  public imageLoaded() {\n    this.showCropper = true;\n  }\n\n  public cropperReady() {\n    this.loading = false;\n  }\n\n  public loadImageFailed() {\n    console.error('Load image failed');\n  }\n\n  public fileChangeEvent(event: any): void {\n    this.loading = true;\n    this.imageChangedEvent = event;\n\n    setTimeout(() => this.resetImage());\n  }\n\n  public rotateLeft() {\n    this.loading = true;\n    setTimeout(() => {\n      this.canvasRotation--;\n      this.flipAfterRotate();\n    });\n  }\n\n  public flipHorizontal() {\n    this.transform = { ...this.transform, flipH: !this.transform.flipH };\n  }\n\n  public flipVertical() {\n    this.transform = { ...this.transform, flipV: !this.transform.flipV };\n  }\n\n  public resetImage() {\n    this.scale = 1;\n    this.rotation = 0;\n    this.canvasRotation = 0;\n    this.transform = { translateUnit: 'px' };\n  }\n\n  public zoomOut() {\n    this.scale -= 0.1;\n    this.transform = { ...this.transform, scale: this.scale };\n  }\n\n  public zoomIn() {\n    this.scale += 0.1;\n    this.transform = { ...this.transform, scale: this.scale };\n  }\n\n  public toggleContainWithinAspectRatio() {\n    this.containWithinAspectRatio = !this.containWithinAspectRatio;\n  }\n\n  private flipAfterRotate() {\n    this.transform = {\n      ...this.transform,\n      flipH: this.transform.flipV,\n      flipV: this.transform.flipH,\n    };\n\n    this.translateH = 0;\n    this.translateV = 0;\n  }\n}\n\nexport const APP_IMAGE_CROPPER_DEFAULT_VALUES = {\n  scale: 1,\n  imageURL: '',\n  height: '200px',\n  aspectRatio: 4 / 3,\n  background: 'black',\n  cropperMinWidth: 128,\n  buttonText: 'Select file',\n  rounded: false,\n  onlyScaleDown: true,\n  maintainAspectRatio: true,\n};\n",
            "styleUrl": "./app-image-cropper.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "ModelControl"
            ],
            "templateData": "<label [for]=\"inputId\" class=\"form-control-label\">{{ label }}</label>\n\n<article id=\"app-image-cropper\">\n  <input\n    type=\"file\"\n    [id]=\"inputId\"\n    accept=\"image/*\"\n    class=\"h-0 w-0 invisible\"\n    (change)=\"fileChangeEvent($event)\"\n  />\n\n  <section [class.disable-actions]=\"!(imageURL || imageChangedEvent)\">\n    <label [for]=\"inputId\">\n      <i class=\"iconify\" data-icon=\"uil:image-upload\"></i>\n    </label>\n\n    <hr />\n\n    <button type=\"button\" (click)=\"rotateLeft()\">\n      <i\n        class=\"iconify\"\n        data-flip=\"horizontal\"\n        data-icon=\"tabler:rotate-rectangle\"\n      ></i>\n    </button>\n    <button type=\"button\" (click)=\"flipHorizontal()\">\n      <i class=\"iconify\" data-icon=\"gg:edit-flip-h\"></i>\n    </button>\n    <button type=\"button\" (click)=\"flipVertical()\">\n      <i class=\"iconify\" data-icon=\"gg:edit-flip-v\"></i>\n    </button>\n    <button type=\"button\" (click)=\"zoomOut()\">\n      <i class=\"iconify\" data-icon=\"octicon:zoom-out-24\"></i>\n    </button>\n    <button type=\"button\" (click)=\"zoomIn()\">\n      <i class=\"iconify\" data-icon=\"octicon:zoom-in-24\"></i>\n    </button>\n    <button type=\"button\" (click)=\"toggleContainWithinAspectRatio()\">\n      <i class=\"iconify\" data-icon=\"fluent:table-image-20-regular\"></i>\n    </button>\n\n    <button type=\"button\" (click)=\"resetImage()\">\n      <i class=\"iconify\" data-icon=\"system-uicons:reset\"></i>\n    </button>\n  </section>\n\n  <div>\n    <image-cropper\n      format=\"png\"\n      output=\"blob\"\n      [imageURL]=\"imageURL\"\n      [roundCropper]=\"rounded\"\n      [allowMoveImage]=\"true\"\n      [(transform)]=\"transform\"\n      [aspectRatio]=\"aspectRatio\"\n      [style.max-height]=\"height\"\n      [backgroundColor]=\"background\"\n      [onlyScaleDown]=\"onlyScaleDown\"\n      [canvasRotation]=\"canvasRotation\"\n      [cropperMinWidth]=\"cropperMinWidth\"\n      [imageChangedEvent]=\"imageChangedEvent\"\n      [maintainAspectRatio]=\"maintainAspectRatio\"\n      [style.display]=\"showCropper ? null : 'none'\"\n      [containWithinAspectRatio]=\"containWithinAspectRatio\"\n      (imageLoaded)=\"imageLoaded()\"\n      (cropperReady)=\"cropperReady()\"\n      (imageCropped)=\"imageCropped($event)\"\n      (loadImageFailed)=\"loadImageFailed()\"\n    ></image-cropper>\n\n    @if(!(imageURL || imageChangedEvent)) {\n    <label [for]=\"inputId\" [style.height]=\"height\">\n      {{ buttonText }}\n    </label>\n    } @if(loading) {\n    <div class=\"loader\">Loading...</div>\n    }\n  </div>\n</article>\n"
        },
        {
            "name": "AppInputComponent",
            "id": "component-AppInputComponent-6de5ea60ece5f09eb83639e5fe4ccbd130c47f8ac0306db1926079b518708e4ff292d875f8f820271d9ea418ffa3220f9a4df1c7f91d58ef9e854a43ef09a6ba",
            "file": "src/app/modules/@core/components/form/app-input/app-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    multi: true, provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AppInputComponent),\n}",
                    "type": "component"
                }
            ],
            "selector": "app-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "InputType",
                    "decorators": []
                },
                {
                    "name": "appearance",
                    "defaultValue": "'fill'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"outline\" | \"fill\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "className",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "formControlName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "group",
                    "defaultValue": "this.formBuilder.group({\n    [this.name]: [''],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "ModelControlType",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "isDynamic",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "$modelControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "alertService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AlertService",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelControlType",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initMonitoringChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "setInitialValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, forwardRef } from '@angular/core';\nimport {\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { InputType } from '../../../types/input.type';\nimport { ModelControl } from '../model-control';\n\n@Component({\n  standalone: true,\n  selector: 'app-input',\n  imports: [MatInputModule, FormsModule, ReactiveFormsModule],\n  styleUrl: './app-input.component.scss',\n  templateUrl: './app-input.component.html',\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AppInputComponent),\n    },\n  ],\n})\nexport class AppInputComponent extends ModelControl {\n  @Input() type: InputType = 'text';\n\n  ngOnInit() {\n    if (!this.isDynamic) this.initMonitoringChanges();\n  }\n}\n",
            "styleUrl": "./app-input.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "ModelControl"
            ],
            "templateData": "<mat-form-field\n  id=\"app-input\"\n  mode=\"outline\"\n  [class]=\"className\"\n  [formGroup]=\"group\"\n  [appearance]=\"appearance\"\n>\n  <mat-label>{{ label }}</mat-label>\n  <input\n    matInput\n    [id]=\"id\"\n    [name]=\"name\"\n    [type]=\"type\"\n    [placeholder]=\"placeholder\"\n    [formControlName]=\"formControlName\"\n  />\n</mat-form-field>\n"
        },
        {
            "name": "AppLoadingComponent",
            "id": "component-AppLoadingComponent-017933195c7ff1c500bd00620119f9950c776caa1cb1007d9b54fc727dc354651d585b3fcfcd956fcc897bbeb66e0f2105dacdc78aa12626d356454c61c96a58",
            "file": "src/app/modules/@core/components/app-loading/app-loading.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-loading",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-loading.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "store",
                    "defaultValue": "inject(LoadingStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "AnimateDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject } from '@angular/core';\nimport { LoadingStore } from '../../../../store/loading.store';\nimport { AnimateDirective } from '../../directives/animate.directive';\n\n@Component({\n  imports: [AnimateDirective],\n  standalone: true,\n  selector: 'app-loading',\n  styleUrl: './app-loading.component.scss',\n  templateUrl: './app-loading.component.html',\n})\nexport class AppLoadingComponent {\n  public readonly store = inject(LoadingStore);\n}\n",
            "styleUrl": "./app-loading.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "@if(store.show()) {\n<section id=\"app-loading\">\n  <figure animate animation=\"animate__pulse\" class=\"animate__infinite\">\n    <img src=\"favicon.ico\" alt=\"ANGULAR\" />\n  </figure>\n\n  <h4>{{ store.message() }}</h4>\n</section>\n}\n"
        },
        {
            "name": "AppRadioButtonComponent",
            "id": "component-AppRadioButtonComponent-d278c8ffe35d70d8781877fe104ce168d89fd5b6a858fff3a464102984a109da0ec0b904b15f6b4d6c2e06cf4f643321d08d7417be92b7fde7b4a1c394624c06",
            "file": "src/app/modules/@core/components/form/app-radio-button/app-radio-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    multi: true, provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AppRadioButtonComponent),\n}",
                    "type": "component"
                }
            ],
            "selector": "app-radio-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-radio-button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "required": true,
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 27,
                    "type": "IFormOption[]",
                    "decorators": []
                },
                {
                    "name": "appearance",
                    "defaultValue": "'fill'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"outline\" | \"fill\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "className",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "formControlName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "group",
                    "defaultValue": "this.formBuilder.group({\n    [this.name]: [''],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "ModelControlType",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "isDynamic",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "$modelControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "alertService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AlertService",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelControlType",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initMonitoringChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "setInitialValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "MatRadioModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, forwardRef } from '@angular/core';\nimport {\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { IFormOption } from '../../../interfaces/app-form.interface';\nimport { ModelControl } from '../model-control';\n\n@Component({\n  standalone: true,\n  selector: 'app-radio-button',\n  styleUrl: './app-radio-button.component.scss',\n  templateUrl: './app-radio-button.component.html',\n  imports: [FormsModule, MatRadioModule, MatInputModule, ReactiveFormsModule],\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AppRadioButtonComponent),\n    },\n  ],\n})\nexport class AppRadioButtonComponent extends ModelControl {\n  @Input({ required: true }) items: IFormOption[] = [];\n\n  ngOnInit() {\n    if (!this.isDynamic) this.initMonitoringChanges();\n  }\n}\n",
            "styleUrl": "./app-radio-button.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "ModelControl"
            ],
            "templateData": "<article id=\"app-radio-button\" [class]=\"className\" [formGroup]=\"group\">\n  <mat-label\n    class=\"form-control-label\"\n    id=\"example-radio-group-label-{{ name }}\"\n  >\n    {{ label }}\n  </mat-label>\n\n  <mat-radio-group [id]=\"id\" [name]=\"name\" [formControlName]=\"formControlName\">\n    @for (item of items; track item) {\n    <mat-radio-button [value]=\"item.value\">{{ item.label }}</mat-radio-button>\n    }\n  </mat-radio-group>\n</article>\n"
        },
        {
            "name": "AppSelectComponent",
            "id": "component-AppSelectComponent-e16b205faa55406a280869929165c1e15e9a6f2356fcec6740257ab8465b4011f2fc4fc3f9fa3229f59cd10047f94a4de9f9ac51ab7afe326336c77a86606f4e",
            "file": "src/app/modules/@core/components/form/app-select/app-select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    multi: true, provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AppSelectComponent),\n}",
                    "type": "component"
                }
            ],
            "selector": "app-select",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-select.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "required": true,
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 26,
                    "type": "IFormOption[]",
                    "decorators": []
                },
                {
                    "name": "appearance",
                    "defaultValue": "'fill'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"outline\" | \"fill\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "className",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "formControlName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "group",
                    "defaultValue": "this.formBuilder.group({\n    [this.name]: [''],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "ModelControlType",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "isDynamic",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "$modelControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "alertService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AlertService",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelControlType",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initMonitoringChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "setInitialValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatSelectModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, forwardRef } from '@angular/core';\nimport {\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { MatSelectModule } from '@angular/material/select';\nimport { IFormOption } from '../../../interfaces/app-form.interface';\nimport { ModelControl } from '../model-control';\n\n@Component({\n  standalone: true,\n  selector: 'app-select',\n  styleUrl: './app-select.component.scss',\n  templateUrl: './app-select.component.html',\n  imports: [MatSelectModule, FormsModule, ReactiveFormsModule],\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AppSelectComponent),\n    },\n  ],\n})\nexport class AppSelectComponent extends ModelControl {\n  @Input({ required: true }) items: IFormOption[] = [];\n\n  ngOnInit() {\n    if (!this.isDynamic) this.initMonitoringChanges();\n  }\n}\n",
            "styleUrl": "./app-select.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "ModelControl"
            ],
            "templateData": "<mat-form-field\n  id=\"app-select\"\n  [class]=\"className\"\n  [formGroup]=\"group\"\n  [appearance]=\"appearance\"\n>\n  <mat-label>{{ label }}</mat-label>\n  <mat-select\n    [id]=\"id\"\n    [placeholder]=\"placeholder\"\n    [formControlName]=\"formControlName\"\n  >\n    @for (item of items; track item) {\n    <mat-option [value]=\"item.value\">{{ item.label }}</mat-option>\n    }\n  </mat-select>\n</mat-form-field>\n"
        },
        {
            "name": "AppSliderComponent",
            "id": "component-AppSliderComponent-944931814059df03b7c527e39e9839205c092472fd6b6daf77f53416e764e1973d4c9d897fcd0ecebbe0c182c5345525d4c355321beafc5dfa1003e5de073f7e",
            "file": "src/app/modules/@core/components/form/app-slider/app-slider.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    multi: true, provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AppSliderComponent),\n}",
                    "type": "component"
                }
            ],
            "selector": "app-slider",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-slider.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "required": true,
                    "name": "max",
                    "defaultValue": "APP_SLIDER_UPLOAD_DEFAULT_VALUES.max",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 29,
                    "type": "number",
                    "decorators": []
                },
                {
                    "required": true,
                    "name": "min",
                    "defaultValue": "APP_SLIDER_UPLOAD_DEFAULT_VALUES.min",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 28,
                    "type": "number",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "range",
                    "defaultValue": "APP_SLIDER_UPLOAD_DEFAULT_VALUES.range",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "showTickMarks",
                    "defaultValue": "APP_SLIDER_UPLOAD_DEFAULT_VALUES.showTickMarks",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "required": true,
                    "name": "step",
                    "defaultValue": "APP_SLIDER_UPLOAD_DEFAULT_VALUES.step",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 30,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "appearance",
                    "defaultValue": "'fill'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"outline\" | \"fill\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "className",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "formControlName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "group",
                    "defaultValue": "this.formBuilder.group({\n    [this.name]: [''],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "ModelControlType",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "isDynamic",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentGroup",
                    "defaultValue": "this.group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "maxValue",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "minValue",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "rangeControl",
                    "defaultValue": "new FormGroup({\n    min: new FormControl<number | null>(null),\n    max: new FormControl<number | null>(null),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "$modelControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "alertService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AlertService",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelControlType",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setLabelValues",
                    "args": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setRangeInitialValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "initMonitoringChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "setInitialValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatSliderModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, booleanAttribute, forwardRef } from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { ModelControlType } from '../../../types/model-control.type';\nimport { SliderRangeValue } from '../../../types/slider.type';\nimport { ModelControl } from '../model-control';\n\n@Component({\n  standalone: true,\n  selector: 'app-slider',\n  styleUrl: './app-slider.component.scss',\n  templateUrl: './app-slider.component.html',\n  imports: [MatSliderModule, ReactiveFormsModule],\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AppSliderComponent),\n    },\n  ],\n})\nexport class AppSliderComponent extends ModelControl {\n  @Input({ required: true }) min: number = APP_SLIDER_UPLOAD_DEFAULT_VALUES.min;\n  @Input({ required: true }) max: number = APP_SLIDER_UPLOAD_DEFAULT_VALUES.max;\n  @Input({ required: true }) step: number =\n    APP_SLIDER_UPLOAD_DEFAULT_VALUES.step;\n  @Input({ transform: booleanAttribute }) range: boolean =\n    APP_SLIDER_UPLOAD_DEFAULT_VALUES.range;\n  @Input({ transform: booleanAttribute }) showTickMarks: boolean =\n    APP_SLIDER_UPLOAD_DEFAULT_VALUES.showTickMarks;\n\n  public minValue: number = 0;\n  public maxValue: number = 0;\n  public currentGroup: FormGroup = this.group;\n\n  public rangeControl = new FormGroup({\n    min: new FormControl<number | null>(null),\n    max: new FormControl<number | null>(null),\n  });\n\n  ngOnInit() {\n    if (!this.isDynamic) this.initMonitoringChanges();\n\n    if (this.range) {\n      this.currentGroup = this.rangeControl;\n      this.setRangeInitialValue();\n    } else {\n      this.currentGroup = this.group;\n      this.setLabelValues(this.initialValue);\n    }\n\n    this.$modelControl = this.rangeControl.valueChanges.subscribe((value) => {\n      this.group.patchValue({ [this.formControlName]: value });\n    });\n\n    this.group.valueChanges.subscribe((value) => {\n      this.setLabelValues(value[this.formControlName]);\n    });\n  }\n\n  private setLabelValues(value?: ModelControlType) {\n    if (!value) {\n      this.minValue = this.min;\n      this.maxValue = this.max;\n    } else if (typeof value === 'object') {\n      this.minValue = (value as SliderRangeValue)?.min || this.min;\n      this.maxValue = (value as SliderRangeValue)?.max || this.max;\n    } else this.maxValue = Number(value) || this.max;\n  }\n\n  private setRangeInitialValue() {\n    const controlValue = this.group.controls[this.formControlName].value;\n\n    if (controlValue) {\n      this.rangeControl.setValue({\n        min: controlValue.min,\n        max: controlValue.max,\n      });\n\n      this.setLabelValues(controlValue);\n      return;\n    }\n\n    if (typeof this.initialValue !== 'object' || !this.initialValue) return;\n\n    this.rangeControl.setValue({\n      min: (this.initialValue as SliderRangeValue).min,\n      max: (this.initialValue as SliderRangeValue).max,\n    });\n  }\n}\n\nexport const APP_SLIDER_UPLOAD_DEFAULT_VALUES = {\n  min: 0,\n  max: 0,\n  step: 0,\n  range: false,\n  showTickMarks: false,\n};\n",
            "styleUrl": "./app-slider.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "ModelControl"
            ],
            "templateData": "<article id=\"app-slider\" [class]=\"className\" [formGroup]=\"currentGroup\">\n  <label class=\"form-control-label\">{{ label }}</label>\n\n  <section>\n    <span>{{ minValue }}</span>\n    <span>{{ maxValue }}</span>\n  </section>\n\n  <mat-slider\n    [min]=\"min\"\n    [max]=\"max\"\n    [step]=\"step\"\n    [showTickMarks]=\"showTickMarks\"\n  >\n    @if(!range) {\n    <input matSliderThumb [value]=\"min\" [formControlName]=\"formControlName\" />\n    } @else {\n    <input [value]=\"min\" formControlName=\"min\" matSliderStartThumb />\n    <input [value]=\"min\" formControlName=\"max\" matSliderEndThumb />\n    }\n  </mat-slider>\n</article>\n"
        },
        {
            "name": "AppTableActionComponent",
            "id": "component-AppTableActionComponent-6be2ab6041c8346cc2b781535fbdc7f8765be2f2085e42c72bb486fc02064ac891d4d72686e1e171811c445e4ae2d0ea291ad4855163e7f9af62a11e953ec67a",
            "file": "src/app/modules/@core/components/app-table/app-table-action/app-table-action.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table-action",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-table-action.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "required": true,
                    "name": "actions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 23,
                    "type": "ITableCellAction<any>[]",
                    "decorators": []
                },
                {
                    "required": true,
                    "name": "element",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 22,
                    "type": "object",
                    "decorators": []
                },
                {
                    "required": true,
                    "name": "index",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 21,
                    "type": "number",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "menuMode",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatTableModule",
                    "type": "module"
                },
                {
                    "name": "MatMenuModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  booleanAttribute,\n} from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTableModule } from '@angular/material/table';\nimport { ITableCellAction } from '../../../interfaces/app-table.interface';\n\n@Component({\n  standalone: true,\n  selector: 'app-table-action',\n  encapsulation: ViewEncapsulation.None,\n  styleUrl: './app-table-action.component.scss',\n  templateUrl: './app-table-action.component.html',\n  imports: [MatTableModule, MatMenuModule, MatButtonModule],\n})\nexport class AppTableActionComponent {\n  @Input({ required: true }) index: number = 0;\n  @Input({ required: true }) element: object = {};\n  @Input({ required: true }) actions: ITableCellAction<any>[] = [];\n  @Input({ transform: booleanAttribute }) menuMode: boolean = false;\n}\n",
            "styleUrl": "./app-table-action.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<section id=\"app-table-action\">\n  @if(menuMode) {\n  <button mat-button [matMenuTriggerFor]=\"menu\">\n    <i class=\"iconify text-lg\" data-icon=\"pepicons-pencil:dots-y\"></i>\n  </button>\n\n  <mat-menu #menu=\"matMenu\">\n    @for (action of actions; track $index) {\n    <button mat-menu-item (click)=\"action.callback(element, index)\">\n      <i class=\"iconify\" [attr.data-icon]=\"action.icon\"></i>\n      {{ action.title }}\n    </button>\n\n    }\n  </mat-menu>\n  } @else {\n  <article>\n    @for (action of actions; track $index) {\n    <button\n      mat-button\n      [title]=\"action.title\"\n      (click)=\"action.callback(element, index)\"\n    >\n      <i class=\"iconify text-lg\" [attr.data-icon]=\"action.icon\"></i>\n    </button>\n    }\n  </article>\n  }\n</section>\n"
        },
        {
            "name": "AppTableComponent",
            "id": "component-AppTableComponent-2c74bbb6982de69b11e6ebda3c022f1767fa4c11a27fec1d7981529e667a39c2162a5ea2a0ce01872dc3b59ff153ee3e3c90d3b36cae79eeb854de14beff13bb",
            "file": "src/app/modules/@core/components/app-table/app-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "actionColTitle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "string",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "actionMenuMode",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "actions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "ITableCellAction<any>[]",
                    "decorators": []
                },
                {
                    "required": true,
                    "name": "columns",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 52,
                    "type": "ITableCell[]",
                    "decorators": []
                },
                {
                    "required": true,
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 51,
                    "type": "object[]",
                    "decorators": []
                },
                {
                    "name": "pagination",
                    "defaultValue": "this.defaultPagination",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "IPagination",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onPaginationChange",
                    "defaultValue": "new EventEmitter<IPagination>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "onSortChange",
                    "defaultValue": "new EventEmitter<Sort>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "actionColDef",
                    "defaultValue": "'action'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "columnsDefs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "dataSource",
                    "defaultValue": "new MatTableDataSource<object>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "defaultPagination",
                    "defaultValue": "{\n    pageSize: 5,\n    pageNumber: 1,\n    totalItems: 20,\n    pageSizeOptions: [5, 10, 20, 50],\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IPagination",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handlePageChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "PageEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "PageEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleSortChange",
                    "args": [
                        {
                            "name": "sortState",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "sortState",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatSortModule",
                    "type": "module"
                },
                {
                    "name": "MatTableModule",
                    "type": "module"
                },
                {
                    "name": "MatPaginatorModule",
                    "type": "module"
                },
                {
                    "name": "AppTableActionComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  booleanAttribute,\n} from '@angular/core';\nimport {\n  MatPaginator,\n  MatPaginatorModule,\n  PageEvent,\n} from '@angular/material/paginator';\nimport { MatSort, MatSortModule, Sort } from '@angular/material/sort';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { IPagination } from '../../interfaces/app-pagination.interface';\nimport {\n  ITableCell,\n  ITableCellAction,\n} from '../../interfaces/app-table.interface';\nimport { AppTableActionComponent } from './app-table-action/app-table-action.component';\n\n@Component({\n  standalone: true,\n  selector: 'app-table',\n  styleUrl: './app-table.component.scss',\n  templateUrl: './app-table.component.html',\n  imports: [\n    MatSortModule,\n    MatTableModule,\n    MatPaginatorModule,\n    AppTableActionComponent,\n  ],\n})\nexport class AppTableComponent {\n  public readonly actionColDef: string = 'action';\n  private readonly defaultPagination: IPagination = {\n    pageSize: 5,\n    pageNumber: 1,\n    totalItems: 20,\n    pageSizeOptions: [5, 10, 20, 50],\n  };\n\n  @Input() title: string = '';\n\n  @Input() actionColTitle: string = '';\n  @Input() actions: ITableCellAction<any>[] = [];\n  @Input({ transform: booleanAttribute }) actionMenuMode: boolean = false;\n\n  @Input({ required: true }) data: object[] = [];\n  @Input({ required: true }) columns: ITableCell[] = [];\n  @Input() pagination: IPagination = this.defaultPagination;\n\n  @Output() onSortChange = new EventEmitter<Sort>();\n  @Output() onPaginationChange = new EventEmitter<IPagination>();\n\n  public columnsDefs: string[] = [];\n  public dataSource = new MatTableDataSource<object>([]);\n\n  @ViewChild(MatSort) sort!: MatSort;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.columnsDefs = this.columns.map(({ def }) => def);\n    if (this.actions.length) this.columnsDefs.push(this.actionColDef);\n\n    this.pagination = { ...this.defaultPagination, ...this.pagination };\n\n    this.dataSource.data = this.data;\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.dataSource.data = changes['data'].currentValue;\n    this.pagination =\n      changes['pagination']?.currentValue || this.defaultPagination;\n  }\n\n  public handlePageChange(event: PageEvent) {\n    this.onPaginationChange.emit({\n      ...this.pagination,\n      pageSize: event.pageSize,\n      pageNumber: event.pageIndex + 1,\n    });\n  }\n\n  public handleSortChange(sortState: Sort) {\n    this.onSortChange.emit(sortState);\n  }\n}\n",
            "styleUrl": "./app-table.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 62
            },
            "extends": [],
            "templateData": "<article id=\"app-table\">\n  @if(!!title) {\n  <h2>{{ title }}</h2>\n  }\n\n  <section>\n    <table\n      matSort\n      mat-table\n      [dataSource]=\"dataSource\"\n      (matSortChange)=\"handleSortChange($event)\"\n    >\n      @for (item of columns; track $index) {\n      <ng-container [matColumnDef]=\"item.def\" [sticky]=\"!!item.sticky\">\n        <th mat-header-cell mat-sort-header *matHeaderCellDef>\n          {{ item.label }}\n        </th>\n        <td mat-cell *matCellDef=\"let element\">{{ element[item.key] }}</td>\n      </ng-container>\n      }\n\n      <ng-container>\n        @if(!!actions.length) {\n        <ng-container [matColumnDef]=\"actionColDef\">\n          <th mat-header-cell class=\"mat-header-action\" *matHeaderCellDef>\n            {{ actionColTitle }}\n          </th>\n          <td mat-cell *matCellDef=\"let element; let index = index\">\n            <app-table-action\n              [index]=\"index\"\n              [actions]=\"actions\"\n              [element]=\"element\"\n              [menuMode]=\"actionMenuMode\"\n            />\n          </td>\n        </ng-container>\n        }\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"columnsDefs\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: columnsDefs\"></tr>\n    </table>\n  </section>\n\n  <mat-paginator\n    showFirstLastButtons\n    [length]=\"pagination.totalItems\"\n    [pageSize]=\"pagination.pageSize\"\n    (page)=\"handlePageChange($event)\"\n    [pageIndex]=\"pagination.pageNumber - 1\"\n    [pageSizeOptions]=\"pagination.pageSizeOptions || []\"\n  />\n</article>\n"
        },
        {
            "name": "AppTextareaComponent",
            "id": "component-AppTextareaComponent-05e94c9c1f784b902ea89cdfb1122307890c4aa139ee60425055fd4ccf02a4315f48690dd9fc7d751dd460efcb40d0d7b91414bfda893fe68ab4ab2e43e956e3",
            "file": "src/app/modules/@core/components/form/app-textarea/app-textarea.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    multi: true, provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AppTextareaComponent),\n}",
                    "type": "component"
                }
            ],
            "selector": "app-textarea",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-textarea.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "rows",
                    "defaultValue": "3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "appearance",
                    "defaultValue": "'fill'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"outline\" | \"fill\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "className",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "formControlName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "group",
                    "defaultValue": "this.formBuilder.group({\n    [this.name]: [''],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "ModelControlType",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "isDynamic",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "$modelControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "alertService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AlertService",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelControlType",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initMonitoringChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "setInitialValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, forwardRef } from '@angular/core';\nimport {\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { ModelControl } from '../model-control';\n\n@Component({\n  standalone: true,\n  selector: 'app-textarea',\n  styleUrl: './app-textarea.component.scss',\n  templateUrl: './app-textarea.component.html',\n  imports: [MatInputModule, FormsModule, ReactiveFormsModule],\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AppTextareaComponent),\n    },\n  ],\n})\nexport class AppTextareaComponent extends ModelControl {\n  @Input() rows: number = 3;\n\n  ngOnInit() {\n    if (!this.isDynamic) this.initMonitoringChanges();\n  }\n}\n",
            "styleUrl": "./app-textarea.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "ModelControl"
            ],
            "templateData": "<mat-form-field\n  id=\"app-textarea\"\n  [class]=\"className\"\n  [formGroup]=\"group\"\n  [appearance]=\"appearance\"\n>\n  <mat-label>{{ label }}</mat-label>\n  <textarea\n    matInput\n    [id]=\"id\"\n    [name]=\"name\"\n    [rows]=\"rows\"\n    [placeholder]=\"placeholder\"\n    [formControlName]=\"formControlName\"\n  ></textarea>\n</mat-form-field>\n"
        },
        {
            "name": "AppTextEditorComponent",
            "id": "component-AppTextEditorComponent-9bd49f2a791503df935c0410ff31908d8903feab681b4536ea7115ec2a4a3381c78c6dac096699210969fdf32070cc88f2ba2f93a68483e9a54a210e1e25b956",
            "file": "src/app/modules/@core/components/form/app-text-editor/app-text-editor.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    multi: true, provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AppTextEditorComponent),\n}",
                    "type": "component"
                }
            ],
            "selector": "app-text-editor",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-text-editor.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "config",
                    "defaultValue": "{} as AngularEditorConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "AngularEditorConfig",
                    "decorators": []
                },
                {
                    "name": "appearance",
                    "defaultValue": "'fill'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"outline\" | \"fill\"",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "className",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "formControlName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "group",
                    "defaultValue": "this.formBuilder.group({\n    [this.name]: [''],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "ModelControlType",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "isDynamic",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "configModel",
                    "defaultValue": "{\n    height: '100',\n    editable: true,\n    translate: 'yes',\n    toolbarPosition: 'bottom',\n    toolbarHiddenButtons: [\n      ['heading', 'insertUnorderedList', 'insertOrderedList'],\n      [\n        'unlink',\n        'htmlCode',\n        'insertImage',\n        'insertVideo',\n        'customClasses',\n        'backgroundColor',\n      ],\n    ],\n    ...this.config,\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AngularEditorConfig",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "$modelControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "alertService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AlertService",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelControlType",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initMonitoringChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "setInitialValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "ModelControl"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "ModelControl"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "HttpClientModule",
                    "type": "module"
                },
                {
                    "name": "AngularEditorModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { HttpClientModule } from '@angular/common/http';\nimport { Component, Input, forwardRef } from '@angular/core';\nimport {\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport {\n  AngularEditorConfig,\n  AngularEditorModule,\n} from '@kolkov/angular-editor';\nimport { ModelControl } from '../model-control';\n\n@Component({\n  standalone: true,\n  selector: 'app-text-editor',\n  styleUrl: './app-text-editor.component.scss',\n  templateUrl: './app-text-editor.component.html',\n  imports: [\n    FormsModule,\n    HttpClientModule,\n    AngularEditorModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AppTextEditorComponent),\n    },\n  ],\n})\nexport class AppTextEditorComponent extends ModelControl {\n  @Input() config: AngularEditorConfig = {} as AngularEditorConfig;\n\n  public configModel: AngularEditorConfig = {\n    height: '100',\n    editable: true,\n    translate: 'yes',\n    toolbarPosition: 'bottom',\n    toolbarHiddenButtons: [\n      ['heading', 'insertUnorderedList', 'insertOrderedList'],\n      [\n        'unlink',\n        'htmlCode',\n        'insertImage',\n        'insertVideo',\n        'customClasses',\n        'backgroundColor',\n      ],\n    ],\n    ...this.config,\n  };\n\n  ngOnInit() {\n    Object.assign(this.configModel, this.config);\n    if (!this.isDynamic) this.initMonitoringChanges();\n  }\n}\n",
            "styleUrl": "./app-text-editor.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "ModelControl"
            ],
            "templateData": "<article id=\"app-text-editor\" [class]=\"className\" [formGroup]=\"group\">\n  @if (!!label) {\n  <label [for]=\"id\" class=\"form-control-label\">{{ label }}</label>\n  }\n  <angular-editor\n    [id]=\"id\"\n    [config]=\"configModel\"\n    [formControlName]=\"formControlName\"\n  ></angular-editor>\n</article>\n"
        },
        {
            "name": "AppThemeSelectionComponent",
            "id": "component-AppThemeSelectionComponent-db504914dca00ed9bf2b0c7e65dd366e897a3696bcdc58d6cdf54af597cafecfe5b332ca7e4be100735b37301c767f4ef554faaa5c7a0a15f8c8628895a6e28b",
            "file": "src/app/modules/@core/components/app-theme-selection/app-theme-selection.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-theme-selection",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app-theme-selection.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isDarkMode",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onToggleDarkMode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "AppCheckboxComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ThemeService } from '../../services/theme.service';\nimport { AppCheckboxComponent } from '../form/app-checkbox/app-checkbox.component';\n\n@Component({\n  standalone: true,\n  selector: 'app-theme-selection',\n  imports: [FormsModule, AppCheckboxComponent],\n  styleUrl: './app-theme-selection.component.scss',\n  templateUrl: './app-theme-selection.component.html',\n})\nexport class AppThemeSelectionComponent {\n  public isDarkMode: boolean = false;\n\n  constructor(private themeService: ThemeService) {}\n\n  ngOnInit() {\n    this.isDarkMode = this.themeService.uiStore.theme() === 'dark';\n  }\n\n  public onToggleDarkMode() {\n    this.themeService.setTheme(this.isDarkMode ? 'dark' : 'light');\n  }\n}\n",
            "styleUrl": "./app-theme-selection.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<app-checkbox\n  toggle\n  label=\"Dark Mode\"\n  name=\"theme-selection\"\n  toggleClassName=\"!mb-0\"\n  [(ngModel)]=\"isDarkMode\"\n  [initialValue]=\"isDarkMode\"\n  (ngModelChange)=\"onToggleDarkMode()\"\n/>\n"
        },
        {
            "name": "FeaturesComponent",
            "id": "component-FeaturesComponent-20b2f94f73dbc3e2a6c4803fc167b4ee8520243d0f0a5e52acc82d682e906c5bd18767dd8ad641f9a46df6302e3b9b8ae0efed8b8d62b9aaafca3b7d3f2af7ca",
            "file": "src/app/modules/documentation/pages/features/features.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-features",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./features.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "MatMenuModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "PageNavComponent",
                    "type": "component"
                },
                {
                    "name": "SideMenuComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { RouterOutlet } from '@angular/router';\nimport { PageNavComponent } from '../../components/page-nav/page-nav.component';\nimport { SideMenuComponent } from '../../components/side-menu/side-menu.component';\n\n@Component({\n  standalone: true,\n  selector: 'app-features',\n  styleUrl: './features.component.scss',\n  templateUrl: './features.component.html',\n  imports: [\n    RouterOutlet,\n    MatMenuModule,\n    MatButtonModule,\n    PageNavComponent,\n    SideMenuComponent,\n  ],\n})\nexport class FeaturesComponent {}\n",
            "styleUrl": "./features.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<section id=\"features\" class=\"app-container\">\n  <doc-page-nav backRoute=\"/\" title=\"Features\" />\n\n  <section>\n    <aside>\n      <doc-side-menu />\n    </aside>\n    <main>\n      <router-outlet />\n\n      <button\n        mat-icon-button\n        [matMenuTriggerFor]=\"menu\"\n        aria-label=\"Example icon-button with a menu\"\n      >\n        <i class=\"iconify\" data-icon=\"ph:plus-bold\"></i>\n      </button>\n\n      <mat-menu #menu=\"matMenu\" class=\"tablet:w-[340px]\">\n        <doc-side-menu />\n      </mat-menu>\n    </main>\n  </section>\n</section>\n"
        },
        {
            "name": "FirebaseAuthenticationComponent",
            "id": "component-FirebaseAuthenticationComponent-de4f214f46d7db63343295eeece5db1d661fafa3691b634762394088470af91a0f704c2e4d2e03d4c9dbadc1e5918ee3a6f32db089d27cbf26d7e0eb9dcd507b",
            "file": "src/app/modules/documentation/pages/features/firebase-authentication/firebase-authentication.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-firebase-authentication",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./firebase-authentication.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authStore",
                    "defaultValue": "inject(AuthStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "credentials",
                    "defaultValue": "{} as IDocAuthenticationCredentials",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IDocAuthenticationCredentials",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "`An error occurred while processing the request`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "jsonResponse",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "loadingStore",
                    "defaultValue": "inject(LoadingStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "error",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleSubmitSignIn",
                    "args": [
                        {
                            "name": "data",
                            "type": "IDocAuthenticationCredentials",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "IDocAuthenticationCredentials",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleSubmitSignUp",
                    "args": [
                        {
                            "name": "data",
                            "type": "IDocAuthenticationSignUp",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "IDocAuthenticationSignUp",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatTabsModule",
                    "type": "module"
                },
                {
                    "name": "SignInComponent",
                    "type": "component"
                },
                {
                    "name": "SignUpComponent",
                    "type": "component"
                },
                {
                    "name": "TerminalWindowComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject } from '@angular/core';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { AuthStore } from '../../../../../store/auth.store';\nimport { LoadingStore } from '../../../../../store/loading.store';\nimport { FirebaseAuthenticationService } from '../../../../@core/firebase/firebase-authentication.service';\nimport { AlertService } from '../../../../@core/services/alert.service';\nimport { SignInComponent } from '../../../components/sign-in/sign-in.component';\nimport { SignUpComponent } from '../../../components/sign-up/sign-up.component';\nimport { TerminalWindowComponent } from '../../../components/terminal-window/terminal-window.component';\nimport {\n  IDocAuthenticationCredentials,\n  IDocAuthenticationSignUp,\n} from '../../../interfaces/doc-authentication.interface';\n\n@Component({\n  standalone: true,\n  selector: 'app-firebase-authentication',\n  styleUrl: './firebase-authentication.component.scss',\n  templateUrl: './firebase-authentication.component.html',\n  imports: [\n    MatTabsModule,\n    SignInComponent,\n    SignUpComponent,\n    TerminalWindowComponent,\n  ],\n})\nexport class FirebaseAuthenticationComponent {\n  public authStore = inject(AuthStore);\n  public loadingStore = inject(LoadingStore);\n  private readonly errorMessage = `An error occurred while processing the request`;\n\n  public jsonResponse: string = '';\n  public credentials: IDocAuthenticationCredentials =\n    {} as IDocAuthenticationCredentials;\n\n  constructor(\n    private alertService: AlertService,\n    private firebaseAuthenticationService: FirebaseAuthenticationService\n  ) {}\n\n  private handleError(error: any) {\n    console.log(error);\n    this.alertService.snackBar.open(this.errorMessage, 'close');\n  }\n\n  public handleSubmitSignIn(data: IDocAuthenticationCredentials) {\n    this.loadingStore.setState(true);\n\n    this.firebaseAuthenticationService\n      .signIn(data)\n      .then((response) => {\n        const { refreshToken, accessToken } = response.user;\n\n        console.log(response);\n        this.authStore.setFirebaseRefreshToken(refreshToken);\n        this.jsonResponse = JSON.stringify(response);\n        this.authStore.setFirebaseToken(accessToken);\n      })\n      .catch((error) => this.handleError(error))\n      .finally(() => this.loadingStore.setState(false));\n  }\n\n  public handleSubmitSignUp(data: IDocAuthenticationSignUp) {\n    this.loadingStore.setState(true);\n\n    this.firebaseAuthenticationService\n      .signUp(data)\n      .then((response) => (this.jsonResponse = JSON.stringify(response)))\n      .catch((error) => this.handleError(error))\n      .finally(() => this.loadingStore.setState(false));\n  }\n}\n",
            "styleUrl": "./firebase-authentication.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "alertService",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "firebaseAuthenticationService",
                        "type": "FirebaseAuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "alertService",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "firebaseAuthenticationService",
                        "type": "FirebaseAuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<section id=\"firebase-authentication\">\n  <mat-tab-group mat-align-tabs=\"center\">\n    <mat-tab label=\"Sign in\">\n      <doc-sign-in (onSubmit)=\"handleSubmitSignIn($event)\" />\n    </mat-tab>\n\n    <mat-tab label=\"Sign up\">\n      <doc-sign-up (onSubmit)=\"handleSubmitSignUp($event)\" />\n    </mat-tab>\n  </mat-tab-group>\n\n  <doc-terminal-window title=\"output:\" [content]=\"jsonResponse\" />\n</section>\n"
        },
        {
            "name": "FirebaseFirestorageComponent",
            "id": "component-FirebaseFirestorageComponent-41610a2f3ac1add43e24606c26925052e7491812c59146e5ad8faca3ebc47c18194e060612640f94bcb38617ce2fa8f606e215e80dbe9385a5b858945516afd3",
            "file": "src/app/modules/documentation/pages/features/firebase-firestorage/firebase-firestorage.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "doc-firebase-firestorage",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./firebase-firestorage.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errorMessage",
                    "defaultValue": "`An error occurred while processing the request`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "files",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StorageReference[]",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "filesData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StorageReference[]",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "fileUpload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "File[]",
                    "optional": true,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "loadingStore",
                    "defaultValue": "inject(LoadingStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "pagination",
                    "defaultValue": "{\n    pageSize: 5,\n    pageNumber: 1,\n    totalItems: 0,\n    pageSizeOptions: [5, 10, 20, 50],\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IPagination",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "path",
                    "defaultValue": "'test'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "tableActions",
                    "defaultValue": "[\n    {\n      title: 'View',\n      icon: 'material-symbols:download',\n      callback: (element) => this.downloadFile(element),\n    },\n    {\n      title: 'Delete',\n      icon: 'iwwa:delete',\n      callback: (element) => this.removeFile(element),\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ITableCellAction<StorageReference>[]",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "tableColumns",
                    "defaultValue": "[\n    { def: 'name', key: 'name', label: 'Name' },\n    { def: 'bucket', key: 'bucket', label: 'Bucket' },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ITableCell[]",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "tableData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StorageReference[]",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "createFile",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "downloadFile",
                    "args": [
                        {
                            "name": "file",
                            "type": "StorageReference",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "file",
                            "type": "StorageReference",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFiles",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "error",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handlePaginate",
                    "args": [
                        {
                            "name": "items",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.files"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 134,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "items",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.files",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onPaginationChange",
                    "args": [
                        {
                            "name": "pagination",
                            "type": "IPagination",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 139,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "pagination",
                            "type": "IPagination",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeFile",
                    "args": [
                        {
                            "name": "file",
                            "type": "StorageReference",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "file",
                            "type": "StorageReference",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "AppTableComponent",
                    "type": "component"
                },
                {
                    "name": "AppFileUploadComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { StorageReference } from 'firebase/storage';\nimport { LoadingStore } from '../../../../../store/loading.store';\nimport { AppTableComponent } from '../../../../@core/components/app-table/app-table.component';\nimport { AppFileUploadComponent } from '../../../../@core/components/form/app-file-upload/app-file-upload.component';\nimport { FirebaseStorageService } from '../../../../@core/firebase/firebase-storage.service';\nimport { filterListPagination } from '../../../../@core/functions/pagination.function';\nimport { IPagination } from '../../../../@core/interfaces/app-pagination.interface';\nimport {\n  ITableCell,\n  ITableCellAction,\n} from '../../../../@core/interfaces/app-table.interface';\nimport { AlertService } from '../../../../@core/services/alert.service';\n\n@Component({\n  standalone: true,\n  selector: 'doc-firebase-firestorage',\n  styleUrl: './firebase-firestorage.component.scss',\n  templateUrl: './firebase-firestorage.component.html',\n  imports: [\n    FormsModule,\n    MatButtonModule,\n    AppTableComponent,\n    AppFileUploadComponent,\n  ],\n})\nexport class FirebaseFirestorageComponent {\n  public loadingStore = inject(LoadingStore);\n\n  public fileUpload?: File[];\n  public filesData: StorageReference[] = [];\n  public readonly path = 'test';\n  private readonly errorMessage = `An error occurred while processing the request`;\n\n  public files: StorageReference[] = [];\n  public tableData: StorageReference[] = [];\n  public pagination: IPagination = {\n    pageSize: 5,\n    pageNumber: 1,\n    totalItems: 0,\n    pageSizeOptions: [5, 10, 20, 50],\n  };\n\n  public tableActions: ITableCellAction<StorageReference>[] = [\n    {\n      title: 'View',\n      icon: 'material-symbols:download',\n      callback: (element) => this.downloadFile(element),\n    },\n    {\n      title: 'Delete',\n      icon: 'iwwa:delete',\n      callback: (element) => this.removeFile(element),\n    },\n  ];\n\n  public tableColumns: ITableCell[] = [\n    { def: 'name', key: 'name', label: 'Name' },\n    { def: 'bucket', key: 'bucket', label: 'Bucket' },\n  ];\n\n  constructor(\n    private alertService: AlertService,\n    private firebaseStorageService: FirebaseStorageService\n  ) {}\n\n  ngOnInit() {\n    this.getFiles();\n  }\n\n  private handleError(error: any) {\n    console.log(error);\n    this.alertService.snackBar.open(this.errorMessage, 'close');\n  }\n\n  public createFile() {\n    if (!this.fileUpload) {\n      this.alertService.snackBar.open('Insert file', 'close');\n      return;\n    }\n\n    this.loadingStore.setState(true);\n\n    this.firebaseStorageService\n      .upload(this.fileUpload[0], this.path)\n      .then(() => {\n        this.getFiles();\n        this.fileUpload = undefined;\n      })\n      .catch((error) => this.handleError(error))\n      .finally(() => this.loadingStore.setState(false));\n  }\n\n  public removeFile(file: StorageReference) {\n    this.loadingStore.setState(true);\n\n    this.firebaseStorageService\n      .delete(file.fullPath)\n      .then(() => this.getFiles())\n      .catch((error) => this.handleError(error))\n      .finally(() => this.loadingStore.setState(false));\n  }\n\n  public downloadFile(file: StorageReference) {\n    this.loadingStore.setState(true);\n\n    this.firebaseStorageService\n      .download(file.fullPath)\n      .then(() => {})\n      .catch((error) => this.handleError(error))\n      .finally(() => this.loadingStore.setState(false));\n  }\n\n  public getFiles() {\n    this.loadingStore.setState(true);\n\n    this.firebaseStorageService\n      .getAll(this.path)\n      .then((response) => {\n        this.pagination = {\n          ...this.pagination,\n          totalItems: response.items.length,\n        };\n\n        this.files = response.items;\n        this.handlePaginate(response.items);\n      })\n      .catch((error) => this.handleError(error))\n      .finally(() => this.loadingStore.setState(false));\n  }\n\n  public handlePaginate(items = this.files) {\n    const { pageNumber, pageSize } = this.pagination;\n    this.tableData = filterListPagination(items, pageNumber, pageSize);\n  }\n\n  public onPaginationChange(pagination: IPagination) {\n    this.pagination = pagination;\n    this.handlePaginate();\n  }\n}\n",
            "styleUrl": "./firebase-firestorage.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "alertService",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "firebaseStorageService",
                        "type": "FirebaseStorageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 62,
                "jsdoctags": [
                    {
                        "name": "alertService",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "firebaseStorageService",
                        "type": "FirebaseStorageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<section id=\"firebase-storage\">\n  <app-file-upload\n    name=\"fileUpload\"\n    label=\"File upload\"\n    [(ngModel)]=\"fileUpload\"\n    [fileTypes]=\"['image/*']\"\n    placeholder=\"Insert fles\"\n  />\n\n  <button\n    mat-button\n    type=\"button\"\n    color=\"primary\"\n    [disabled]=\"!fileUpload\"\n    (click)=\"createFile()\"\n  >\n    Create File\n  </button>\n\n  <app-table\n    [data]=\"tableData\"\n    [columns]=\"tableColumns\"\n    [actions]=\"tableActions\"\n    [pagination]=\"pagination\"\n    [title]=\"'Firebase Storage'\"\n    actionColTitle=\"Actions\"\n    (onPaginationChange)=\"onPaginationChange($event)\"\n  />\n</section>\n"
        },
        {
            "name": "FirebaseFirestoreComponent",
            "id": "component-FirebaseFirestoreComponent-b7157fe197191e991bff660bff41942a346f2ea330f59376753726af03bd6418f19b15b4988ffde6271fd978ad4ae057d99faf0c91989db497ac283d1f5dd337",
            "file": "src/app/modules/documentation/pages/features/firebase-firestore/firebase-firestore.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "doc-firebase-firestore",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./firebase-firestore.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "documents",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IDocDocumentDatabase[]",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "documentsData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IDocDocumentDatabase[]",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "`An error occurred while processing the request`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "loadingStore",
                    "defaultValue": "inject(LoadingStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "pagination",
                    "defaultValue": "{\n    pageSize: 5,\n    pageNumber: 1,\n    totalItems: 0,\n    pageSizeOptions: [5, 10, 20, 50],\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IPagination",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "tableActions",
                    "defaultValue": "[\n    {\n      title: 'View',\n      icon: 'solar:eye-broken',\n      callback: (element) => this.getDocument(String(element.id)),\n    },\n    {\n      title: 'Update',\n      icon: 'radix-icons:update',\n      callback: (element) => this.updateDocument(element),\n    },\n    {\n      title: 'Delete',\n      icon: 'iwwa:delete',\n      callback: (element) => this.deleteDocument(String(element.id)),\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ITableCellAction<IDocDocumentDatabase>[]",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "tableColumns",
                    "defaultValue": "[\n    { def: 'name', key: 'name', label: 'Name' },\n    { def: 'email', key: 'email', label: 'email' },\n    { def: 'age', key: 'age', label: 'email' },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ITableCell[]",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "tableData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IDocDocumentDatabase[]",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "createDocument",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "deleteDocument",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 137,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDocument",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDocuments",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "error",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handlePaginate",
                    "args": [
                        {
                            "name": "items",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.documents"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 147,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "items",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.documents",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onPaginationChange",
                    "args": [
                        {
                            "name": "pagination",
                            "type": "IPagination",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 152,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "pagination",
                            "type": "IPagination",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateDocument",
                    "args": [
                        {
                            "name": "item",
                            "type": "IDocDocumentDatabase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 123,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "IDocDocumentDatabase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "AppTableComponent",
                    "type": "component"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { LoadingStore } from '../../../../../store/loading.store';\nimport { AppTableComponent } from '../../../../@core/components/app-table/app-table.component';\nimport { filterListPagination } from '../../../../@core/functions/pagination.function';\nimport { IPagination } from '../../../../@core/interfaces/app-pagination.interface';\nimport {\n  ITableCell,\n  ITableCellAction,\n} from '../../../../@core/interfaces/app-table.interface';\nimport { AlertService } from '../../../../@core/services/alert.service';\nimport { IDocDocumentDatabase } from '../../../interfaces/doc-document-database.interface';\nimport { FirebaseExampleService } from '../../../services/firebase-example.service';\n\n@Component({\n  standalone: true,\n  selector: 'doc-firebase-firestore',\n  imports: [AppTableComponent, MatButtonModule],\n  styleUrl: './firebase-firestore.component.scss',\n  templateUrl: './firebase-firestore.component.html',\n})\nexport class FirebaseFirestoreComponent {\n  public loadingStore = inject(LoadingStore);\n  public documentsData: IDocDocumentDatabase[] = [];\n  private readonly errorMessage = `An error occurred while processing the request`;\n\n  public tableData: IDocDocumentDatabase[] = [];\n  public documents: IDocDocumentDatabase[] = [];\n  public pagination: IPagination = {\n    pageSize: 5,\n    pageNumber: 1,\n    totalItems: 0,\n    pageSizeOptions: [5, 10, 20, 50],\n  };\n\n  public tableActions: ITableCellAction<IDocDocumentDatabase>[] = [\n    {\n      title: 'View',\n      icon: 'solar:eye-broken',\n      callback: (element) => this.getDocument(String(element.id)),\n    },\n    {\n      title: 'Update',\n      icon: 'radix-icons:update',\n      callback: (element) => this.updateDocument(element),\n    },\n    {\n      title: 'Delete',\n      icon: 'iwwa:delete',\n      callback: (element) => this.deleteDocument(String(element.id)),\n    },\n  ];\n\n  public tableColumns: ITableCell[] = [\n    { def: 'name', key: 'name', label: 'Name' },\n    { def: 'email', key: 'email', label: 'email' },\n    { def: 'age', key: 'age', label: 'email' },\n  ];\n\n  constructor(\n    private alertService: AlertService,\n    private firebaseExampleService: FirebaseExampleService\n  ) {}\n\n  ngOnInit() {\n    this.getDocuments();\n  }\n\n  private handleError(error: any) {\n    console.log(error);\n    this.alertService.snackBar.open(this.errorMessage, 'close');\n  }\n\n  public getDocuments() {\n    this.loadingStore.setState(true);\n\n    this.firebaseExampleService\n      .getAll<IDocDocumentDatabase[]>()\n      .then((response) => {\n        this.pagination = {\n          ...this.pagination,\n          totalItems: response.length,\n        };\n\n        this.documents = response;\n        this.handlePaginate(response);\n      })\n      .catch((error) => this.handleError(error))\n      .finally(() => this.loadingStore.setState(false));\n  }\n\n  public getDocument(id: string) {\n    this.loadingStore.setState(true);\n\n    this.firebaseExampleService\n      .getById<IDocDocumentDatabase>(id)\n      .then((response) => {\n        this.alertService.snackBar.open(response.email, 'close');\n      })\n      .catch((error) => this.handleError(error))\n      .finally(() => this.loadingStore.setState(false));\n  }\n\n  public createDocument() {\n    this.loadingStore.setState(true);\n\n    const names = ['Alice', 'Bob', 'Charlie', 'Diana', 'Eva', 'Frank', 'Grace'];\n    const randomName = names[Math.floor(Math.random() * names.length)];\n    const randomEmail = `${randomName.toLowerCase()}@example.com`;\n    const randomAge = Math.floor(Math.random() * 100);\n\n    this.firebaseExampleService\n      .create<IDocDocumentDatabase>({\n        age: randomAge,\n        name: randomName,\n        email: randomEmail,\n      })\n      .then(() => this.getDocuments())\n      .catch((error) => this.handleError(error))\n      .finally(() => this.loadingStore.setState(false));\n  }\n\n  public updateDocument(item: IDocDocumentDatabase) {\n    this.loadingStore.setState(true);\n    const editRandom = Math.floor(Math.random() * 100);\n    const currentName = item.name.split('-')[1] || item.name;\n\n    const name = `(Edit ${editRandom}) - ${currentName}`;\n\n    this.firebaseExampleService\n      .update<Partial<IDocDocumentDatabase>>(String(item.id), { name })\n      .then(() => this.getDocuments())\n      .catch((error) => this.handleError(error))\n      .finally(() => this.loadingStore.setState(false));\n  }\n\n  public deleteDocument(id: string) {\n    this.loadingStore.setState(true);\n\n    this.firebaseExampleService\n      .delete(id)\n      .then(() => this.getDocuments())\n      .catch((error) => this.handleError(error))\n      .finally(() => this.loadingStore.setState(false));\n  }\n\n  public handlePaginate(items = this.documents) {\n    const { pageNumber, pageSize } = this.pagination;\n    this.tableData = filterListPagination(items, pageNumber, pageSize);\n  }\n\n  public onPaginationChange(pagination: IPagination) {\n    this.pagination = pagination;\n    this.handlePaginate();\n  }\n}\n",
            "styleUrl": "./firebase-firestore.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "alertService",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "firebaseExampleService",
                        "type": "FirebaseExampleService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 58,
                "jsdoctags": [
                    {
                        "name": "alertService",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "firebaseExampleService",
                        "type": "FirebaseExampleService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<section id=\"firebase-firestore\">\n  <button mat-button color=\"primary\" (click)=\"createDocument()\">\n    Create Random\n  </button>\n\n  <app-table\n    [data]=\"tableData\"\n    [columns]=\"tableColumns\"\n    [actions]=\"tableActions\"\n    [pagination]=\"pagination\"\n    [title]=\"'Firebase documents'\"\n    actionColTitle=\"Actions\"\n    (onPaginationChange)=\"onPaginationChange($event)\"\n  />\n</section>\n"
        },
        {
            "name": "FormControlsComponent",
            "id": "component-FormControlsComponent-972acb677c7c4275d67002e64595fdf06e71545213d15f8e979bd4084fc6106755427a616aa79ee11cf789aa5d0bf28dfeed021918d67e036e9fa23f6a1e5b19",
            "file": "src/app/modules/documentation/pages/features/form-controls/form-controls.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "doc-form-controls",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./form-controls.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "defaultOptions",
                    "defaultValue": "[\n    { label: 'Option 1', value: 1 },\n    { label: 'Option 2', value: 2 },\n    { label: 'Option 3', value: 3 },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IFormOption[]",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "form",
                    "defaultValue": "{\n    radio: 1,\n    select: 1,\n    slider: 4,\n    input: 'Teste',\n    checkbox: true,\n    fileUpload: [],\n    imageCropper: null,\n    textarea: 'Textarea',\n    datepicker: new Date(),\n    datepickerRange: {\n      start: new Date(2023, 10, 10),\n      end: new Date(2023, 10, 13),\n    },\n    textEditor: `<b>INITIAL</b>`,\n    sliderRange: { min: 2, max: 6 },\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "AppFormComponents",
                    "type": "component"
                },
                {
                    "name": "JsonPipe",
                    "type": "pipe"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "TerminalWindowComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { JsonPipe } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AppFormComponents } from '../../../../@core/components/form';\nimport { IFormOption } from '../../../../@core/interfaces/app-form.interface';\nimport { TerminalWindowComponent } from '../../../components/terminal-window/terminal-window.component';\n\n@Component({\n  standalone: true,\n  selector: 'doc-form-controls',\n  styleUrl: './form-controls.component.scss',\n  templateUrl: './form-controls.component.html',\n  imports: [\n    ...AppFormComponents,\n    JsonPipe,\n    FormsModule,\n    RouterModule,\n    TerminalWindowComponent,\n  ],\n})\nexport class FormControlsComponent {\n  public defaultOptions: IFormOption[] = [\n    { label: 'Option 1', value: 1 },\n    { label: 'Option 2', value: 2 },\n    { label: 'Option 3', value: 3 },\n  ];\n\n  public form = {\n    radio: 1,\n    select: 1,\n    slider: 4,\n    input: 'Teste',\n    checkbox: true,\n    fileUpload: [],\n    imageCropper: null,\n    textarea: 'Textarea',\n    datepicker: new Date(),\n    datepickerRange: {\n      start: new Date(2023, 10, 10),\n      end: new Date(2023, 10, 13),\n    },\n    textEditor: `<b>INITIAL</b>`,\n    sliderRange: { min: 2, max: 6 },\n  };\n\n  public onSubmit() {\n    console.log('FORM', this.form);\n  }\n}\n",
            "styleUrl": "./form-controls.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<section id=\"form-controls\">\n  <doc-terminal-window title=\"output:\" class=\"mb-4\" [content]=\"form | json\" />\n\n  <form class=\"pt-8\">\n    <app-input\n      name=\"input\"\n      label=\"Input\"\n      className=\"w-full\"\n      [(ngModel)]=\"form.input\"\n      [initialValue]=\"form.input\"\n    />\n\n    <app-datepicker\n      name=\"datepicker\"\n      label=\"Datepicker\"\n      className=\"w-full\"\n      [(ngModel)]=\"form.datepicker\"\n      [initialValue]=\"form.datepicker\"\n    />\n\n    <app-datepicker\n      range\n      className=\"w-full\"\n      name=\"datepickerRange\"\n      label=\"Datepicker Range\"\n      [(ngModel)]=\"form.datepickerRange\"\n      [initialValue]=\"form.datepickerRange\"\n    />\n\n    <app-select\n      name=\"select\"\n      label=\"Select\"\n      className=\"w-full\"\n      [items]=\"defaultOptions\"\n      [(ngModel)]=\"form.select\"\n      [initialValue]=\"form.select\"\n    />\n\n    <app-textarea\n      name=\"textarea\"\n      label=\"Textarea\"\n      className=\"w-full\"\n      [(ngModel)]=\"form.textarea\"\n      [initialValue]=\"form.textarea\"\n    />\n\n    <app-radio-button\n      name=\"radio\"\n      label=\"Radio\"\n      [items]=\"defaultOptions\"\n      [(ngModel)]=\"form.radio\"\n      [initialValue]=\"form.radio\"\n    />\n\n    <app-slider\n      [min]=\"0\"\n      [max]=\"10\"\n      [step]=\"1\"\n      showTickMarks\n      name=\"slider\"\n      label=\"Slider\"\n      [(ngModel)]=\"form.slider\"\n      [initialValue]=\"form.slider\"\n    />\n\n    <app-slider\n      range\n      [min]=\"0\"\n      [max]=\"10\"\n      [step]=\"1\"\n      name=\"sliderRange\"\n      label=\"Slider Range\"\n      [(ngModel)]=\"form.sliderRange\"\n      [initialValue]=\"form.sliderRange\"\n    />\n\n    <app-image-cropper\n      name=\"imageCropper\"\n      [(ngModel)]=\"form.imageCropper\"\n      [initialValue]=\"form.imageCropper\"\n    />\n\n    <app-file-upload\n      [maxFiles]=\"5\"\n      name=\"fileUpload\"\n      label=\"File upload\"\n      [fileTypes]=\"['image/*']\"\n      placeholder=\"Insert fles\"\n      [(ngModel)]=\"form.fileUpload\"\n      [initialValue]=\"form.fileUpload\"\n    />\n\n    <app-text-editor\n      name=\"textEditor\"\n      className=\"w-full\"\n      label=\"Text editor\"\n      [(ngModel)]=\"form.textEditor\"\n      [initialValue]=\"form.textEditor\"\n    />\n\n    <app-checkbox\n      name=\"Checkbox\"\n      label=\"Checkbox\"\n      [(ngModel)]=\"form.checkbox\"\n      [initialValue]=\"form.checkbox\"\n    />\n\n    <button class=\"btn-primary my-4\" type=\"button\" (click)=\"onSubmit()\">\n      Submit\n    </button>\n  </form>\n</section>\n"
        },
        {
            "name": "FormGeneratorComponent",
            "id": "component-FormGeneratorComponent-ef4b7a5923c98344374c82f82ae29ec63685ad941e61a3044b00bb7f731f643f976780eac17a6600a1fb5fe0d4501ea39427774ec17ac5860048c67a097ce742",
            "file": "src/app/modules/documentation/pages/features/form-generator/form-generator.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "doc-form-generator",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./form-generator.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "defaultOptions",
                    "defaultValue": "[\n    { label: 'Option 1', value: 1 },\n    { label: 'Option 2', value: 2 },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IFormOption[]",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "fieldWidth",
                    "defaultValue": "'calc(50% - 12px)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "form",
                    "defaultValue": "this.formGeneratorService.init<IFormGeneratorExample>([\n    [\n      {\n        name: 'email',\n        type: 'input',\n        label: 'email',\n        width: this.fieldWidth,\n        validators: [],\n        additional: { inputType: `email` },\n      },\n      {\n        type: 'input',\n        name: 'password',\n        label: 'Password',\n        width: this.fieldWidth,\n        validators: [Validators.required],\n        additional: { inputType: `password` },\n      },\n    ],\n    [\n      {\n        name: 'name',\n        type: 'input',\n        label: 'Name',\n        width: this.fieldWidth,\n        validators: [Validators.required],\n      },\n      {\n        name: 'age',\n        label: 'Age',\n        type: 'input',\n        width: this.fieldWidth,\n        additional: { inputType: `number` },\n      },\n    ],\n    [\n      {\n        name: 'select',\n        type: 'select',\n        label: 'Select',\n        width: this.fieldWidth,\n        validators: [Validators.required],\n      },\n\n      {\n        name: 'radio',\n        type: 'radio',\n        label: 'Radio',\n        width: this.fieldWidth,\n        validators: [Validators.required],\n      },\n    ],\n    [\n      {\n        name: 'birthDate',\n        type: 'datepicker',\n        label: 'Birth date',\n        width: this.fieldWidth,\n      },\n      {\n        label: 'Rage',\n        type: 'datepicker',\n        width: this.fieldWidth,\n        name: 'datePickerRange',\n        additional: { datepicker: { isDatepickerRange: true } },\n      },\n    ],\n    [{ type: 'textarea', name: 'description', label: 'Description' }],\n    [{ label: 'Text editor', type: 'text-editor', name: 'textEditor' }],\n    [\n      {\n        name: 'slider',\n        type: 'slider',\n        label: 'Slider',\n        additional: { slider: { min: 0, max: 10, step: 0.5 } },\n      },\n\n      {\n        type: 'slider',\n        name: 'sliderRange',\n        label: 'Slider Range',\n        additional: { slider: { min: 0, max: 10, step: 0.5, range: true } },\n      },\n    ],\n    [\n      {\n        name: 'isAdmin',\n        type: 'checkbox',\n        label: 'Is admin',\n        width: this.fieldWidth,\n        additional: { checkbox: { isToggle: true } },\n      },\n    ],\n    [\n      {\n        name: 'fileUpload',\n        type: 'file-upload',\n        label: 'File upload',\n        additional: {\n          fileUpload: { maxFiles: 3 },\n        },\n      },\n    ],\n    [{ name: 'imageCropper', type: 'image-cropper', label: 'Image Cropper' }],\n  ])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "formValue",
                    "defaultValue": "{} as IFormGeneratorExample",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IFormGeneratorExample",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "initForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 138,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 134,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [
                        {
                            "name": "model",
                            "type": "IFormGeneratorExample",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 165,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "model",
                            "type": "IFormGeneratorExample",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onValueChange",
                    "args": [
                        {
                            "name": "model",
                            "type": "IFormGeneratorExample",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 169,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "model",
                            "type": "IFormGeneratorExample",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "JsonPipe",
                    "type": "pipe"
                },
                {
                    "name": "AppFormGeneratorComponent",
                    "type": "component"
                },
                {
                    "name": "TerminalWindowComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { JsonPipe } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { AppFormGeneratorComponent } from '../../../../@core/components/_form-generator/app-form-generator/app-form-generator.component';\nimport { FormGeneratorService } from '../../../../@core/components/_form-generator/form-generator.service';\nimport { IFormOption } from '../../../../@core/interfaces/app-form.interface';\nimport { DatePickerRangeValue } from '../../../../@core/types/datepicker.type';\nimport { SliderRangeValue } from '../../../../@core/types/slider.type';\nimport { TerminalWindowComponent } from '../../../components/terminal-window/terminal-window.component';\n\n@Component({\n  standalone: true,\n  selector: 'doc-form-generator',\n  styleUrl: './form-generator.component.scss',\n  templateUrl: './form-generator.component.html',\n  imports: [JsonPipe, AppFormGeneratorComponent, TerminalWindowComponent],\n})\nexport class FormGeneratorComponent {\n  public defaultOptions: IFormOption[] = [\n    { label: 'Option 1', value: 1 },\n    { label: 'Option 2', value: 2 },\n  ];\n\n  private readonly fieldWidth: string = 'calc(50% - 12px)';\n  public formValue: IFormGeneratorExample = {} as IFormGeneratorExample;\n  public form = this.formGeneratorService.init<IFormGeneratorExample>([\n    [\n      {\n        name: 'email',\n        type: 'input',\n        label: 'email',\n        width: this.fieldWidth,\n        validators: [],\n        additional: { inputType: `email` },\n      },\n      {\n        type: 'input',\n        name: 'password',\n        label: 'Password',\n        width: this.fieldWidth,\n        validators: [Validators.required],\n        additional: { inputType: `password` },\n      },\n    ],\n    [\n      {\n        name: 'name',\n        type: 'input',\n        label: 'Name',\n        width: this.fieldWidth,\n        validators: [Validators.required],\n      },\n      {\n        name: 'age',\n        label: 'Age',\n        type: 'input',\n        width: this.fieldWidth,\n        additional: { inputType: `number` },\n      },\n    ],\n    [\n      {\n        name: 'select',\n        type: 'select',\n        label: 'Select',\n        width: this.fieldWidth,\n        validators: [Validators.required],\n      },\n\n      {\n        name: 'radio',\n        type: 'radio',\n        label: 'Radio',\n        width: this.fieldWidth,\n        validators: [Validators.required],\n      },\n    ],\n    [\n      {\n        name: 'birthDate',\n        type: 'datepicker',\n        label: 'Birth date',\n        width: this.fieldWidth,\n      },\n      {\n        label: 'Rage',\n        type: 'datepicker',\n        width: this.fieldWidth,\n        name: 'datePickerRange',\n        additional: { datepicker: { isDatepickerRange: true } },\n      },\n    ],\n    [{ type: 'textarea', name: 'description', label: 'Description' }],\n    [{ label: 'Text editor', type: 'text-editor', name: 'textEditor' }],\n    [\n      {\n        name: 'slider',\n        type: 'slider',\n        label: 'Slider',\n        additional: { slider: { min: 0, max: 10, step: 0.5 } },\n      },\n\n      {\n        type: 'slider',\n        name: 'sliderRange',\n        label: 'Slider Range',\n        additional: { slider: { min: 0, max: 10, step: 0.5, range: true } },\n      },\n    ],\n    [\n      {\n        name: 'isAdmin',\n        type: 'checkbox',\n        label: 'Is admin',\n        width: this.fieldWidth,\n        additional: { checkbox: { isToggle: true } },\n      },\n    ],\n    [\n      {\n        name: 'fileUpload',\n        type: 'file-upload',\n        label: 'File upload',\n        additional: {\n          fileUpload: { maxFiles: 3 },\n        },\n      },\n    ],\n    [{ name: 'imageCropper', type: 'image-cropper', label: 'Image Cropper' }],\n  ]);\n\n  constructor(private formGeneratorService: FormGeneratorService) {}\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  public initForm() {\n    this.form.setOptionsField('radio', this.defaultOptions);\n    this.form.setOptionsField('select', this.defaultOptions);\n\n    const initialValue: Partial<IFormGeneratorExample> = {\n      age: 10,\n      radio: 2,\n      select: 2,\n      slider: 5,\n      isAdmin: true,\n      name: 'Initial Name',\n      birthDate: new Date(),\n      password: 'password',\n      email: 'inital@email.com',\n      sliderRange: { min: 4, max: 6 },\n      textEditor: 'Initial Text Editor',\n      description: 'Initial Description',\n      datePickerRange: {\n        end: new Date(2023, 10, 13),\n        start: new Date(2023, 10, 10),\n      },\n    };\n\n    this.form.group.patchValue(initialValue);\n    this.formValue = { ...this.formValue, ...initialValue };\n  }\n\n  public onSubmit(model: IFormGeneratorExample) {\n    alert(JSON.stringify(model));\n  }\n\n  public onValueChange(model: IFormGeneratorExample) {\n    this.formValue = model;\n  }\n}\n\ninterface IFormGeneratorExample {\n  age: number;\n  name: string;\n  email: string;\n  radio: number;\n  slider: number;\n  select: number;\n  fileUpload: any;\n  isAdmin: boolean;\n  password: string;\n  imageCropper: any;\n  textEditor: string;\n  description: string;\n  birthDate: string | Date;\n  sliderRange: SliderRangeValue;\n  datePickerRange: DatePickerRangeValue;\n}\n",
            "styleUrl": "./form-generator.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formGeneratorService",
                        "type": "FormGeneratorService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 130,
                "jsdoctags": [
                    {
                        "name": "formGeneratorService",
                        "type": "FormGeneratorService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<section id=\"form-generator\">\n  <doc-terminal-window\n    title=\"output:\"\n    class=\"mb-4\"\n    [content]=\"formValue | json\"\n  />\n\n  <app-form-generator\n    watchValues\n    mobileColumn\n    actionPositionX=\"left\"\n    [fields]=\"form.fields\"\n    [formGroup]=\"form.group\"\n    actionPositionY=\"bottom\"\n    (onSubmit)=\"onSubmit($event)\"\n    (onValueChanges)=\"onValueChange($event)\"\n  />\n</section>\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-31ba5a32ffc4ca3556f6dec762aa70aa5d85d77bdcc11289691b271eea42f5b3fd59bc8f2f9fcee815a4405a852ce675ca192fc7b3913e196a7a9c197d579668",
            "file": "src/app/modules/documentation/pages/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "angularMaterial",
                    "defaultValue": "`ng add @angular/material`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "dependencies",
                    "defaultValue": "`npm i animate.css @iconify/iconify @ngrx/signals date-fns ngx-image-cropper firebase @kolkov/angular-editor`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "dependenciesDev",
                    "defaultValue": "`npm i autoprefixer postcss tailwindcss -D`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "gitClone",
                    "defaultValue": "`git clone https://github.com/PedroSilvaG3FT/angular-boilerplate.git`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "initProject",
                    "defaultValue": "`npm start`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "initProjectStorybook",
                    "defaultValue": "`npm run storybook`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "TerminalWindowComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TerminalWindowComponent } from '../../components/terminal-window/terminal-window.component';\n\n@Component({\n  standalone: true,\n  selector: 'app-home',\n  styleUrl: './home.component.scss',\n  templateUrl: './home.component.html',\n  imports: [CommonModule, RouterModule, TerminalWindowComponent],\n})\nexport class HomeComponent {\n  public angularMaterial: string = `ng add @angular/material`;\n  public dependencies: string = `npm i animate.css @iconify/iconify @ngrx/signals date-fns ngx-image-cropper firebase @kolkov/angular-editor`;\n  public dependenciesDev: string = `npm i autoprefixer postcss tailwindcss -D`;\n  public gitClone: string = `git clone https://github.com/PedroSilvaG3FT/angular-boilerplate.git`;\n\n  public initProject: string = `npm start`;\n  public initProjectStorybook: string = `npm run storybook`;\n}\n",
            "styleUrl": "./home.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<section id=\"home\">\n  <div class=\"app-container\">\n    <figure>\n      <img src=\"favicon.ico\" alt=\"ANGULAR\" />\n    </figure>\n\n    <h1>Angular boilerplate</h1>\n\n    <div>\n      <a class=\"btn-primary\" [routerLink]=\"['/features/form-generator']\"\n        >Features</a\n      >\n    </div>\n\n    <section>\n      <doc-terminal-window\n        class=\"mb-6\"\n        [content]=\"gitClone\"\n        title=\"Clone project\"\n      />\n\n      <doc-terminal-window title=\"Initialize project\" [content]=\"initProject\" />\n      <doc-terminal-window\n        title=\"Initialize storybook\"\n        [content]=\"initProjectStorybook\"\n      />\n    </section>\n  </div>\n</section>\n"
        },
        {
            "name": "ModelControl",
            "id": "component-ModelControl-bea7cf448d6b720bd056cf4db74a08b14fd482d2082e2d320260f2693c9f7bfa9d20e809fc303326ef5845fcf493f87052d39a6041083334cfba91057f2eea83",
            "file": "src/app/modules/@core/components/form/model-control.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "appearance",
                    "defaultValue": "'fill'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"outline\" | \"fill\"",
                    "decorators": []
                },
                {
                    "name": "className",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "formControlName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "group",
                    "defaultValue": "this.formBuilder.group({\n    [this.name]: [''],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "FormGroup",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "ModelControlType",
                    "decorators": []
                },
                {
                    "name": "isDynamic",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "$modelControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "alertService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AlertService",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModelControlType",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "initMonitoringChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setInitialValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "ModelControlType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, FormBuilder, FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { AlertService } from '../../services/alert.service';\nimport { ModelControlType } from '../../types/model-control.type';\n\n@Component({ template: `` })\nexport class ModelControl implements ControlValueAccessor {\n  @Input() id: string = '';\n  @Input() name: string = '';\n  @Input() label: string = '';\n  @Input() className: string = '';\n  @Input() placeholder: string = '';\n  @Input() isDynamic: boolean = false;\n  @Input() formControlName: string = '';\n  @Input() initialValue?: ModelControlType;\n  @Input() appearance: 'outline' | 'fill' = 'fill';\n\n  @Input() group: FormGroup = this.formBuilder.group({\n    [this.name]: [''],\n  });\n\n  public model!: ModelControlType;\n  public $modelControl!: Subscription;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    public alertService: AlertService\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['initialValue']) {\n      this.group.patchValue({\n        [this.formControlName]: changes['initialValue'].currentValue,\n      });\n    }\n  }\n\n  onTouched = () => {};\n  onChange = (_: ModelControlType) => {};\n\n  writeValue(value: ModelControlType): void {\n    this.model = value;\n  }\n  registerOnChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  initMonitoringChanges() {\n    this.setInitialValue();\n\n    this.$modelControl = this.group.valueChanges.subscribe((value) => {\n      if (!this.formControlName) this.onChange(value['']);\n      else this.onChange(value);\n    });\n  }\n\n  setInitialValue() {\n    if (!!this.formControlName || this.initialValue === undefined) return;\n    this.group.setValue({ '': this.initialValue });\n  }\n\n  ngOnDestroy() {\n    this.$modelControl?.unsubscribe();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "alertService",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "alertService",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "ControlValueAccessor"
            ]
        },
        {
            "name": "PageNavComponent",
            "id": "component-PageNavComponent-36127b9706664f52002013282857a38529a084bf07a1f8046cc53e203b52a13286ab2b60ef26c9c2804b75add9af7fa7c47aa811f7c5472505e4366df45a6201",
            "file": "src/app/modules/documentation/components/page-nav/page-nav.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "doc-page-nav",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./page-nav.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "required": true,
                    "name": "backRoute",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "required": true,
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "AnimateDirective",
                    "type": "directive"
                },
                {
                    "name": "AppThemeSelectionComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AppThemeSelectionComponent } from '../../../@core/components/app-theme-selection/app-theme-selection.component';\nimport { AnimateDirective } from '../../../@core/directives/animate.directive';\n\n@Component({\n  standalone: true,\n  selector: 'doc-page-nav',\n  styleUrl: './page-nav.component.scss',\n  templateUrl: './page-nav.component.html',\n  imports: [RouterModule, AnimateDirective, AppThemeSelectionComponent],\n})\nexport class PageNavComponent {\n  @Input({ required: true }) title: string = '';\n  @Input({ required: true }) backRoute: string = '';\n}\n",
            "styleUrl": "./page-nav.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<nav id=\"page-nav\" animate animation=\"animate__fadeInDown\">\n  <a [routerLink]=\"[backRoute]\">\n    <i class=\"iconify text-lg\" data-icon=\"iconamoon:arrow-left-2-bold\"></i>\n    Voltar\n  </a>\n\n  <h1>{{ title }}</h1>\n\n  <app-theme-selection />\n</nav>\n"
        },
        {
            "name": "SideMenuComponent",
            "id": "component-SideMenuComponent-f0926e1b3e15a7cea6dfe0ff0a7d21431d9e5c39d56e8c453a99bb4a6acb25d44e389f5d8c469456afcfb11a049a5f84b9551fbc32d1dc14a904d3a0e01948a3",
            "file": "src/app/modules/documentation/components/side-menu/side-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "doc-side-menu",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./side-menu.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 107,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "links",
                    "defaultValue": "[\n    {\n      name: 'Components',\n      children: [\n        {\n          id: 'form-generator',\n          name: 'Form generator',\n          link: '/features/form-generator',\n          icon: 'ant-design:build-outlined',\n        },\n        {\n          id: 'form-control',\n          name: 'Form controls',\n          icon: 'streamline:input-box',\n          link: '/features/form-control',\n        },\n        {\n          id: 'table',\n          name: 'Table',\n          icon: 'tabler:table',\n          link: '/features/table',\n        },\n      ],\n    },\n    {\n      name: 'Firebase',\n      children: [\n        {\n          icon: 'lucide:user',\n          name: 'Authentication',\n          id: 'firebase-authentication',\n          link: '/features/firebase-authentication',\n        },\n        {\n          name: 'Firestore',\n          id: 'firebase-firestore',\n          link: '/features/firebase-firestore',\n          icon: 'material-symbols:database-outline',\n        },\n        {\n          name: 'Firestorage',\n          id: 'firebase-firestorage',\n          icon: 'ic:outline-sd-storage',\n          link: '/features/firebase-firestorage',\n        },\n      ],\n    },\n    {\n      name: 'Supabase',\n      children: [\n        {\n          icon: 'lucide:user',\n          name: 'Authentication',\n          id: 'supabase-authentication',\n          link: '/features/supabase-authentication',\n        },\n        {\n          name: 'Database',\n          id: 'supabase-table',\n          link: '/features/supabase-table',\n          icon: 'material-symbols:database-outline',\n        },\n        {\n          name: 'Storage',\n          id: 'supabase-storage',\n          icon: 'ic:outline-sd-storage',\n          link: '/features/supabase-storage',\n        },\n      ],\n    },\n    {\n      name: 'Stripe',\n      children: [\n        {\n          id: 'stripe',\n          name: 'Actions',\n          icon: 'bi:stripe',\n          link: '/features/stripe',\n        },\n      ],\n    },\n    {\n      name: 'Store',\n      children: [\n        {\n          id: 'store',\n          name: 'Counter',\n          icon: 'carbon:flow',\n          link: '/features/store',\n        },\n      ],\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterLink"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { SEOService } from '../../../@core/services/seo.service';\n\n@Component({\n  standalone: true,\n  imports: [RouterLink],\n  selector: 'doc-side-menu',\n  styleUrl: './side-menu.component.scss',\n  templateUrl: './side-menu.component.html',\n})\nexport class SideMenuComponent {\n  public links = [\n    {\n      name: 'Components',\n      children: [\n        {\n          id: 'form-generator',\n          name: 'Form generator',\n          link: '/features/form-generator',\n          icon: 'ant-design:build-outlined',\n        },\n        {\n          id: 'form-control',\n          name: 'Form controls',\n          icon: 'streamline:input-box',\n          link: '/features/form-control',\n        },\n        {\n          id: 'table',\n          name: 'Table',\n          icon: 'tabler:table',\n          link: '/features/table',\n        },\n      ],\n    },\n    {\n      name: 'Firebase',\n      children: [\n        {\n          icon: 'lucide:user',\n          name: 'Authentication',\n          id: 'firebase-authentication',\n          link: '/features/firebase-authentication',\n        },\n        {\n          name: 'Firestore',\n          id: 'firebase-firestore',\n          link: '/features/firebase-firestore',\n          icon: 'material-symbols:database-outline',\n        },\n        {\n          name: 'Firestorage',\n          id: 'firebase-firestorage',\n          icon: 'ic:outline-sd-storage',\n          link: '/features/firebase-firestorage',\n        },\n      ],\n    },\n    {\n      name: 'Supabase',\n      children: [\n        {\n          icon: 'lucide:user',\n          name: 'Authentication',\n          id: 'supabase-authentication',\n          link: '/features/supabase-authentication',\n        },\n        {\n          name: 'Database',\n          id: 'supabase-table',\n          link: '/features/supabase-table',\n          icon: 'material-symbols:database-outline',\n        },\n        {\n          name: 'Storage',\n          id: 'supabase-storage',\n          icon: 'ic:outline-sd-storage',\n          link: '/features/supabase-storage',\n        },\n      ],\n    },\n    {\n      name: 'Stripe',\n      children: [\n        {\n          id: 'stripe',\n          name: 'Actions',\n          icon: 'bi:stripe',\n          link: '/features/stripe',\n        },\n      ],\n    },\n    {\n      name: 'Store',\n      children: [\n        {\n          id: 'store',\n          name: 'Counter',\n          icon: 'carbon:flow',\n          link: '/features/store',\n        },\n      ],\n    },\n  ];\n\n  public currentId: string = '';\n\n  constructor(private seoService: SEOService) {\n    this.seoService.onRouteChange().subscribe(() => {\n      const data = this.seoService.getRouteData();\n      this.currentId = data.id || '';\n    });\n  }\n}\n",
            "styleUrl": "./side-menu.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "seoService",
                        "type": "SEOService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 107,
                "jsdoctags": [
                    {
                        "name": "seoService",
                        "type": "SEOService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<section id=\"side-menu\">\n  @for(item of links; track $index) {\n  <article>\n    <h5>{{ item.name }}</h5>\n\n    <section>\n      @for (child of item.children; track $index) {\n\n      <a [routerLink]=\"[child.link]\" [class.active]=\"child.id === currentId\">\n        <span>\n          <i class=\"iconify\" [attr.data-icon]=\"child.icon\"></i>\n        </span>\n\n        {{ child.name }}\n      </a>\n      }\n    </section>\n  </article>\n  }\n</section>\n"
        },
        {
            "name": "SignInComponent",
            "id": "component-SignInComponent-97c7e1262482adc58c7dd6aac2cedd7f7e5260cf1ca52cfb7d6750aedb0c35c0e7de0421a508d48d46e62778fb017ea6ae99f271c550d22268136d5094a79826",
            "file": "src/app/modules/documentation/components/sign-in/sign-in.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "doc-sign-in",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./sign-in.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "onSubmit",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "form",
                    "defaultValue": "this.formGeneratorService.init<IDocAuthenticationCredentials>([\n    [\n      {\n        name: 'email',\n        type: 'input',\n        label: 'email',\n        validators: [Validators.required],\n        additional: { inputType: `email` },\n      },\n    ],\n    [\n      {\n        type: 'input',\n        name: 'password',\n        label: 'Password',\n        validators: [Validators.required],\n        additional: { inputType: `password` },\n      },\n    ],\n  ])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handleSubmit",
                    "args": [
                        {
                            "name": "model",
                            "type": "IDocAuthenticationCredentials",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "model",
                            "type": "IDocAuthenticationCredentials",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "AppFormGeneratorComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { AppFormGeneratorComponent } from '../../../@core/components/_form-generator/app-form-generator/app-form-generator.component';\nimport { FormGeneratorService } from '../../../@core/components/_form-generator/form-generator.service';\nimport { IDocAuthenticationCredentials } from '../../interfaces/doc-authentication.interface';\n\n@Component({\n  standalone: true,\n  selector: 'doc-sign-in',\n  imports: [AppFormGeneratorComponent],\n  styleUrl: './sign-in.component.scss',\n  templateUrl: './sign-in.component.html',\n})\nexport class SignInComponent {\n  @Output() onSubmit = new EventEmitter();\n\n  public form = this.formGeneratorService.init<IDocAuthenticationCredentials>([\n    [\n      {\n        name: 'email',\n        type: 'input',\n        label: 'email',\n        validators: [Validators.required],\n        additional: { inputType: `email` },\n      },\n    ],\n    [\n      {\n        type: 'input',\n        name: 'password',\n        label: 'Password',\n        validators: [Validators.required],\n        additional: { inputType: `password` },\n      },\n    ],\n  ]);\n\n  constructor(private formGeneratorService: FormGeneratorService) {}\n\n  ngOnInit() {\n    const initialValue: Partial<IDocAuthenticationCredentials> = {\n      email: 'pedro.silva-dev@hotmail.com',\n      password: '12345678',\n    };\n\n    this.form.group.patchValue(initialValue);\n  }\n\n  public handleSubmit(model: IDocAuthenticationCredentials) {\n    this.onSubmit.emit(model);\n  }\n}\n",
            "styleUrl": "./sign-in.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formGeneratorService",
                        "type": "FormGeneratorService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 36,
                "jsdoctags": [
                    {
                        "name": "formGeneratorService",
                        "type": "FormGeneratorService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<section id=\"sign-in\">\n  <h4>Sign in</h4>\n\n  <section>\n    <app-form-generator\n      id=\"sign-in\"\n      actionPositionX=\"center\"\n      actionPositionY=\"bottom\"\n      [fields]=\"form.fields\"\n      [formGroup]=\"form.group\"\n      (onSubmit)=\"handleSubmit($event)\"\n    />\n  </section>\n</section>\n"
        },
        {
            "name": "SignUpComponent",
            "id": "component-SignUpComponent-958f16abc642200c45db0180683f3eb79e8b3a85b416c5a8b2f0fa66063bb2268ccf2dc23edf71d091da169ff0bb15723ec8ccf133ee8cef5f4fbce185e1d595",
            "file": "src/app/modules/documentation/components/sign-up/sign-up.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "doc-sign-up",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./sign-up.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "onSubmit",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "form",
                    "defaultValue": "this.formGeneratorService.init<IDocAuthenticationSignUp>([\n    [\n      {\n        name: 'email',\n        type: 'input',\n        label: 'email',\n        validators: [Validators.required],\n        additional: { inputType: `email` },\n      },\n    ],\n    [\n      {\n        type: 'input',\n        name: 'password',\n        label: 'Password',\n        validators: [Validators.required],\n        additional: { inputType: `password` },\n      },\n    ],\n    [\n      {\n        name: 'name',\n        type: 'input',\n        label: 'Name',\n        validators: [Validators.required],\n        additional: { inputType: `email` },\n      },\n    ],\n    [\n      {\n        name: 'age',\n        type: 'input',\n        label: 'Age',\n        validators: [Validators.required],\n        additional: { inputType: `number` },\n      },\n    ],\n  ])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handleSubmit",
                    "args": [
                        {
                            "name": "model",
                            "type": "IDocAuthenticationSignUp",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "model",
                            "type": "IDocAuthenticationSignUp",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "AppFormGeneratorComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { AppFormGeneratorComponent } from '../../../@core/components/_form-generator/app-form-generator/app-form-generator.component';\nimport { FormGeneratorService } from '../../../@core/components/_form-generator/form-generator.service';\nimport { IDocAuthenticationSignUp } from '../../interfaces/doc-authentication.interface';\n\n@Component({\n  standalone: true,\n  selector: 'doc-sign-up',\n  imports: [AppFormGeneratorComponent],\n  styleUrl: './sign-up.component.scss',\n  templateUrl: './sign-up.component.html',\n})\nexport class SignUpComponent {\n  @Output() onSubmit = new EventEmitter();\n\n  public form = this.formGeneratorService.init<IDocAuthenticationSignUp>([\n    [\n      {\n        name: 'email',\n        type: 'input',\n        label: 'email',\n        validators: [Validators.required],\n        additional: { inputType: `email` },\n      },\n    ],\n    [\n      {\n        type: 'input',\n        name: 'password',\n        label: 'Password',\n        validators: [Validators.required],\n        additional: { inputType: `password` },\n      },\n    ],\n    [\n      {\n        name: 'name',\n        type: 'input',\n        label: 'Name',\n        validators: [Validators.required],\n        additional: { inputType: `email` },\n      },\n    ],\n    [\n      {\n        name: 'age',\n        type: 'input',\n        label: 'Age',\n        validators: [Validators.required],\n        additional: { inputType: `number` },\n      },\n    ],\n  ]);\n\n  constructor(private formGeneratorService: FormGeneratorService) {}\n\n  ngOnInit() {\n    const initialValue: Partial<IDocAuthenticationSignUp> = {\n      email: 'pedro.silva-dev@hotmail.com',\n      password: '12345678',\n      name: 'Pedro Silva',\n      age: 24,\n    };\n\n    this.form.group.patchValue(initialValue);\n  }\n\n  public handleSubmit(model: IDocAuthenticationSignUp) {\n    this.onSubmit.emit(model);\n  }\n}\n",
            "styleUrl": "./sign-up.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formGeneratorService",
                        "type": "FormGeneratorService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 54,
                "jsdoctags": [
                    {
                        "name": "formGeneratorService",
                        "type": "FormGeneratorService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<section id=\"sign-up\">\n  <h4>Sign up</h4>\n\n  <section>\n    <app-form-generator\n      id=\"sign-up\"\n      actionPositionX=\"center\"\n      actionPositionY=\"bottom\"\n      [fields]=\"form.fields\"\n      [formGroup]=\"form.group\"\n      (onSubmit)=\"handleSubmit($event)\"\n    />\n  </section>\n</section>\n"
        },
        {
            "name": "StoreComponent",
            "id": "component-StoreComponent-79de9aa799e1643d88166b8972707606c65b423b55d6b127ef71293d177594c396c5c05fa69a8b23077bd06fc1ec46d0269093d07c57e62d7a3ae08314a03c0f",
            "file": "src/app/modules/documentation/pages/features/store/store.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "doc-store",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./store.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "store",
                    "defaultValue": "inject(CounterStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        125,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CounterStore } from '../../../../../store/counter.store';\n\n@Component({\n  standalone: true,\n  selector: 'doc-store',\n  imports: [MatButtonModule],\n  styleUrl: './store.component.scss',\n  templateUrl: './store.component.html',\n})\nexport class StoreComponent {\n  public readonly store = inject(CounterStore);\n}\n",
            "styleUrl": "./store.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<article id=\"store-counter-example\">\n  <p>\n    <span>Count (state): </span>\n    {{ store.count() }}\n  </p>\n\n  <p>\n    <span>Double Count (computed): </span>\n    {{ store.doubleCount() }}\n  </p>\n\n  <section>\n    <button mat-button (click)=\"store.decrement()\">\n      <i class=\"iconify\" data-icon=\"typcn:minus\"></i>\n    </button>\n\n    <button mat-button (click)=\"store.increment()\">\n      <i class=\"iconify\" data-icon=\"typcn:plus\"></i>\n    </button>\n  </section>\n</article>\n"
        },
        {
            "name": "StripeComponent",
            "id": "component-StripeComponent-212bd5238a426af726d05febc0a9f6e41c6405f2698f3084737b66321d59bfc364ecb204922aaa9e59753e8b8e428e2da2b6a3a7ad64d297d93aed0c94e67f50",
            "file": "src/app/modules/documentation/pages/features/stripe/stripe.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-stripe",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./stripe.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authStore",
                    "defaultValue": "inject(AuthStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "customer",
                    "defaultValue": "{} as IStripeCustomer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IStripeCustomer",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "customerId",
                    "defaultValue": "computed(() => this.authStore.stripeCustomerId())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "customerSubscriptions",
                    "defaultValue": "{} as IStripeCutomerSubscriptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IStripeCutomerSubscriptions",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "hasCustomer",
                    "defaultValue": "computed(() => !!this.authStore.stripeCustomerId())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "hasSubscriptions",
                    "defaultValue": "!!this.customerSubscriptions?.data?.length",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "isCanceled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "isSuccess",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "createCostumer",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "getCustomer",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "getCustomerSubscription",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "goToCheckout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openCostumerPortal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "JsonPipe",
                    "type": "pipe"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatTooltipModule",
                    "type": "module"
                },
                {
                    "name": "TerminalWindowComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { JsonPipe } from '@angular/common';\nimport { Component, computed, inject } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthStore } from '../../../../../store/auth.store';\nimport { generateUUID } from '../../../../@core/functions/uuid.function';\nimport { STRIPE_PRODUCTS } from '../../../../@core/stripe/@constants/stripe-product.constant';\nimport {\n  IStripeCustomer,\n  IStripeCutomerSubscriptions,\n} from '../../../../@core/stripe/@interfaces/stripe.interface';\nimport { StripeService } from '../../../../@core/stripe/stripe.service';\nimport { TerminalWindowComponent } from '../../../components/terminal-window/terminal-window.component';\n\n@Component({\n  standalone: true,\n  selector: 'app-stripe',\n  styleUrl: './stripe.component.scss',\n  templateUrl: './stripe.component.html',\n  imports: [\n    JsonPipe,\n    MatButtonModule,\n    MatTooltipModule,\n    TerminalWindowComponent,\n  ],\n})\nexport class StripeComponent {\n  public isSuccess: boolean = false;\n  public isCanceled: boolean = false;\n  public authStore = inject(AuthStore);\n\n  public customer: IStripeCustomer = {} as IStripeCustomer;\n  public customerSubscriptions: IStripeCutomerSubscriptions =\n    {} as IStripeCutomerSubscriptions;\n\n  public customerId = computed(() => this.authStore.stripeCustomerId());\n  public hasCustomer = computed(() => !!this.authStore.stripeCustomerId());\n  public hasSubscriptions = !!this.customerSubscriptions?.data?.length;\n\n  constructor(\n    private stripeService: StripeService,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    const params = this.activatedRoute.snapshot.queryParams;\n\n    this.isSuccess = !!params['success'];\n    this.isCanceled = !!params['canceled'];\n\n    if (this.isSuccess || this.hasCustomer()) this.getCustomer();\n  }\n\n  public getCustomer() {\n    this.stripeService._customer\n      .getById(this.customerId())\n      .then((response) => {\n        this.customer = response;\n        this.getCustomerSubscription();\n      })\n      .catch((error) => console.log(error))\n      .finally(() => {});\n  }\n\n  public getCustomerSubscription() {\n    this.stripeService._customer\n      .getSubscriptions(this.customerId())\n      .then((response) => (this.customerSubscriptions = response))\n      .catch((error) => console.log(error))\n      .finally(() => {});\n  }\n\n  public createCostumer() {\n    const names = ['Alice', 'Bob', 'Charlie', 'Diana', 'Eva', 'Frank', 'Grace'];\n    const name = names[Math.floor(Math.random() * names.length)];\n    const email = `${name.toLowerCase()}@example.com`;\n\n    this.stripeService._customer\n      .create({ name, email }, generateUUID())\n      .then((response) => {\n        this.authStore.setStripeCustomerId(response.id);\n        this.getCustomer();\n      })\n      .catch((error) => console.log(error))\n      .finally(() => {});\n  }\n\n  public openCostumerPortal() {\n    this.stripeService._customer\n      .openPortal(this.customerId())\n      .then((response) => {\n        if (response.url) this.stripeService.redirect(response.url);\n      })\n      .catch((error) => console.log(error))\n      .finally(() => {});\n  }\n\n  public goToCheckout() {\n    const customerId = this.authStore.stripeCustomerId();\n\n    this.stripeService\n      .createSession([STRIPE_PRODUCTS.MONTH], customerId)\n      .then((response) => {\n        if (response.url) this.stripeService.redirect(response.url);\n        console.log(response);\n      })\n      .catch((error) => console.log(error))\n      .finally(() => {});\n  }\n}\n",
            "styleUrl": "./stripe.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "stripeService",
                        "type": "StripeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 39,
                "jsdoctags": [
                    {
                        "name": "stripeService",
                        "type": "StripeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<section id=\"stripe\">\n  <ul>\n    <li>Steps</li>\n\n    <li>\n      <button\n        mat-mini-fab\n        color=\"primary\"\n        (click)=\"createCostumer()\"\n        [disabled]=\"hasCustomer()\"\n        matTooltip=\"Create customer\"\n      >\n        <i class=\"iconify\" data-icon=\"ri:user-add-line\"></i>\n      </button>\n\n      <span>1. Create customer</span>\n    </li>\n    <li>\n      <button\n        mat-mini-fab\n        color=\"primary\"\n        (click)=\"goToCheckout()\"\n        matTooltip=\"Open checkout\"\n        [disabled]=\"hasCustomer() && !!this.customerSubscriptions?.data?.length\"\n      >\n        <i class=\"iconify\" data-icon=\"carbon:wireless-checkout\"></i>\n      </button>\n      <span>2. Open checkout</span>\n    </li>\n    <li>\n      <button\n        mat-mini-fab\n        color=\"primary\"\n        [disabled]=\"!hasCustomer()\"\n        (click)=\"openCostumerPortal()\"\n        matTooltip=\"Open customer portal\"\n      >\n        <i class=\"iconify\" data-icon=\"solar:user-id-bold\"></i>\n      </button>\n\n      <span>3. Open customer portal</span>\n    </li>\n  </ul>\n\n  <hr />\n\n  <section>\n    <doc-terminal-window title=\"customer output:\" [content]=\"customer | json\" />\n    <doc-terminal-window\n      title=\"customer subscriptions output:\"\n      [content]=\"customerSubscriptions | json\"\n    />\n  </section>\n</section>\n"
        },
        {
            "name": "SupabaseAuthenticationComponent",
            "id": "component-SupabaseAuthenticationComponent-0148f618c148dfd05b3e09b07a12b743d72b7bf70644df42b7395360cc681f0a33d9f56089336d1e9213760e2a6e1f435cd74c519c48422aed2911da94f95d81",
            "file": "src/app/modules/documentation/pages/features/supabase-authentication/supabase-authentication.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-supabase-authentication",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./supabase-authentication.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authStore",
                    "defaultValue": "inject(AuthStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "credentials",
                    "defaultValue": "{} as IDocAuthenticationCredentials",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IDocAuthenticationCredentials",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "`An error occurred while processing the request`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "jsonResponse",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "loadingStore",
                    "defaultValue": "inject(LoadingStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "error",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleSubmitSignIn",
                    "args": [
                        {
                            "name": "data",
                            "type": "IDocAuthenticationCredentials",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "IDocAuthenticationCredentials",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleSubmitSignUp",
                    "args": [
                        {
                            "name": "data",
                            "type": "IDocAuthenticationSignUp",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "IDocAuthenticationSignUp",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatTabsModule",
                    "type": "module"
                },
                {
                    "name": "SignInComponent",
                    "type": "component"
                },
                {
                    "name": "SignUpComponent",
                    "type": "component"
                },
                {
                    "name": "TerminalWindowComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject } from '@angular/core';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { AuthStore } from '../../../../../store/auth.store';\nimport { LoadingStore } from '../../../../../store/loading.store';\nimport { AlertService } from '../../../../@core/services/alert.service';\nimport { SupabaseAuthenticationService } from '../../../../@core/supabase/supabase-authentication.service';\nimport { SignInComponent } from '../../../components/sign-in/sign-in.component';\nimport { SignUpComponent } from '../../../components/sign-up/sign-up.component';\nimport { TerminalWindowComponent } from '../../../components/terminal-window/terminal-window.component';\nimport {\n  IDocAuthenticationCredentials,\n  IDocAuthenticationSignUp,\n} from '../../../interfaces/doc-authentication.interface';\n\n@Component({\n  standalone: true,\n  selector: 'app-supabase-authentication',\n  styleUrl: './supabase-authentication.component.scss',\n  templateUrl: './supabase-authentication.component.html',\n  imports: [\n    MatTabsModule,\n    SignInComponent,\n    SignUpComponent,\n    TerminalWindowComponent,\n  ],\n})\nexport class SupabaseAuthenticationComponent {\n  public authStore = inject(AuthStore);\n  public loadingStore = inject(LoadingStore);\n  private readonly errorMessage = `An error occurred while processing the request`;\n\n  public jsonResponse: string = '';\n  public credentials: IDocAuthenticationCredentials =\n    {} as IDocAuthenticationCredentials;\n\n  constructor(\n    private alertService: AlertService,\n    private supabaseAuthenticationService: SupabaseAuthenticationService\n  ) {}\n\n  private handleError(error: any) {\n    console.log(error);\n    this.alertService.snackBar.open(this.errorMessage, 'close');\n  }\n\n  public handleSubmitSignIn(data: IDocAuthenticationCredentials) {\n    this.loadingStore.setState(true);\n\n    this.supabaseAuthenticationService\n      .signIn(data)\n      .then((response) => {\n        const { session } = response.data;\n        this.jsonResponse = JSON.stringify(response);\n        this.authStore.setSupabaseToken(session?.access_token || '');\n        this.authStore.setSupabaseRefreshToken(session?.refresh_token || '');\n      })\n      .catch((error) => this.handleError(error))\n      .finally(() => this.loadingStore.setState(false));\n  }\n\n  public handleSubmitSignUp(data: IDocAuthenticationSignUp) {\n    this.loadingStore.setState(true);\n\n    this.supabaseAuthenticationService\n      .signUp({\n        email: data.email,\n        password: data.password,\n      })\n      .then((data) => (this.jsonResponse = JSON.stringify(data)))\n      .catch((error) => this.handleError(error))\n      .finally(() => this.loadingStore.setState(false));\n  }\n}\n",
            "styleUrl": "./supabase-authentication.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "alertService",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "supabaseAuthenticationService",
                        "type": "SupabaseAuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "alertService",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "supabaseAuthenticationService",
                        "type": "SupabaseAuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<section id=\"supabase-authentication\">\n  <mat-tab-group mat-align-tabs=\"center\">\n    <mat-tab label=\"Sign in\">\n      <doc-sign-in (onSubmit)=\"handleSubmitSignIn($event)\" />\n    </mat-tab>\n\n    <mat-tab label=\"Sign up\">\n      <doc-sign-up (onSubmit)=\"handleSubmitSignUp($event)\" />\n    </mat-tab>\n  </mat-tab-group>\n\n  <doc-terminal-window title=\"output:\" [content]=\"jsonResponse\" />\n</section>\n"
        },
        {
            "name": "SupabaseStorageComponent",
            "id": "component-SupabaseStorageComponent-dafdc66bb22068815fb8ac41c0c164ab11d9b9033b184bcea07f4bb6c7788b8b4cfe26dd1d9076e97d80674918ec36bb054941630556fe3b08630f495d10299e",
            "file": "src/app/modules/documentation/pages/features/supabase-storage/supabase-storage.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "doc-supabase-storage",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./supabase-storage.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "bucket",
                    "defaultValue": "SUPABASE_BUCKETS.default",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "`An error occurred while processing the request`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "files",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ISupabaseStorageFile[]",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "fileUpload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "File[]",
                    "optional": true,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "loadingStore",
                    "defaultValue": "inject(LoadingStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "pagination",
                    "defaultValue": "{\n    pageSize: 5,\n    pageNumber: 1,\n    totalItems: 0,\n    pageSizeOptions: [5, 10, 20, 50],\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IPagination",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "path",
                    "defaultValue": "'example'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "tableActions",
                    "defaultValue": "[\n    {\n      title: 'View',\n      icon: 'material-symbols:download',\n      callback: (element) => this.downloadFile(element),\n    },\n    {\n      title: 'Delete',\n      icon: 'iwwa:delete',\n      callback: (element) => this.removeFile(element),\n    },\n    {\n      title: 'URL',\n      icon: 'ion:link-sharp',\n      callback: (element) => this.getUrl(element),\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ITableCellAction<ISupabaseStorageFile>[]",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "tableColumns",
                    "defaultValue": "[\n    { def: 'name', key: 'name', label: 'Name' },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ITableCell[]",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "tableData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ISupabaseStorageFile[]",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "createFile",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "downloadFile",
                    "args": [
                        {
                            "name": "file",
                            "type": "ISupabaseStorageFile",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "file",
                            "type": "ISupabaseStorageFile",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFiles",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 135,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "getFullPathFile",
                    "args": [
                        {
                            "name": "file",
                            "type": "ISupabaseStorageFile",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "file",
                            "type": "ISupabaseStorageFile",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getUrl",
                    "args": [
                        {
                            "name": "file",
                            "type": "ISupabaseStorageFile",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "file",
                            "type": "ISupabaseStorageFile",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "error",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handlePaginate",
                    "args": [
                        {
                            "name": "items",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.files"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 153,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "items",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.files",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onPaginationChange",
                    "args": [
                        {
                            "name": "pagination",
                            "type": "IPagination",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 158,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "pagination",
                            "type": "IPagination",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeFile",
                    "args": [
                        {
                            "name": "file",
                            "type": "ISupabaseStorageFile",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "file",
                            "type": "ISupabaseStorageFile",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "AppTableComponent",
                    "type": "component"
                },
                {
                    "name": "AppFileUploadComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { LoadingStore } from '../../../../../store/loading.store';\nimport { AppTableComponent } from '../../../../@core/components/app-table/app-table.component';\nimport { AppFileUploadComponent } from '../../../../@core/components/form/app-file-upload/app-file-upload.component';\nimport { filterListPagination } from '../../../../@core/functions/pagination.function';\nimport { IPagination } from '../../../../@core/interfaces/app-pagination.interface';\nimport {\n  ITableCell,\n  ITableCellAction,\n} from '../../../../@core/interfaces/app-table.interface';\nimport { AlertService } from '../../../../@core/services/alert.service';\nimport { SUPABASE_BUCKETS } from '../../../../@core/supabase/@constants/bucket.constant';\nimport { ISupabaseStorageFile } from '../../../../@core/supabase/@interfaces/supabase-storage.interface';\nimport { SupabaseStorageService } from '../../../../@core/supabase/supabase-storage.service';\n\n@Component({\n  standalone: true,\n  selector: 'doc-supabase-storage',\n  styleUrl: './supabase-storage.component.scss',\n  templateUrl: './supabase-storage.component.html',\n  imports: [\n    FormsModule,\n    MatButtonModule,\n    AppTableComponent,\n    AppFileUploadComponent,\n  ],\n})\nexport class SupabaseStorageComponent {\n  public loadingStore = inject(LoadingStore);\n  public fileUpload?: File[];\n\n  public readonly path = 'example';\n  public readonly bucket = SUPABASE_BUCKETS.default;\n  private readonly errorMessage = `An error occurred while processing the request`;\n\n  public files: ISupabaseStorageFile[] = [];\n  public tableData: ISupabaseStorageFile[] = [];\n  public pagination: IPagination = {\n    pageSize: 5,\n    pageNumber: 1,\n    totalItems: 0,\n    pageSizeOptions: [5, 10, 20, 50],\n  };\n\n  public tableActions: ITableCellAction<ISupabaseStorageFile>[] = [\n    {\n      title: 'View',\n      icon: 'material-symbols:download',\n      callback: (element) => this.downloadFile(element),\n    },\n    {\n      title: 'Delete',\n      icon: 'iwwa:delete',\n      callback: (element) => this.removeFile(element),\n    },\n    {\n      title: 'URL',\n      icon: 'ion:link-sharp',\n      callback: (element) => this.getUrl(element),\n    },\n  ];\n\n  public tableColumns: ITableCell[] = [\n    { def: 'name', key: 'name', label: 'Name' },\n  ];\n\n  constructor(\n    private alertService: AlertService,\n    private supabaseStorageService: SupabaseStorageService\n  ) {}\n\n  ngOnInit() {\n    this.getFiles();\n  }\n\n  private getFullPathFile(file: ISupabaseStorageFile) {\n    return `${this.path}/${file.name}`;\n  }\n\n  private handleError(error: any) {\n    console.log(error);\n    this.alertService.snackBar.open(this.errorMessage, 'close');\n  }\n\n  public createFile() {\n    if (!this.fileUpload) {\n      this.alertService.snackBar.open('Insert file', 'close');\n      return;\n    }\n\n    this.loadingStore.setState(true);\n\n    this.supabaseStorageService\n      .upload(this.bucket, this.path, this.fileUpload[0])\n      .then(() => {\n        this.getFiles();\n        this.fileUpload = undefined;\n      })\n      .catch((error) => this.handleError(error))\n      .finally(() => this.loadingStore.setState(false));\n  }\n\n  public removeFile(file: ISupabaseStorageFile) {\n    this.loadingStore.setState(true);\n    const fullPaths = [this.getFullPathFile(file)];\n\n    this.supabaseStorageService\n      .delete(this.bucket, fullPaths)\n      .then(() => this.getFiles())\n      .catch((error) => this.handleError(error))\n      .finally(() => this.loadingStore.setState(false));\n  }\n\n  public downloadFile(file: ISupabaseStorageFile) {\n    this.loadingStore.setState(true);\n\n    this.supabaseStorageService\n      .download(this.bucket, this.getFullPathFile(file))\n      .then(() => {})\n      .catch((error) => this.handleError(error))\n      .finally(() => this.loadingStore.setState(false));\n  }\n\n  public getUrl(file: ISupabaseStorageFile) {\n    const { data } = this.supabaseStorageService.getPublicURL(\n      this.bucket,\n      this.getFullPathFile(file)\n    );\n\n    this.alertService.snackBar.open(data.publicUrl, 'close');\n  }\n\n  public getFiles() {\n    this.loadingStore.setState(true);\n\n    this.supabaseStorageService\n      .getAll(this.bucket, this.path)\n      .then((response) => {\n        this.pagination = {\n          ...this.pagination,\n          totalItems: response.data.length,\n        };\n\n        this.files = response.data;\n        this.handlePaginate(response.data);\n      })\n      .catch((error) => this.handleError(error))\n      .finally(() => this.loadingStore.setState(false));\n  }\n\n  public handlePaginate(items = this.files) {\n    const { pageNumber, pageSize } = this.pagination;\n    this.tableData = filterListPagination(items, pageNumber, pageSize);\n  }\n\n  public onPaginationChange(pagination: IPagination) {\n    this.pagination = pagination;\n    this.handlePaginate();\n  }\n}\n",
            "styleUrl": "./supabase-storage.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "alertService",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "supabaseStorageService",
                        "type": "SupabaseStorageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 67,
                "jsdoctags": [
                    {
                        "name": "alertService",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "supabaseStorageService",
                        "type": "SupabaseStorageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<section id=\"supabase-storage\">\n  <app-file-upload\n    name=\"fileUpload\"\n    label=\"File upload\"\n    [(ngModel)]=\"fileUpload\"\n    [fileTypes]=\"['image/*']\"\n    placeholder=\"Insert fles\"\n  />\n\n  <button\n    mat-button\n    type=\"button\"\n    color=\"primary\"\n    [disabled]=\"!fileUpload\"\n    (click)=\"createFile()\"\n  >\n    Create File\n  </button>\n\n  <app-table\n    [data]=\"tableData\"\n    [columns]=\"tableColumns\"\n    [actions]=\"tableActions\"\n    [pagination]=\"pagination\"\n    [title]=\"'Supabase Storage'\"\n    actionColTitle=\"Actions\"\n    (onPaginationChange)=\"onPaginationChange($event)\"\n  />\n</section>\n"
        },
        {
            "name": "SupabaseTableComponent",
            "id": "component-SupabaseTableComponent-0bcd7ef5cb031e4fec06e184fc363a68fe3b9edcdf78f86652893b939106d970760c134b97366967aaa561cb4be363370fa46fe2e0793e9015f0aa995a63456c",
            "file": "src/app/modules/documentation/pages/features/supabase-table/supabase-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "doc-supabase-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./supabase-table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "documents",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IDocDocumentDatabase[]",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "documentsData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IDocDocumentDatabase[]",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "`An error occurred while processing the request`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "loadingStore",
                    "defaultValue": "inject(LoadingStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "pagination",
                    "defaultValue": "{\n    pageSize: 5,\n    pageNumber: 1,\n    totalItems: 0,\n    pageSizeOptions: [5, 10, 20, 50],\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IPagination",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "tableActions",
                    "defaultValue": "[\n    {\n      title: 'View',\n      icon: 'solar:eye-broken',\n      callback: (element) => this.getDocument(Number(element.id)),\n    },\n    {\n      title: 'Update',\n      icon: 'radix-icons:update',\n      callback: (element) => this.updateDocument(element),\n    },\n    {\n      title: 'Delete',\n      icon: 'iwwa:delete',\n      callback: (element) => this.deleteDocument(Number(element.id)),\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ITableCellAction<IDocDocumentDatabase>[]",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "tableColumns",
                    "defaultValue": "[\n    { def: 'name', key: 'name', label: 'Name' },\n    { def: 'email', key: 'email', label: 'email' },\n    { def: 'age', key: 'age', label: 'email' },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ITableCell[]",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "tableData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IDocDocumentDatabase[]",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "createDocument",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "deleteDocument",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 139,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDocument",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDocuments",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "error",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handlePaginate",
                    "args": [
                        {
                            "name": "items",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.documents"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 149,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "items",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.documents",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onPaginationChange",
                    "args": [
                        {
                            "name": "pagination",
                            "type": "IPagination",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 154,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "pagination",
                            "type": "IPagination",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateDocument",
                    "args": [
                        {
                            "name": "item",
                            "type": "IDocDocumentDatabase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 125,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "IDocDocumentDatabase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "AppTableComponent",
                    "type": "component"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { LoadingStore } from '../../../../../store/loading.store';\nimport { AppTableComponent } from '../../../../@core/components/app-table/app-table.component';\nimport { filterListPagination } from '../../../../@core/functions/pagination.function';\nimport { IPagination } from '../../../../@core/interfaces/app-pagination.interface';\nimport {\n  ITableCell,\n  ITableCellAction,\n} from '../../../../@core/interfaces/app-table.interface';\nimport { AlertService } from '../../../../@core/services/alert.service';\nimport { IDocDocumentDatabase } from '../../../interfaces/doc-document-database.interface';\nimport { SupabaseExampleService } from '../../../services/supabase-example.service';\n\n@Component({\n  standalone: true,\n  selector: 'doc-supabase-table',\n  styleUrl: './supabase-table.component.scss',\n  imports: [AppTableComponent, MatButtonModule],\n  templateUrl: './supabase-table.component.html',\n})\nexport class SupabaseTableComponent {\n  public loadingStore = inject(LoadingStore);\n  public documentsData: IDocDocumentDatabase[] = [];\n  private readonly errorMessage = `An error occurred while processing the request`;\n\n  public tableData: IDocDocumentDatabase[] = [];\n  public documents: IDocDocumentDatabase[] = [];\n  public pagination: IPagination = {\n    pageSize: 5,\n    pageNumber: 1,\n    totalItems: 0,\n    pageSizeOptions: [5, 10, 20, 50],\n  };\n\n  public tableActions: ITableCellAction<IDocDocumentDatabase>[] = [\n    {\n      title: 'View',\n      icon: 'solar:eye-broken',\n      callback: (element) => this.getDocument(Number(element.id)),\n    },\n    {\n      title: 'Update',\n      icon: 'radix-icons:update',\n      callback: (element) => this.updateDocument(element),\n    },\n    {\n      title: 'Delete',\n      icon: 'iwwa:delete',\n      callback: (element) => this.deleteDocument(Number(element.id)),\n    },\n  ];\n\n  public tableColumns: ITableCell[] = [\n    { def: 'name', key: 'name', label: 'Name' },\n    { def: 'email', key: 'email', label: 'email' },\n    { def: 'age', key: 'age', label: 'email' },\n  ];\n\n  constructor(\n    private alertService: AlertService,\n    private supabaseExampleService: SupabaseExampleService\n  ) {}\n\n  ngOnInit() {\n    this.getDocuments();\n  }\n\n  private handleError(error: any) {\n    console.log(error);\n    this.alertService.snackBar.open(this.errorMessage, 'close');\n  }\n\n  public getDocuments() {\n    this.loadingStore.setState(true);\n\n    this.supabaseExampleService\n      .getAll<IDocDocumentDatabase[]>()\n      .then((response) => {\n        this.pagination = {\n          ...this.pagination,\n          totalItems: response.data.length || 0,\n        };\n\n        this.documentsData = response.data || [];\n        this.handlePaginate(this.documentsData);\n      })\n      .catch((error) => this.handleError(error))\n      .finally(() => this.loadingStore.setState(false));\n  }\n\n  public getDocument(id: number) {\n    this.loadingStore.setState(true);\n\n    this.supabaseExampleService\n      .getById<IDocDocumentDatabase>(id)\n      .then((response) => {\n        this.alertService.snackBar.open(response.data.email, 'close');\n      })\n      .catch((error) => this.handleError(error))\n      .finally(() => this.loadingStore.setState(false));\n  }\n\n  public createDocument() {\n    const names = ['Alice', 'Bob', 'Charlie', 'Diana', 'Eva', 'Frank', 'Grace'];\n    const randomName = names[Math.floor(Math.random() * names.length)];\n    const randomEmail = `${randomName.toLowerCase()}@example.com`;\n    const randomAge = Math.floor(Math.random() * 100);\n\n    const data = {\n      age: randomAge,\n      name: randomName,\n      email: randomEmail,\n    };\n\n    this.loadingStore.setState(true);\n\n    this.supabaseExampleService\n      .create(data)\n      .then(() => this.getDocuments())\n      .catch((error) => this.handleError(error))\n      .finally(() => this.loadingStore.setState(false));\n  }\n\n  public updateDocument(item: IDocDocumentDatabase) {\n    this.loadingStore.setState(true);\n\n    const editRandom = Math.floor(Math.random() * 100);\n    const currentName = item.name.split('-')[1] || item.name;\n    const name = `(Edit ${editRandom}) - ${currentName}`;\n\n    this.supabaseExampleService\n      .update({ name }, Number(item.id))\n      .then(() => this.getDocuments())\n      .catch((error) => this.handleError(error))\n      .finally(() => this.loadingStore.setState(false));\n  }\n\n  public deleteDocument(id: number) {\n    this.loadingStore.setState(true);\n\n    this.supabaseExampleService\n      .delete(id)\n      .then(() => this.getDocuments())\n      .catch((error) => this.handleError(error))\n      .finally(() => this.loadingStore.setState(false));\n  }\n\n  public handlePaginate(items = this.documents) {\n    const { pageNumber, pageSize } = this.pagination;\n    this.tableData = filterListPagination(items, pageNumber, pageSize);\n  }\n\n  public onPaginationChange(pagination: IPagination) {\n    this.pagination = pagination;\n    this.handlePaginate();\n  }\n}\n",
            "styleUrl": "./supabase-table.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "alertService",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "supabaseExampleService",
                        "type": "SupabaseExampleService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 58,
                "jsdoctags": [
                    {
                        "name": "alertService",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "supabaseExampleService",
                        "type": "SupabaseExampleService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<section id=\"supabase-table\">\n  <button mat-button color=\"primary\" (click)=\"createDocument()\">\n    Create Random\n  </button>\n\n  <app-table\n    [data]=\"tableData\"\n    [columns]=\"tableColumns\"\n    [actions]=\"tableActions\"\n    [pagination]=\"pagination\"\n    [title]=\"'Supabase Table'\"\n    actionColTitle=\"Actions\"\n    (onPaginationChange)=\"onPaginationChange($event)\"\n  />\n</section>\n"
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-ff6844f188fc1f7d3b3ddc15139d205756e6307e44cc8cf9b77889e8ec8a48506f990cd07e1693d1afefb78f2c9b0939de30cbd6cfb1de76607175c46cf511eb",
            "file": "src/app/modules/documentation/pages/features/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "doc-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "pagination",
                    "defaultValue": "{\n    pageSize: 5,\n    pageNumber: 1,\n    totalItems: 20,\n    pageSizeOptions: [5, 10, 20, 50],\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IPagination",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "tableActions",
                    "defaultValue": "[\n    {\n      title: 'Edit',\n      icon: 'iconamoon:edit-fill',\n      callback: (element) => this.handleEdit(element),\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ITableCellAction<PeriodicElement>[]",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "tableColumns",
                    "defaultValue": "[\n    { def: 'position', key: 'position', label: 'No.', sticky: true },\n    { def: 'name', key: 'name', label: 'Name' },\n    { def: 'weight', key: 'weight', label: 'Weight' },\n    { def: 'symbol', key: 'symbol', label: 'Symbol' },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ITableCell[]",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "tableData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PeriodicElement[]",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getItems",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "handleEdit",
                    "args": [
                        {
                            "name": "item",
                            "type": "PeriodicElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "PeriodicElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onPaginationChange",
                    "args": [
                        {
                            "name": "pagination",
                            "type": "IPagination",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "pagination",
                            "type": "IPagination",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSortChange",
                    "args": [
                        {
                            "name": "sort",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "sort",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "AppTableComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Sort } from '@angular/material/sort';\nimport { AppTableComponent } from '../../../../@core/components/app-table/app-table.component';\nimport { filterListPagination } from '../../../../@core/functions/pagination.function';\nimport { IPagination } from '../../../../@core/interfaces/app-pagination.interface';\nimport {\n  ITableCell,\n  ITableCellAction,\n} from '../../../../@core/interfaces/app-table.interface';\nimport { AlertService } from '../../../../@core/services/alert.service';\n\n@Component({\n  standalone: true,\n  selector: 'doc-table',\n  imports: [AppTableComponent],\n  templateUrl: './table.component.html',\n  styleUrl: './table.component.scss',\n})\nexport class TableComponent {\n  public tableData: PeriodicElement[] = [];\n  public pagination: IPagination = {\n    pageSize: 5,\n    pageNumber: 1,\n    totalItems: 20,\n    pageSizeOptions: [5, 10, 20, 50],\n  };\n\n  public tableActions: ITableCellAction<PeriodicElement>[] = [\n    {\n      title: 'Edit',\n      icon: 'iconamoon:edit-fill',\n      callback: (element) => this.handleEdit(element),\n    },\n  ];\n  public tableColumns: ITableCell[] = [\n    { def: 'position', key: 'position', label: 'No.', sticky: true },\n    { def: 'name', key: 'name', label: 'Name' },\n    { def: 'weight', key: 'weight', label: 'Weight' },\n    { def: 'symbol', key: 'symbol', label: 'Symbol' },\n  ];\n\n  constructor(private alertService: AlertService) {}\n\n  ngOnInit() {\n    this.getItems();\n  }\n\n  public getItems() {\n    const { pageNumber, pageSize } = this.pagination;\n    this.tableData = filterListPagination(ELEMENT_DATA, pageNumber, pageSize);\n  }\n\n  public onSortChange(sort: Sort) {\n    console.log('[onSortChange]', sort);\n  }\n\n  public onPaginationChange(pagination: IPagination) {\n    this.pagination = pagination;\n    this.getItems();\n  }\n\n  public handleEdit(item: PeriodicElement) {\n    this.alertService.snackBar.open(item.name, 'close');\n  }\n}\n\nexport interface PeriodicElement {\n  name: string;\n  weight: number;\n  symbol: string;\n  position: number;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\n  { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\n  { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\n  { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\n  { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\n  { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\n  { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\n  { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\n  { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\n  { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\n  { position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na' },\n  { position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg' },\n  { position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al' },\n  { position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si' },\n  { position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P' },\n  { position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S' },\n  { position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl' },\n  { position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar' },\n  { position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K' },\n  { position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca' },\n];\n",
            "styleUrl": "./table.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "alertService",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 40,
                "jsdoctags": [
                    {
                        "name": "alertService",
                        "type": "AlertService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<app-table\n  title=\"Table Example\"\n  actionMenuMode\n  [data]=\"tableData\"\n  [columns]=\"tableColumns\"\n  [actions]=\"tableActions\"\n  [pagination]=\"pagination\"\n  (onSortChange)=\"onSortChange($event)\"\n  (onPaginationChange)=\"onPaginationChange($event)\"\n/>\n"
        },
        {
            "name": "TerminalWindowComponent",
            "id": "component-TerminalWindowComponent-c7afe56507f0d34f2b477cc6ded840709529280cd4e6c5dfaf0f3418febd953877abe2f7bf354e2ea19af2cb47c0454cc485302cedb5312f1887bf13f92e381f",
            "file": "src/app/modules/documentation/components/terminal-window/terminal-window.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "doc-terminal-window",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./terminal-window.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "required": true,
                    "name": "content",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "required": false,
                    "name": "hidePrefix",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleCopyContent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgIf"
                },
                {
                    "name": "MatSnackBarModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { NgIf } from '@angular/common';\nimport { Component, Input, booleanAttribute } from '@angular/core';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { ClipboardService } from '../../../@core/services/clipboard.service';\n\n@Component({\n  standalone: true,\n  selector: 'doc-terminal-window',\n  imports: [NgIf, MatSnackBarModule],\n  styleUrl: './terminal-window.component.scss',\n  templateUrl: './terminal-window.component.html',\n})\nexport class TerminalWindowComponent {\n  @Input() title: string = '';\n  @Input({ required: true }) content: string = '';\n  @Input({ transform: booleanAttribute }) hidePrefix: boolean = false;\n\n  constructor(private clipboardService: ClipboardService) {}\n\n  public handleCopyContent() {\n    this.clipboardService.copy(this.content, 'Content copied!');\n  }\n}\n",
            "styleUrl": "./terminal-window.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "clipboardService",
                        "type": "ClipboardService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "clipboardService",
                        "type": "ClipboardService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<section id=\"terminal-window\">\n  <h5 *ngIf=\"!!title\">{{ title }}</h5>\n\n  <article>\n    <nav>\n      <span></span>\n      <span></span>\n      <span></span>\n\n      <a mat-stroked-button (click)=\"handleCopyContent()\">\n        <i class=\"iconify\" data-icon=\"bi:copy\"></i>\n        copy\n      </a>\n    </nav>\n\n    <section>\n      <p>\n        <span *ngIf=\"!hidePrefix\">~ %:</span>\n        {{ content }}\n      </p>\n    </section>\n  </article>\n</section>\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "APP_FILE_UPLOAD_DEFAULT_VALUES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/components/form/app-file-upload/app-file-upload.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  maxFiles: 1,\n  fileTypes: ['*/*'],\n  limitErrorMessage: `File limit reached`,\n}"
            },
            {
                "name": "APP_IMAGE_CROPPER_DEFAULT_VALUES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/components/form/app-image-cropper/app-image-cropper.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  scale: 1,\n  imageURL: '',\n  height: '200px',\n  aspectRatio: 4 / 3,\n  background: 'black',\n  cropperMinWidth: 128,\n  buttonText: 'Select file',\n  rounded: false,\n  onlyScaleDown: true,\n  maintainAspectRatio: true,\n}"
            },
            {
                "name": "APP_SLIDER_UPLOAD_DEFAULT_VALUES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/components/form/app-slider/app-slider.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  min: 0,\n  max: 0,\n  step: 0,\n  range: false,\n  showTickMarks: false,\n}"
            },
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    provideAnimations(),\n    provideAnimationsAsync(),\n    StripeConnectorService,\n    SupabaseConnectorService,\n    FirebaseConnectorService,\n    provideRouter(routes, inMemoryScrollingFeature),\n    provideNgxStripe(environment.stripe.public_key),\n  ],\n}"
            },
            {
                "name": "AppFormComponents",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/components/form/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  AppInputComponent,\n  AppSliderComponent,\n  AppSelectComponent,\n  AppTextareaComponent,\n  AppCheckboxComponent,\n  AppFormImageComponent,\n  AppDatepickerComponent,\n  AppTextEditorComponent,\n  AppFileUploadComponent,\n  AppRadioButtonComponent,\n  AppImageCropperComponent,\n]"
            },
            {
                "name": "AuthStore",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/auth.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "signalStore(\n  { providedIn: 'root' },\n  withState(state),\n  withMethods((store) => ({\n    setStripeCustomerId(stripeCustomerId: string) {\n      patchState(store, { stripeCustomerId });\n      persistService.commit(store, state);\n    },\n    setSupabaseToken(supabaseToken: string) {\n      patchState(store, { supabaseToken });\n      persistService.commit(store, state);\n    },\n    setSupabaseRefreshToken(supabaseRefreshToken: string) {\n      patchState(store, { supabaseRefreshToken });\n      persistService.commit(store, state);\n    },\n    setFirebaseToken(firebaseToken: string) {\n      patchState(store, { firebaseToken });\n      persistService.commit(store, state);\n    },\n    setFirebaseRefreshToken(firebaseRefreshToken: string) {\n      patchState(store, { firebaseRefreshToken });\n      persistService.commit(store, state);\n    },\n  }))\n)"
            },
            {
                "name": "component",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/app-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<AppTableComponent>",
                "defaultValue": "{\n  args: {\n    actionMenuMode: true,\n    actions: [\n      {\n        title: 'Edit',\n        icon: 'iconamoon:edit-fill',\n        callback: (element, index) => alert(`Element clicked. Row ${index}`),\n      },\n    ],\n    columns: [\n      { def: 'firstCol', key: 'firstCol', label: 'First Col' },\n      { def: 'secondCol', key: 'secondCol', label: 'Second Col' },\n    ],\n    data: [\n      { firstCol: 'Content First 1', secondCol: 'Content Second 1' },\n      { firstCol: 'Content First 2', secondCol: 'Content Second 2' },\n    ],\n    pagination: {\n      pageSize: 5,\n      pageNumber: 1,\n      totalItems: 2,\n      pageSizeOptions: [5, 10, 15],\n    },\n  },\n  render: (args: AppTableComponent) => ({ props: args }),\n}"
            },
            {
                "name": "component",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-checkbok.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<AppCheckboxComponent>",
                "defaultValue": "{\n  args: {\n    initialValue: true,\n    name: 'checkbox-example',\n    label: 'Checkbox example',\n  },\n  argTypes: { initialValue: { control: { type: 'boolean' } } },\n  render: (args: AppCheckboxComponent) => ({ props: args }),\n}"
            },
            {
                "name": "component",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-datepicker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<AppDatepickerComponent>",
                "defaultValue": "{\n  args: {\n    initialValue: new Date(),\n    name: 'datepicker-example',\n    label: 'datepicker example',\n  },\n  render: (args: AppDatepickerComponent) => ({ props: args }),\n}"
            },
            {
                "name": "component",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-file-upload.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<AppFileUploadComponent>",
                "defaultValue": "{\n  args: {\n    initialValue: [],\n    name: 'file-upload-example',\n    label: 'File Upload example',\n  },\n  render: (args: AppFileUploadComponent) => ({ props: args }),\n}"
            },
            {
                "name": "component",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-form-generator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<AppFormGeneratorComponent>",
                "defaultValue": "{\n  args: {\n    fields: [\n      [\n        {\n          type: 'input',\n          name: 'password',\n          initialValue: '',\n          label: 'Password',\n          width: fieldWidth,\n          validators: [Validators.required],\n          additional: { inputType: `password` },\n        },\n        {\n          name: 'email',\n          type: 'input',\n          label: 'email',\n          initialValue: '',\n          width: fieldWidth,\n          validators: [Validators.required],\n          additional: { inputType: `email` },\n        },\n      ],\n      [\n        {\n          width: fieldWidth,\n          name: 'name',\n          label: 'Name',\n          type: 'input',\n          initialValue: '',\n          validators: [Validators.required],\n        },\n        {\n          name: 'select',\n          type: 'select',\n          label: 'Select',\n          initialValue: 0,\n          width: fieldWidth,\n          validators: [Validators.required],\n          additional: { options: storybookFormBase.initialOptions },\n        },\n      ],\n      [\n        {\n          name: 'age',\n          label: 'Age',\n          type: 'input',\n          initialValue: 0,\n          width: fieldWidth,\n          additional: { inputType: `number` },\n        },\n        {\n          name: 'radio',\n          type: 'radio',\n          label: 'radio',\n          initialValue: 0,\n          width: fieldWidth,\n          validators: [Validators.required],\n          additional: { options: storybookFormBase.initialOptions },\n        },\n      ],\n      [\n        {\n          width: fieldWidth,\n          name: 'birthDate',\n          type: 'datepicker',\n          label: 'Birth date',\n          initialValue: new Date(),\n        },\n        {\n          name: 'rage',\n          label: 'Rage',\n          initialValue: '',\n          width: fieldWidth,\n          type: 'datepicker',\n          additional: { datepicker: { isDatepickerRange: true } },\n        },\n      ],\n      [\n        {\n          initialValue: '',\n          type: 'textarea',\n          name: 'description',\n          label: 'Description',\n        },\n      ],\n      [\n        {\n          name: 'isAdmin',\n          type: 'checkbox',\n          label: 'Is admin',\n          width: fieldWidth,\n          initialValue: false,\n          additional: { checkbox: { isToggle: true } },\n        },\n      ],\n    ],\n  },\n  render: (args: AppFormGeneratorComponent) => ({ props: args }),\n}"
            },
            {
                "name": "component",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-image-cropper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<AppImageCropperComponent>",
                "defaultValue": "{\n  args: {\n    initialValue: [],\n    name: 'file-upload-example',\n    label: 'File Upload example',\n  },\n  render: (args: AppImageCropperComponent) => ({ props: args }),\n}"
            },
            {
                "name": "component",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<AppInputComponent>",
                "defaultValue": "{\n  args: {\n    initialValue: '',\n    name: 'input-example',\n    label: 'input example',\n    placeholder: 'input example placeholder',\n  },\n  render: (args: AppInputComponent) => ({ props: args }),\n}"
            },
            {
                "name": "component",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-radio-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<AppRadioButtonComponent>",
                "defaultValue": "{\n  args: {\n    initialValue: 1,\n    name: 'radio-button-example',\n    label: 'Radio button example',\n    items: storybookFormBase.initialOptions,\n  },\n  argTypes: { initialValue: { control: { type: 'number' } } },\n  render: (args: AppRadioButtonComponent) => ({ props: args }),\n}"
            },
            {
                "name": "component",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<AppSelectComponent>",
                "defaultValue": "{\n  args: {\n    initialValue: 1,\n    name: 'select-example',\n    label: 'Select example',\n    items: storybookFormBase.initialOptions,\n  },\n  argTypes: { initialValue: { control: { type: 'number' } } },\n  render: (args: AppSelectComponent) => ({ props: args }),\n}"
            },
            {
                "name": "component",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<AppSliderComponent>",
                "defaultValue": "{\n  args: {\n    min: 0,\n    max: 10,\n    step: 1,\n    range: false,\n    initialValue: 4,\n    name: 'slider-example',\n    label: 'Slider example',\n  },\n  render: (args: AppSliderComponent) => ({ props: args }),\n}"
            },
            {
                "name": "component",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-text-editor.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<AppTextEditorComponent>",
                "defaultValue": "{\n  args: {\n    initialValue: '',\n    name: 'text-editor-example',\n    label: 'Text editor example',\n  },\n  render: (args: AppTextEditorComponent) => ({ props: args }),\n}"
            },
            {
                "name": "component",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<AppTextareaComponent>",
                "defaultValue": "{\n  args: {\n    initialValue: '',\n    name: 'textarea-example',\n    label: 'Textarea example',\n    placeholder: 'Textarea example placeholder',\n  },\n  render: (args: AppTextareaComponent) => ({ props: args }),\n}"
            },
            {
                "name": "components",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/components/_form-generator/field-generator.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  input: AppInputComponent,\n  select: AppSelectComponent,\n  slider: AppSliderComponent,\n  radio: AppRadioButtonComponent,\n  textarea: AppTextareaComponent,\n  checkbox: AppCheckboxComponent,\n  datepicker: AppDatepickerComponent,\n  'text-editor': AppTextEditorComponent,\n  'file-upload': AppFileUploadComponent,\n  'image-cropper': AppImageCropperComponent,\n}"
            },
            {
                "name": "CounterStore",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/counter.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "signalStore(\n  { providedIn: 'root' },\n  withState(state),\n  withComputed((state) => ({\n    doubleCount: computed(() => state.count() * 2),\n  })),\n  withMethods((store) => ({\n    increment() {\n      patchState(store, { count: store.count() + 1 });\n      persistService.commit(store, state);\n    },\n    decrement() {\n      patchState(store, { count: store.count() - 1 });\n      persistService.commit(store, state);\n    },\n  }))\n)"
            },
            {
                "name": "ELEMENT_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/documentation/pages/features/table/table.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "PeriodicElement[]",
                "defaultValue": "[\n  { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\n  { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\n  { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\n  { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\n  { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\n  { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\n  { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\n  { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\n  { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\n  { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\n  { position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na' },\n  { position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg' },\n  { position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al' },\n  { position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si' },\n  { position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P' },\n  { position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S' },\n  { position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl' },\n  { position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar' },\n  { position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K' },\n  { position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca' },\n]"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.development.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  stripe: STRIPE_CONFIG_DEVELOPMENT,\n  firebase: FIREBASE_CONFIG_DEVELOPMENT,\n  supabase: SUPABASE_CONFIG_DEVELOPMENT,\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.staging.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  stripe: STRIPE_CONFIG_STAGING,\n  firebase: FIREBASE_CONFIG_STAGING,\n  supabase: SUPABASE_CONFIG_STAGING,\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n  stripe: STRIPE_CONFIG,\n  firebase: FIREBASE_CONFIG,\n  supabase: SUPABASE_CONFIG,\n}"
            },
            {
                "name": "fieldWidth",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-form-generator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'calc(50% - 12px)'"
            },
            {
                "name": "filterListPagination",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/functions/pagination.function.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "<Data>(\n  list: Data[],\n  page: number,\n  pageSize: number\n) => {\n  return list.slice((page - 1) * pageSize, page * pageSize);\n}"
            },
            {
                "name": "FIREBASE_CONFIG",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/firebase/firebase.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  messagingSenderId: `335970945542`,\n  projectId: `angular-boilerplate-3ed98`,\n  apiKey: `AIzaSyA4B0hgx9-YXrsEonDXi_sk6NzKgibQ3NM`,\n  appId: `1:335970945542:web:6e319af6f596c1d4299187`,\n  storageBucket: `angular-boilerplate-3ed98.appspot.com`,\n  authDomain: `angular-boilerplate-3ed98.firebaseapp.com`,\n}"
            },
            {
                "name": "FIREBASE_CONFIG_DEVELOPMENT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/firebase/firebase.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "FIREBASE_CONFIG"
            },
            {
                "name": "FIREBASE_CONFIG_STAGING",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/firebase/firebase.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "FIREBASE_CONFIG"
            },
            {
                "name": "FIREBASE_STORAGE_ERROR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/firebase/@constans/firebase-error.constant.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  objectNotFound: {\n    key: 'storage/object-not-found',\n    message: `File doesn't exist`,\n  },\n  unauthorized: {\n    key: 'storage/unauthorized',\n    message: `User doesn't have permission to access the object`,\n  },\n  canceled: {\n    key: 'storage/canceled',\n    message: `User canceled the upload`,\n  },\n}"
            },
            {
                "name": "FIREBASE_STORAGE_ERROR_LIST",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/firebase/@constans/firebase-error.constant.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Object.entries(\n  FIREBASE_STORAGE_ERROR\n).map(([, value]) => value)"
            },
            {
                "name": "generateUUID",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/functions/uuid.function.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0;\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}"
            },
            {
                "name": "inMemoryScrollingFeature",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "InMemoryScrollingFeature",
                "defaultValue": "withInMemoryScrolling({\n    scrollPositionRestoration: 'top',\n    anchorScrolling: 'enabled',\n  })"
            },
            {
                "name": "LoadingStore",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/loading.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "signalStore(\n  { providedIn: 'root' },\n  withState(state),\n  withMethods((store) => ({\n    setState(show: boolean, message = '') {\n      patchState(store, { show, message });\n      persistService.commit(store, state);\n    },\n    setMessage(message = '') {\n      patchState(store, { message });\n      persistService.commit(store, state);\n    },\n  }))\n)"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/app-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AppTableComponent>",
                "defaultValue": "{\n  component: AppTableComponent,\n  tags: ['autodocs'],\n  title: 'Table',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: [\n        'actionColDef',\n        'defaultPagination',\n        'columnsDefs',\n        'dataSource',\n        'sort',\n        'paginator',\n        'ngOnInit',\n        'ngAfterViewInit',\n        'ngOnChanges',\n        'handlePageChange',\n        'handleSortChange',\n      ],\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [\n        MatSortModule,\n        MatTableModule,\n        MatPaginatorModule,\n        AppTableActionComponent,\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-checkbok.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AppCheckboxComponent>",
                "defaultValue": "{\n  component: AppCheckboxComponent,\n  tags: ['autodocs'],\n  title: 'Form/Checkbox',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps([\n        'appearance',\n        'placeholder',\n      ]),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-datepicker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AppDatepickerComponent>",
                "defaultValue": "{\n  component: AppDatepickerComponent,\n  tags: ['autodocs'],\n  title: 'Form/Datepicker',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps(['placeholder']),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-file-upload.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AppFileUploadComponent>",
                "defaultValue": "{\n  component: AppFileUploadComponent,\n  tags: ['autodocs'],\n  title: 'Form/File Upload',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps(['id', 'appearance']),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-form-generator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AppFormGeneratorComponent>",
                "defaultValue": "{\n  component: AppFormGeneratorComponent,\n  tags: ['autodocs'],\n  title: 'Form/Form Generator',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: [\n        'initForm',\n        'ngOnInit',\n        'formGroup',\n        'handleSubmit',\n        'defaultFieldWidth',\n        'dynamicColumClass',\n      ],\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [\n        NgStyle,\n        NgClass,\n        JsonPipe,\n        ReactiveFormsModule,\n        FieldGeneratorDirective,\n        ...storybookFormBase.commonImports,\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-image-cropper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AppImageCropperComponent>",
                "defaultValue": "{\n  component: AppImageCropperComponent,\n  tags: ['autodocs'],\n  title: 'Form/Image Cropper',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps(['id', 'appearance']),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AppInputComponent>",
                "defaultValue": "{\n  component: AppInputComponent,\n  tags: ['autodocs'],\n  title: 'Form/Input',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps([]),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-radio-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AppRadioButtonComponent>",
                "defaultValue": "{\n  component: AppRadioButtonComponent,\n  tags: ['autodocs'],\n  title: 'Form/Radio Button',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps([\n        'appearance',\n        'placeholder',\n      ]),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AppSelectComponent>",
                "defaultValue": "{\n  component: AppSelectComponent,\n  tags: ['autodocs'],\n  title: 'Form/Select',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps(['placeholder']),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AppSliderComponent>",
                "defaultValue": "{\n  component: AppSliderComponent,\n  tags: ['autodocs'],\n  title: 'Form/Slider',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps([\n        'appearance',\n        'placeholder',\n      ]),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-text-editor.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AppTextEditorComponent>",
                "defaultValue": "{\n  component: AppTextEditorComponent,\n  tags: ['autodocs'],\n  title: 'Form/Text Editor',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps([\n        'name',\n        'appearance',\n        'placeholder',\n        'configModel',\n      ]),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AppTextareaComponent>",
                "defaultValue": "{\n  component: AppTextareaComponent,\n  tags: ['autodocs'],\n  title: 'Form/Textarea',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps([]),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
            },
            {
                "name": "persistService",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/auth.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new PersistService('auth')"
            },
            {
                "name": "persistService",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/counter.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new PersistService('counter')"
            },
            {
                "name": "persistService",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/loading.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new PersistService('loading')"
            },
            {
                "name": "persistService",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/ui.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new PersistService('ui')"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
            },
            {
                "name": "ROUTER_STACK_ANIMATION",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/animations/router-stack.animation.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  transition('home => features', useAnimation(slideLeft)),\n  transition('features => home', useAnimation(slideRight)),\n]"
            },
            {
                "name": "slideLeft",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/animations/slide.animation.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AnimationReferenceMetadata",
                "defaultValue": "animation([\n  style({ position: 'relative' }),\n  query(':enter, :leave', [\n    style({\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      width: '100%',\n    }),\n  ]),\n  query(':enter', [style({ right: '-100%', opacity: 0 })]),\n  query(':leave', animateChild()),\n  group([\n    query(':leave', [\n      animate('1s ease-out', style({ right: '100%', opacity: 0 })),\n    ]),\n    query(':enter', [\n      animate('1s ease-out', style({ right: '0%', opacity: 1 })),\n    ]),\n  ]),\n  query(':enter', animateChild()),\n])"
            },
            {
                "name": "slideRight",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/animations/slide.animation.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AnimationReferenceMetadata",
                "defaultValue": "animation([\n  style({ position: 'relative' }),\n  query(':enter, :leave', [\n    style({\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n    }),\n  ]),\n  query(':enter', [style({ left: '-100%', opacity: 0 })]),\n  query(':leave', animateChild()),\n  group([\n    query(':leave', [\n      animate('1s ease-out', style({ left: '100%', opacity: 0 })),\n    ]),\n    query(':enter', [\n      animate('1s ease-out', style({ left: '0%', opacity: 1 })),\n    ]),\n  ]),\n  query(':enter', animateChild()),\n])"
            },
            {
                "name": "state",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/auth.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "persistService.initState({\n  stripeCustomerId: '',\n\n  supabaseToken: '',\n  supabaseRefreshToken: '',\n\n  firebaseToken: '',\n  firebaseRefreshToken: '',\n})"
            },
            {
                "name": "state",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/counter.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "persistService.initState({ count: 0 })"
            },
            {
                "name": "state",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/loading.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "persistService.initState({\n  show: false,\n  message: '',\n})"
            },
            {
                "name": "state",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/ui.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "persistService.initState({ theme: 'dark' })"
            },
            {
                "name": "storybookFormBase",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-checkbok.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new StorybookFormBase()"
            },
            {
                "name": "storybookFormBase",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-datepicker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new StorybookFormBase()"
            },
            {
                "name": "storybookFormBase",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-file-upload.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new StorybookFormBase()"
            },
            {
                "name": "storybookFormBase",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-form-generator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new StorybookFormBase()"
            },
            {
                "name": "storybookFormBase",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-image-cropper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new StorybookFormBase()"
            },
            {
                "name": "storybookFormBase",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new StorybookFormBase()"
            },
            {
                "name": "storybookFormBase",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-radio-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new StorybookFormBase()"
            },
            {
                "name": "storybookFormBase",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-select.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new StorybookFormBase()"
            },
            {
                "name": "storybookFormBase",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new StorybookFormBase()"
            },
            {
                "name": "storybookFormBase",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-text-editor.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new StorybookFormBase()"
            },
            {
                "name": "storybookFormBase",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/form/app-textarea.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new StorybookFormBase()"
            },
            {
                "name": "STRIPE_CONFIG",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/stripe/stripe.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  product_year: 'price_1OXPERBDrk57uViBHKYA3gFy',\n  product_month: 'price_1OXPERBDrk57uViB9Wd8hG81',\n  product_semester: 'price_1OXPERBDrk57uViBf7SVxNnC',\n  public_key: `pk_test_51OXNmdBDrk57uViBIqmAk3eZpTIDGckBdwCT4bqUJXdWDVMSSTwBJyIJFkiGcAhZQS8DCGrCBjYSASUjQhNfw45O00NprLrdEp`,\n  secret_key: `sk_test_51OXNmdBDrk57uViBEafsDuEr13I7IHbavmXPXRmIHBJCbTkA6Z50l9S9iefJtUE6m2DAlhCmCgNMLuo3QRiyU1Zj00hrGSJ9gG`,\n}"
            },
            {
                "name": "STRIPE_CONFIG_DEVELOPMENT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/stripe/stripe.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "STRIPE_CONFIG"
            },
            {
                "name": "STRIPE_CONFIG_STAGING",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/stripe/stripe.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "STRIPE_CONFIG"
            },
            {
                "name": "STRIPE_PRODUCTS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/stripe/@constants/stripe-product.constant.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  YEAR: { price: product_year, quantity: 1 },\n  MONTH: { price: product_month, quantity: 1 },\n  SEMESTER: { price: product_semester, quantity: 1 },\n}"
            },
            {
                "name": "SUPABASE_BUCKETS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/supabase/@constants/bucket.constant.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  default: 'unrestricted',\n}"
            },
            {
                "name": "SUPABASE_CONFIG",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/supabase/supabase.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  url: `https://lebfbpimmsiagzmzqdsq.supabase.co`,\n  key: `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxlYmZicGltbXNpYWd6bXpxZHNxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MDQ4MjUyMTgsImV4cCI6MjAyMDQwMTIxOH0.LOdHZ35WJ2643CqPBoOuf-UOGEVpi60VYHfEaLMzHYU`,\n}"
            },
            {
                "name": "SUPABASE_CONFIG_DEVELOPMENT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/supabase/supabase.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "SUPABASE_CONFIG"
            },
            {
                "name": "SUPABASE_CONFIG_STAGING",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/supabase/supabase.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "SUPABASE_CONFIG"
            },
            {
                "name": "THEME_CONFIG",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/config/theme.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ThemeConfigType",
                "defaultValue": "{\n  light: {\n    bgPrimary: '#f6f6f6',\n    bgSecondary: '#fff',\n    textPrimary: '#313131',\n  },\n  dark: {\n    bgPrimary: '#111418',\n    bgSecondary: '#0f1924',\n    textPrimary: '#fff',\n  },\n}"
            },
            {
                "name": "transitionFade",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/animations/slide.animation.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AnimationReferenceMetadata",
                "defaultValue": "animation([\n  style({ position: 'relative' }),\n  query(':enter, :leave', [\n    style({\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n    }),\n  ]),\n  query(':enter', [style({ bottom: '100%', opacity: 0 })]),\n  query(':leave', animateChild()),\n  group([\n    query(':leave', [\n      animate('1s ease-out', style({ bottom: '100%', opacity: 0 })),\n    ]),\n    query(':enter', [\n      animate('1s ease-out', style({ bottom: '0%', opacity: 1 })),\n    ]),\n  ]),\n  query(':enter', animateChild()),\n])"
            },
            {
                "name": "UiStore",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/ui.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "signalStore(\n  { providedIn: 'root' },\n  withState(state),\n  withMethods((store) => ({\n    setTheme(theme: ThemeType) {\n      patchState(store, { theme });\n      persistService.commit(store, state);\n    },\n  }))\n)"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/@core/stripe/@constants/stripe-product.constant.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "environment.stripe"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "DatePickerRangeValue",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/modules/@core/types/datepicker.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "FileUploadType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"*/*\" | \"image/*\" | \"audio/*\" | \"video/*\" | \"application/pdf\" | \".pdf,.doc\" | \"image/png\" | \"image/jpeg\" | \"audio/mpeg\" | \"audio/wav\" | \"video/mp4\"",
                "file": "src/app/modules/@core/types/file-upload.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "FormGeneratorFieldType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/modules/@core/components/_form-generator/field-generator.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 198
            },
            {
                "name": "HandlerCallbackPropsType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/modules/@core/components/_form-generator/field-generator.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 200
            },
            {
                "name": "InputType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"text\" | \"email\" | \"password\" | \"number\"",
                "file": "src/app/modules/@core/types/input.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "ListDocumentSnapshot",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "QuerySnapshot<DocumentData>",
                "file": "src/app/modules/@core/firebase/@types/firebase.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "ModelControlType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "DatePickerRangeValue | SliderRangeValue | boolean | string | number | object | File[] | File | Date | null",
                "file": "src/app/modules/@core/types/model-control.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "SingleDocumentSnapshot",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "DocumentSnapshot<DocumentData | DocumentData>",
                "file": "src/app/modules/@core/firebase/@types/firebase.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "SliderRangeValue",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/modules/@core/types/slider.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "ThemeConfigType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Record<ThemeType | IThemeConfig>",
                "file": "src/app/modules/@core/types/theme.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "ThemeType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"light\" | \"dark\"",
                "file": "src/app/modules/@core/types/theme.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/modules/@core/components/form/app-file-upload/app-file-upload.component.ts": [
                {
                    "name": "APP_FILE_UPLOAD_DEFAULT_VALUES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/components/form/app-file-upload/app-file-upload.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  maxFiles: 1,\n  fileTypes: ['*/*'],\n  limitErrorMessage: `File limit reached`,\n}"
                }
            ],
            "src/app/modules/@core/components/form/app-image-cropper/app-image-cropper.component.ts": [
                {
                    "name": "APP_IMAGE_CROPPER_DEFAULT_VALUES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/components/form/app-image-cropper/app-image-cropper.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  scale: 1,\n  imageURL: '',\n  height: '200px',\n  aspectRatio: 4 / 3,\n  background: 'black',\n  cropperMinWidth: 128,\n  buttonText: 'Select file',\n  rounded: false,\n  onlyScaleDown: true,\n  maintainAspectRatio: true,\n}"
                }
            ],
            "src/app/modules/@core/components/form/app-slider/app-slider.component.ts": [
                {
                    "name": "APP_SLIDER_UPLOAD_DEFAULT_VALUES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/components/form/app-slider/app-slider.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  min: 0,\n  max: 0,\n  step: 0,\n  range: false,\n  showTickMarks: false,\n}"
                }
            ],
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    provideAnimations(),\n    provideAnimationsAsync(),\n    StripeConnectorService,\n    SupabaseConnectorService,\n    FirebaseConnectorService,\n    provideRouter(routes, inMemoryScrollingFeature),\n    provideNgxStripe(environment.stripe.public_key),\n  ],\n}"
                },
                {
                    "name": "inMemoryScrollingFeature",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InMemoryScrollingFeature",
                    "defaultValue": "withInMemoryScrolling({\n    scrollPositionRestoration: 'top',\n    anchorScrolling: 'enabled',\n  })"
                }
            ],
            "src/app/modules/@core/components/form/index.ts": [
                {
                    "name": "AppFormComponents",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/components/form/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  AppInputComponent,\n  AppSliderComponent,\n  AppSelectComponent,\n  AppTextareaComponent,\n  AppCheckboxComponent,\n  AppFormImageComponent,\n  AppDatepickerComponent,\n  AppTextEditorComponent,\n  AppFileUploadComponent,\n  AppRadioButtonComponent,\n  AppImageCropperComponent,\n]"
                }
            ],
            "src/app/store/auth.store.ts": [
                {
                    "name": "AuthStore",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/auth.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "signalStore(\n  { providedIn: 'root' },\n  withState(state),\n  withMethods((store) => ({\n    setStripeCustomerId(stripeCustomerId: string) {\n      patchState(store, { stripeCustomerId });\n      persistService.commit(store, state);\n    },\n    setSupabaseToken(supabaseToken: string) {\n      patchState(store, { supabaseToken });\n      persistService.commit(store, state);\n    },\n    setSupabaseRefreshToken(supabaseRefreshToken: string) {\n      patchState(store, { supabaseRefreshToken });\n      persistService.commit(store, state);\n    },\n    setFirebaseToken(firebaseToken: string) {\n      patchState(store, { firebaseToken });\n      persistService.commit(store, state);\n    },\n    setFirebaseRefreshToken(firebaseRefreshToken: string) {\n      patchState(store, { firebaseRefreshToken });\n      persistService.commit(store, state);\n    },\n  }))\n)"
                },
                {
                    "name": "persistService",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/auth.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new PersistService('auth')"
                },
                {
                    "name": "state",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/auth.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "persistService.initState({\n  stripeCustomerId: '',\n\n  supabaseToken: '',\n  supabaseRefreshToken: '',\n\n  firebaseToken: '',\n  firebaseRefreshToken: '',\n})"
                }
            ],
            "src/stories/app-table.stories.ts": [
                {
                    "name": "component",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/app-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<AppTableComponent>",
                    "defaultValue": "{\n  args: {\n    actionMenuMode: true,\n    actions: [\n      {\n        title: 'Edit',\n        icon: 'iconamoon:edit-fill',\n        callback: (element, index) => alert(`Element clicked. Row ${index}`),\n      },\n    ],\n    columns: [\n      { def: 'firstCol', key: 'firstCol', label: 'First Col' },\n      { def: 'secondCol', key: 'secondCol', label: 'Second Col' },\n    ],\n    data: [\n      { firstCol: 'Content First 1', secondCol: 'Content Second 1' },\n      { firstCol: 'Content First 2', secondCol: 'Content Second 2' },\n    ],\n    pagination: {\n      pageSize: 5,\n      pageNumber: 1,\n      totalItems: 2,\n      pageSizeOptions: [5, 10, 15],\n    },\n  },\n  render: (args: AppTableComponent) => ({ props: args }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/app-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AppTableComponent>",
                    "defaultValue": "{\n  component: AppTableComponent,\n  tags: ['autodocs'],\n  title: 'Table',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: [\n        'actionColDef',\n        'defaultPagination',\n        'columnsDefs',\n        'dataSource',\n        'sort',\n        'paginator',\n        'ngOnInit',\n        'ngAfterViewInit',\n        'ngOnChanges',\n        'handlePageChange',\n        'handleSortChange',\n      ],\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [\n        MatSortModule,\n        MatTableModule,\n        MatPaginatorModule,\n        AppTableActionComponent,\n      ],\n    }),\n  ],\n}"
                }
            ],
            "src/stories/form/app-checkbok.stories.ts": [
                {
                    "name": "component",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-checkbok.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<AppCheckboxComponent>",
                    "defaultValue": "{\n  args: {\n    initialValue: true,\n    name: 'checkbox-example',\n    label: 'Checkbox example',\n  },\n  argTypes: { initialValue: { control: { type: 'boolean' } } },\n  render: (args: AppCheckboxComponent) => ({ props: args }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-checkbok.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AppCheckboxComponent>",
                    "defaultValue": "{\n  component: AppCheckboxComponent,\n  tags: ['autodocs'],\n  title: 'Form/Checkbox',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps([\n        'appearance',\n        'placeholder',\n      ]),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
                },
                {
                    "name": "storybookFormBase",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-checkbok.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new StorybookFormBase()"
                }
            ],
            "src/stories/form/app-datepicker.stories.ts": [
                {
                    "name": "component",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-datepicker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<AppDatepickerComponent>",
                    "defaultValue": "{\n  args: {\n    initialValue: new Date(),\n    name: 'datepicker-example',\n    label: 'datepicker example',\n  },\n  render: (args: AppDatepickerComponent) => ({ props: args }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-datepicker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AppDatepickerComponent>",
                    "defaultValue": "{\n  component: AppDatepickerComponent,\n  tags: ['autodocs'],\n  title: 'Form/Datepicker',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps(['placeholder']),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
                },
                {
                    "name": "storybookFormBase",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-datepicker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new StorybookFormBase()"
                }
            ],
            "src/stories/form/app-file-upload.stories.ts": [
                {
                    "name": "component",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-file-upload.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<AppFileUploadComponent>",
                    "defaultValue": "{\n  args: {\n    initialValue: [],\n    name: 'file-upload-example',\n    label: 'File Upload example',\n  },\n  render: (args: AppFileUploadComponent) => ({ props: args }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-file-upload.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AppFileUploadComponent>",
                    "defaultValue": "{\n  component: AppFileUploadComponent,\n  tags: ['autodocs'],\n  title: 'Form/File Upload',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps(['id', 'appearance']),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
                },
                {
                    "name": "storybookFormBase",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-file-upload.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new StorybookFormBase()"
                }
            ],
            "src/stories/form/app-form-generator.stories.ts": [
                {
                    "name": "component",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-form-generator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<AppFormGeneratorComponent>",
                    "defaultValue": "{\n  args: {\n    fields: [\n      [\n        {\n          type: 'input',\n          name: 'password',\n          initialValue: '',\n          label: 'Password',\n          width: fieldWidth,\n          validators: [Validators.required],\n          additional: { inputType: `password` },\n        },\n        {\n          name: 'email',\n          type: 'input',\n          label: 'email',\n          initialValue: '',\n          width: fieldWidth,\n          validators: [Validators.required],\n          additional: { inputType: `email` },\n        },\n      ],\n      [\n        {\n          width: fieldWidth,\n          name: 'name',\n          label: 'Name',\n          type: 'input',\n          initialValue: '',\n          validators: [Validators.required],\n        },\n        {\n          name: 'select',\n          type: 'select',\n          label: 'Select',\n          initialValue: 0,\n          width: fieldWidth,\n          validators: [Validators.required],\n          additional: { options: storybookFormBase.initialOptions },\n        },\n      ],\n      [\n        {\n          name: 'age',\n          label: 'Age',\n          type: 'input',\n          initialValue: 0,\n          width: fieldWidth,\n          additional: { inputType: `number` },\n        },\n        {\n          name: 'radio',\n          type: 'radio',\n          label: 'radio',\n          initialValue: 0,\n          width: fieldWidth,\n          validators: [Validators.required],\n          additional: { options: storybookFormBase.initialOptions },\n        },\n      ],\n      [\n        {\n          width: fieldWidth,\n          name: 'birthDate',\n          type: 'datepicker',\n          label: 'Birth date',\n          initialValue: new Date(),\n        },\n        {\n          name: 'rage',\n          label: 'Rage',\n          initialValue: '',\n          width: fieldWidth,\n          type: 'datepicker',\n          additional: { datepicker: { isDatepickerRange: true } },\n        },\n      ],\n      [\n        {\n          initialValue: '',\n          type: 'textarea',\n          name: 'description',\n          label: 'Description',\n        },\n      ],\n      [\n        {\n          name: 'isAdmin',\n          type: 'checkbox',\n          label: 'Is admin',\n          width: fieldWidth,\n          initialValue: false,\n          additional: { checkbox: { isToggle: true } },\n        },\n      ],\n    ],\n  },\n  render: (args: AppFormGeneratorComponent) => ({ props: args }),\n}"
                },
                {
                    "name": "fieldWidth",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-form-generator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'calc(50% - 12px)'"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-form-generator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AppFormGeneratorComponent>",
                    "defaultValue": "{\n  component: AppFormGeneratorComponent,\n  tags: ['autodocs'],\n  title: 'Form/Form Generator',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: [\n        'initForm',\n        'ngOnInit',\n        'formGroup',\n        'handleSubmit',\n        'defaultFieldWidth',\n        'dynamicColumClass',\n      ],\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [\n        NgStyle,\n        NgClass,\n        JsonPipe,\n        ReactiveFormsModule,\n        FieldGeneratorDirective,\n        ...storybookFormBase.commonImports,\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "storybookFormBase",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-form-generator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new StorybookFormBase()"
                }
            ],
            "src/stories/form/app-image-cropper.stories.ts": [
                {
                    "name": "component",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-image-cropper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<AppImageCropperComponent>",
                    "defaultValue": "{\n  args: {\n    initialValue: [],\n    name: 'file-upload-example',\n    label: 'File Upload example',\n  },\n  render: (args: AppImageCropperComponent) => ({ props: args }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-image-cropper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AppImageCropperComponent>",
                    "defaultValue": "{\n  component: AppImageCropperComponent,\n  tags: ['autodocs'],\n  title: 'Form/Image Cropper',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps(['id', 'appearance']),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
                },
                {
                    "name": "storybookFormBase",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-image-cropper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new StorybookFormBase()"
                }
            ],
            "src/stories/form/app-input.stories.ts": [
                {
                    "name": "component",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<AppInputComponent>",
                    "defaultValue": "{\n  args: {\n    initialValue: '',\n    name: 'input-example',\n    label: 'input example',\n    placeholder: 'input example placeholder',\n  },\n  render: (args: AppInputComponent) => ({ props: args }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AppInputComponent>",
                    "defaultValue": "{\n  component: AppInputComponent,\n  tags: ['autodocs'],\n  title: 'Form/Input',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps([]),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
                },
                {
                    "name": "storybookFormBase",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new StorybookFormBase()"
                }
            ],
            "src/stories/form/app-radio-button.stories.ts": [
                {
                    "name": "component",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-radio-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<AppRadioButtonComponent>",
                    "defaultValue": "{\n  args: {\n    initialValue: 1,\n    name: 'radio-button-example',\n    label: 'Radio button example',\n    items: storybookFormBase.initialOptions,\n  },\n  argTypes: { initialValue: { control: { type: 'number' } } },\n  render: (args: AppRadioButtonComponent) => ({ props: args }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-radio-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AppRadioButtonComponent>",
                    "defaultValue": "{\n  component: AppRadioButtonComponent,\n  tags: ['autodocs'],\n  title: 'Form/Radio Button',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps([\n        'appearance',\n        'placeholder',\n      ]),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
                },
                {
                    "name": "storybookFormBase",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-radio-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new StorybookFormBase()"
                }
            ],
            "src/stories/form/app-select.stories.ts": [
                {
                    "name": "component",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<AppSelectComponent>",
                    "defaultValue": "{\n  args: {\n    initialValue: 1,\n    name: 'select-example',\n    label: 'Select example',\n    items: storybookFormBase.initialOptions,\n  },\n  argTypes: { initialValue: { control: { type: 'number' } } },\n  render: (args: AppSelectComponent) => ({ props: args }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AppSelectComponent>",
                    "defaultValue": "{\n  component: AppSelectComponent,\n  tags: ['autodocs'],\n  title: 'Form/Select',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps(['placeholder']),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
                },
                {
                    "name": "storybookFormBase",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-select.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new StorybookFormBase()"
                }
            ],
            "src/stories/form/app-slider.stories.ts": [
                {
                    "name": "component",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<AppSliderComponent>",
                    "defaultValue": "{\n  args: {\n    min: 0,\n    max: 10,\n    step: 1,\n    range: false,\n    initialValue: 4,\n    name: 'slider-example',\n    label: 'Slider example',\n  },\n  render: (args: AppSliderComponent) => ({ props: args }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AppSliderComponent>",
                    "defaultValue": "{\n  component: AppSliderComponent,\n  tags: ['autodocs'],\n  title: 'Form/Slider',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps([\n        'appearance',\n        'placeholder',\n      ]),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
                },
                {
                    "name": "storybookFormBase",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new StorybookFormBase()"
                }
            ],
            "src/stories/form/app-text-editor.stories.ts": [
                {
                    "name": "component",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-text-editor.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<AppTextEditorComponent>",
                    "defaultValue": "{\n  args: {\n    initialValue: '',\n    name: 'text-editor-example',\n    label: 'Text editor example',\n  },\n  render: (args: AppTextEditorComponent) => ({ props: args }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-text-editor.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AppTextEditorComponent>",
                    "defaultValue": "{\n  component: AppTextEditorComponent,\n  tags: ['autodocs'],\n  title: 'Form/Text Editor',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps([\n        'name',\n        'appearance',\n        'placeholder',\n        'configModel',\n      ]),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
                },
                {
                    "name": "storybookFormBase",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-text-editor.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new StorybookFormBase()"
                }
            ],
            "src/stories/form/app-textarea.stories.ts": [
                {
                    "name": "component",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<AppTextareaComponent>",
                    "defaultValue": "{\n  args: {\n    initialValue: '',\n    name: 'textarea-example',\n    label: 'Textarea example',\n    placeholder: 'Textarea example placeholder',\n  },\n  render: (args: AppTextareaComponent) => ({ props: args }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AppTextareaComponent>",
                    "defaultValue": "{\n  component: AppTextareaComponent,\n  tags: ['autodocs'],\n  title: 'Form/Textarea',\n  parameters: {\n    layout: 'fullscreen',\n    controls: {\n      exclude: storybookFormBase.buildExcludeFormProps([]),\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      imports: [...storybookFormBase.commonImports],\n    }),\n  ],\n}"
                },
                {
                    "name": "storybookFormBase",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/form/app-textarea.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new StorybookFormBase()"
                }
            ],
            "src/app/modules/@core/components/_form-generator/field-generator.directive.ts": [
                {
                    "name": "components",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/components/_form-generator/field-generator.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  input: AppInputComponent,\n  select: AppSelectComponent,\n  slider: AppSliderComponent,\n  radio: AppRadioButtonComponent,\n  textarea: AppTextareaComponent,\n  checkbox: AppCheckboxComponent,\n  datepicker: AppDatepickerComponent,\n  'text-editor': AppTextEditorComponent,\n  'file-upload': AppFileUploadComponent,\n  'image-cropper': AppImageCropperComponent,\n}"
                }
            ],
            "src/app/store/counter.store.ts": [
                {
                    "name": "CounterStore",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/counter.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "signalStore(\n  { providedIn: 'root' },\n  withState(state),\n  withComputed((state) => ({\n    doubleCount: computed(() => state.count() * 2),\n  })),\n  withMethods((store) => ({\n    increment() {\n      patchState(store, { count: store.count() + 1 });\n      persistService.commit(store, state);\n    },\n    decrement() {\n      patchState(store, { count: store.count() - 1 });\n      persistService.commit(store, state);\n    },\n  }))\n)"
                },
                {
                    "name": "persistService",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/counter.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new PersistService('counter')"
                },
                {
                    "name": "state",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/counter.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "persistService.initState({ count: 0 })"
                }
            ],
            "src/app/modules/documentation/pages/features/table/table.component.ts": [
                {
                    "name": "ELEMENT_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/documentation/pages/features/table/table.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PeriodicElement[]",
                    "defaultValue": "[\n  { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\n  { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\n  { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\n  { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\n  { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\n  { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\n  { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\n  { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\n  { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\n  { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\n  { position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na' },\n  { position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg' },\n  { position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al' },\n  { position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si' },\n  { position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P' },\n  { position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S' },\n  { position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl' },\n  { position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar' },\n  { position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K' },\n  { position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca' },\n]"
                }
            ],
            "src/environments/environment.development.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.development.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  stripe: STRIPE_CONFIG_DEVELOPMENT,\n  firebase: FIREBASE_CONFIG_DEVELOPMENT,\n  supabase: SUPABASE_CONFIG_DEVELOPMENT,\n}"
                }
            ],
            "src/environments/environment.staging.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.staging.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  stripe: STRIPE_CONFIG_STAGING,\n  firebase: FIREBASE_CONFIG_STAGING,\n  supabase: SUPABASE_CONFIG_STAGING,\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n  stripe: STRIPE_CONFIG,\n  firebase: FIREBASE_CONFIG,\n  supabase: SUPABASE_CONFIG,\n}"
                }
            ],
            "src/app/modules/@core/functions/pagination.function.ts": [
                {
                    "name": "filterListPagination",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/functions/pagination.function.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "<Data>(\n  list: Data[],\n  page: number,\n  pageSize: number\n) => {\n  return list.slice((page - 1) * pageSize, page * pageSize);\n}"
                }
            ],
            "src/app/modules/@core/firebase/firebase.config.ts": [
                {
                    "name": "FIREBASE_CONFIG",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/firebase/firebase.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  messagingSenderId: `335970945542`,\n  projectId: `angular-boilerplate-3ed98`,\n  apiKey: `AIzaSyA4B0hgx9-YXrsEonDXi_sk6NzKgibQ3NM`,\n  appId: `1:335970945542:web:6e319af6f596c1d4299187`,\n  storageBucket: `angular-boilerplate-3ed98.appspot.com`,\n  authDomain: `angular-boilerplate-3ed98.firebaseapp.com`,\n}"
                },
                {
                    "name": "FIREBASE_CONFIG_DEVELOPMENT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/firebase/firebase.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "FIREBASE_CONFIG"
                },
                {
                    "name": "FIREBASE_CONFIG_STAGING",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/firebase/firebase.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "FIREBASE_CONFIG"
                }
            ],
            "src/app/modules/@core/firebase/@constans/firebase-error.constant.ts": [
                {
                    "name": "FIREBASE_STORAGE_ERROR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/firebase/@constans/firebase-error.constant.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  objectNotFound: {\n    key: 'storage/object-not-found',\n    message: `File doesn't exist`,\n  },\n  unauthorized: {\n    key: 'storage/unauthorized',\n    message: `User doesn't have permission to access the object`,\n  },\n  canceled: {\n    key: 'storage/canceled',\n    message: `User canceled the upload`,\n  },\n}"
                },
                {
                    "name": "FIREBASE_STORAGE_ERROR_LIST",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/firebase/@constans/firebase-error.constant.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Object.entries(\n  FIREBASE_STORAGE_ERROR\n).map(([, value]) => value)"
                }
            ],
            "src/app/modules/@core/functions/uuid.function.ts": [
                {
                    "name": "generateUUID",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/functions/uuid.function.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0;\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}"
                }
            ],
            "src/app/store/loading.store.ts": [
                {
                    "name": "LoadingStore",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/loading.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "signalStore(\n  { providedIn: 'root' },\n  withState(state),\n  withMethods((store) => ({\n    setState(show: boolean, message = '') {\n      patchState(store, { show, message });\n      persistService.commit(store, state);\n    },\n    setMessage(message = '') {\n      patchState(store, { message });\n      persistService.commit(store, state);\n    },\n  }))\n)"
                },
                {
                    "name": "persistService",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/loading.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new PersistService('loading')"
                },
                {
                    "name": "state",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/loading.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "persistService.initState({\n  show: false,\n  message: '',\n})"
                }
            ],
            "src/app/store/ui.store.ts": [
                {
                    "name": "persistService",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/ui.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new PersistService('ui')"
                },
                {
                    "name": "state",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/ui.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "persistService.initState({ theme: 'dark' })"
                },
                {
                    "name": "UiStore",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/ui.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "signalStore(\n  { providedIn: 'root' },\n  withState(state),\n  withMethods((store) => ({\n    setTheme(theme: ThemeType) {\n      patchState(store, { theme });\n      persistService.commit(store, state);\n    },\n  }))\n)"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
                }
            ],
            "src/app/modules/@core/animations/router-stack.animation.ts": [
                {
                    "name": "ROUTER_STACK_ANIMATION",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/animations/router-stack.animation.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  transition('home => features', useAnimation(slideLeft)),\n  transition('features => home', useAnimation(slideRight)),\n]"
                }
            ],
            "src/app/modules/@core/animations/slide.animation.ts": [
                {
                    "name": "slideLeft",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/animations/slide.animation.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AnimationReferenceMetadata",
                    "defaultValue": "animation([\n  style({ position: 'relative' }),\n  query(':enter, :leave', [\n    style({\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      width: '100%',\n    }),\n  ]),\n  query(':enter', [style({ right: '-100%', opacity: 0 })]),\n  query(':leave', animateChild()),\n  group([\n    query(':leave', [\n      animate('1s ease-out', style({ right: '100%', opacity: 0 })),\n    ]),\n    query(':enter', [\n      animate('1s ease-out', style({ right: '0%', opacity: 1 })),\n    ]),\n  ]),\n  query(':enter', animateChild()),\n])"
                },
                {
                    "name": "slideRight",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/animations/slide.animation.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AnimationReferenceMetadata",
                    "defaultValue": "animation([\n  style({ position: 'relative' }),\n  query(':enter, :leave', [\n    style({\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n    }),\n  ]),\n  query(':enter', [style({ left: '-100%', opacity: 0 })]),\n  query(':leave', animateChild()),\n  group([\n    query(':leave', [\n      animate('1s ease-out', style({ left: '100%', opacity: 0 })),\n    ]),\n    query(':enter', [\n      animate('1s ease-out', style({ left: '0%', opacity: 1 })),\n    ]),\n  ]),\n  query(':enter', animateChild()),\n])"
                },
                {
                    "name": "transitionFade",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/animations/slide.animation.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AnimationReferenceMetadata",
                    "defaultValue": "animation([\n  style({ position: 'relative' }),\n  query(':enter, :leave', [\n    style({\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n    }),\n  ]),\n  query(':enter', [style({ bottom: '100%', opacity: 0 })]),\n  query(':leave', animateChild()),\n  group([\n    query(':leave', [\n      animate('1s ease-out', style({ bottom: '100%', opacity: 0 })),\n    ]),\n    query(':enter', [\n      animate('1s ease-out', style({ bottom: '0%', opacity: 1 })),\n    ]),\n  ]),\n  query(':enter', animateChild()),\n])"
                }
            ],
            "src/app/modules/@core/stripe/stripe.config.ts": [
                {
                    "name": "STRIPE_CONFIG",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/stripe/stripe.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  product_year: 'price_1OXPERBDrk57uViBHKYA3gFy',\n  product_month: 'price_1OXPERBDrk57uViB9Wd8hG81',\n  product_semester: 'price_1OXPERBDrk57uViBf7SVxNnC',\n  public_key: `pk_test_51OXNmdBDrk57uViBIqmAk3eZpTIDGckBdwCT4bqUJXdWDVMSSTwBJyIJFkiGcAhZQS8DCGrCBjYSASUjQhNfw45O00NprLrdEp`,\n  secret_key: `sk_test_51OXNmdBDrk57uViBEafsDuEr13I7IHbavmXPXRmIHBJCbTkA6Z50l9S9iefJtUE6m2DAlhCmCgNMLuo3QRiyU1Zj00hrGSJ9gG`,\n}"
                },
                {
                    "name": "STRIPE_CONFIG_DEVELOPMENT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/stripe/stripe.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "STRIPE_CONFIG"
                },
                {
                    "name": "STRIPE_CONFIG_STAGING",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/stripe/stripe.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "STRIPE_CONFIG"
                }
            ],
            "src/app/modules/@core/stripe/@constants/stripe-product.constant.ts": [
                {
                    "name": "STRIPE_PRODUCTS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/stripe/@constants/stripe-product.constant.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  YEAR: { price: product_year, quantity: 1 },\n  MONTH: { price: product_month, quantity: 1 },\n  SEMESTER: { price: product_semester, quantity: 1 },\n}"
                },
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/stripe/@constants/stripe-product.constant.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "environment.stripe"
                }
            ],
            "src/app/modules/@core/supabase/@constants/bucket.constant.ts": [
                {
                    "name": "SUPABASE_BUCKETS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/supabase/@constants/bucket.constant.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  default: 'unrestricted',\n}"
                }
            ],
            "src/app/modules/@core/supabase/supabase.config.ts": [
                {
                    "name": "SUPABASE_CONFIG",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/supabase/supabase.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  url: `https://lebfbpimmsiagzmzqdsq.supabase.co`,\n  key: `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxlYmZicGltbXNpYWd6bXpxZHNxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MDQ4MjUyMTgsImV4cCI6MjAyMDQwMTIxOH0.LOdHZ35WJ2643CqPBoOuf-UOGEVpi60VYHfEaLMzHYU`,\n}"
                },
                {
                    "name": "SUPABASE_CONFIG_DEVELOPMENT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/supabase/supabase.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "SUPABASE_CONFIG"
                },
                {
                    "name": "SUPABASE_CONFIG_STAGING",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/supabase/supabase.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "SUPABASE_CONFIG"
                }
            ],
            "src/app/modules/@core/config/theme.config.ts": [
                {
                    "name": "THEME_CONFIG",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/@core/config/theme.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ThemeConfigType",
                    "defaultValue": "{\n  light: {\n    bgPrimary: '#f6f6f6',\n    bgSecondary: '#fff',\n    textPrimary: '#313131',\n  },\n  dark: {\n    bgPrimary: '#111418',\n    bgSecondary: '#0f1924',\n    textPrimary: '#fff',\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/modules/@core/types/datepicker.type.ts": [
                {
                    "name": "DatePickerRangeValue",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/modules/@core/types/datepicker.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/modules/@core/types/file-upload.type.ts": [
                {
                    "name": "FileUploadType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"*/*\" | \"image/*\" | \"audio/*\" | \"video/*\" | \"application/pdf\" | \".pdf,.doc\" | \"image/png\" | \"image/jpeg\" | \"audio/mpeg\" | \"audio/wav\" | \"video/mp4\"",
                    "file": "src/app/modules/@core/types/file-upload.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "src/app/modules/@core/components/_form-generator/field-generator.directive.ts": [
                {
                    "name": "FormGeneratorFieldType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/modules/@core/components/_form-generator/field-generator.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 198
                },
                {
                    "name": "HandlerCallbackPropsType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/modules/@core/components/_form-generator/field-generator.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 200
                }
            ],
            "src/app/modules/@core/types/input.type.ts": [
                {
                    "name": "InputType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"text\" | \"email\" | \"password\" | \"number\"",
                    "file": "src/app/modules/@core/types/input.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "src/app/modules/@core/firebase/@types/firebase.type.ts": [
                {
                    "name": "ListDocumentSnapshot",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "QuerySnapshot<DocumentData>",
                    "file": "src/app/modules/@core/firebase/@types/firebase.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "SingleDocumentSnapshot",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "DocumentSnapshot<DocumentData | DocumentData>",
                    "file": "src/app/modules/@core/firebase/@types/firebase.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/modules/@core/types/model-control.type.ts": [
                {
                    "name": "ModelControlType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "DatePickerRangeValue | SliderRangeValue | boolean | string | number | object | File[] | File | Date | null",
                    "file": "src/app/modules/@core/types/model-control.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "src/app/modules/@core/types/slider.type.ts": [
                {
                    "name": "SliderRangeValue",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/modules/@core/types/slider.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/modules/@core/types/theme.type.ts": [
                {
                    "name": "ThemeConfigType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Record<ThemeType | IThemeConfig>",
                    "file": "src/app/modules/@core/types/theme.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "ThemeType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"light\" | \"dark\"",
                    "file": "src/app/modules/@core/types/theme.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "inMemoryScrollingFeature",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/animations/router-stack.animation.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ROUTER_STACK_ANIMATION",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/animations/slide.animation.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "slideLeft",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/animations/slide.animation.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "slideRight",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/animations/slide.animation.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "transitionFade",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/_form-generator/app-form-generator.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICheckboxAdditional",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/_form-generator/app-form-generator.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IDatePickerAdditional",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/_form-generator/app-form-generator.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IFileUploadAdditional",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/_form-generator/app-form-generator.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IFormGeneratorField",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/_form-generator/app-form-generator.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IFormGeneratorFieldAdditional",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/_form-generator/app-form-generator.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IImageCropperAdditional",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/_form-generator/app-form-generator.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ISliderAdditional",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/_form-generator/app-form-generator.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ITextEditorAdditional",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/_form-generator/app-form-generator/app-form-generator.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppFormGeneratorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/_form-generator/field-generator.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "FieldGeneratorDirective",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/_form-generator/field-generator.directive.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "components",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/_form-generator/form-generator.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FormGeneratorService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/app-loading/app-loading.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppLoadingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/app-table/app-table-action/app-table-action.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppTableActionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/app-table/app-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/app-theme-selection/app-theme-selection.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppThemeSelectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/form/app-checkbox/app-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/26",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/form/app-datepicker/app-datepicker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppDatepickerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/29",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/form/app-file-upload/app-file-upload.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppFileUploadComponent",
                "coveragePercent": 0,
                "coverageCount": "0/38",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/form/app-file-upload/app-file-upload.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "APP_FILE_UPLOAD_DEFAULT_VALUES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/form/app-form-image/app-form-image.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppFormImageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/form/app-image-cropper/app-image-cropper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppImageCropperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/58",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/form/app-image-cropper/app-image-cropper.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "APP_IMAGE_CROPPER_DEFAULT_VALUES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/form/app-input/app-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/form/app-radio-button/app-radio-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppRadioButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/form/app-select/app-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/form/app-slider/app-slider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppSliderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/35",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/form/app-slider/app-slider.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "APP_SLIDER_UPLOAD_DEFAULT_VALUES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/form/app-text-editor/app-text-editor.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppTextEditorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/26",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/form/app-textarea/app-textarea.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppTextareaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/form/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AppFormComponents",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/components/form/model-control.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModelControl",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/config/theme.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "THEME_CONFIG",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/directives/animate.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "AnimateDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/firebase/@constans/firebase-error.constant.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FIREBASE_STORAGE_ERROR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/firebase/@constans/firebase-error.constant.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FIREBASE_STORAGE_ERROR_LIST",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/firebase/@interfaces/firebase-authentication.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IFirebaseAuthenticationCredentials",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/firebase/@interfaces/firebase-authentication.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IFirebaseAuthenticationSignUp",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/firebase/firebase-authentication.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FirebaseAuthenticationService",
                "coveragePercent": 0,
                "coverageCount": "0/26",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/firebase/firebase-collection.base.ts",
                "type": "class",
                "linktype": "classe",
                "name": "FirebaseCollectionBase",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/firebase/firebase-collection.helper.ts",
                "type": "class",
                "linktype": "classe",
                "name": "FirebaseCollectionHelper",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/firebase/firebase-connector.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FirebaseConnectorService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/firebase/firebase-storage.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FirebaseStorageService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/firebase/firebase.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FIREBASE_CONFIG",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/firebase/firebase.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FIREBASE_CONFIG_DEVELOPMENT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/firebase/firebase.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FIREBASE_CONFIG_STAGING",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/functions/pagination.function.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "filterListPagination",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/functions/uuid.function.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "generateUUID",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/interfaces/app-form.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IFormOption",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/interfaces/app-pagination.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IPagination",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/interfaces/app-table.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ITableCell",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/interfaces/app-table.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ITableCellAction",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/interfaces/theme.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IThemeConfig",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/services/alert.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AlertService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/services/clipboard.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ClipboardService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/services/seo.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SEOService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/services/theme.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ThemeService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/stripe/@constants/stripe-product.constant.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "STRIPE_PRODUCTS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/stripe/@constants/stripe-product.constant.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/stripe/@interfaces/stripe.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IStripeCustmerCreate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/stripe/@interfaces/stripe.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IStripeCustomer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/stripe/@interfaces/stripe.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IStripeCustomerCreateResponse",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/stripe/@interfaces/stripe.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IStripeCustomerSubscriptionItem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/stripe/@interfaces/stripe.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IStripeCutomerSubscriptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/stripe/@interfaces/stripe.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IStripeProductLineItem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/stripe/stripe-customer.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "StripeCustomerService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/stripe/stripe.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "STRIPE_CONFIG",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/stripe/stripe.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "STRIPE_CONFIG_DEVELOPMENT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/stripe/stripe.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "STRIPE_CONFIG_STAGING",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/stripe/stripe.connector.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "StripeConnectorService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/stripe/stripe.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "StripeService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/supabase/@constants/bucket.constant.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SUPABASE_BUCKETS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/supabase/@interfaces/supabase-bucket.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ISupabaseBucketCreateOptions",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/supabase/@interfaces/supabase-storage.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ISupabaseStorageFile",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/supabase/@interfaces/supabase-storage.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ISupabaseStorageFileMetadata",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/supabase/@interfaces/supabase-storage.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ISupabaseStorageSeachOptions",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/supabase/@interfaces/supabase-storage.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ISupabaseStorageUploadOptions",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/supabase/@interfaces/supabase-storage.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ISupabaseStorageUploadResponse",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/supabase/@interfaces/supabase-storage.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SupabaseStorageSeachSortBy",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/supabase/supabase-authentication.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SupabaseAuthenticationService",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/supabase/supabase-bucket.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SupabaseBucketService",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/supabase/supabase-client.base.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SupabaseClientBase",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/supabase/supabase-connector.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SupabaseConnectorService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/supabase/supabase-storage.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SupabaseStorageService",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/supabase/supabase.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SUPABASE_CONFIG",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/supabase/supabase.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SUPABASE_CONFIG_DEVELOPMENT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/supabase/supabase.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SUPABASE_CONFIG_STAGING",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/@core/util/download.util.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DownloadUtil",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/documentation/components/page-nav/page-nav.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageNavComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/documentation/components/side-menu/side-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SideMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/documentation/components/sign-in/sign-in.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignInComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/documentation/components/sign-up/sign-up.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignUpComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/documentation/components/terminal-window/terminal-window.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TerminalWindowComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/documentation/interfaces/doc-authentication.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IDocAuthenticationCredentials",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/documentation/interfaces/doc-authentication.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IDocAuthenticationSignUp",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/documentation/interfaces/doc-document-database.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IDocDocumentDatabase",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/documentation/pages/features/features.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FeaturesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/documentation/pages/features/firebase-authentication/firebase-authentication.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FirebaseAuthenticationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/documentation/pages/features/firebase-firestorage/firebase-firestorage.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FirebaseFirestorageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/documentation/pages/features/firebase-firestore/firebase-firestore.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FirebaseFirestoreComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/documentation/pages/features/form-controls/form-controls.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormControlsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/documentation/pages/features/form-generator/form-generator.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormGeneratorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/documentation/pages/features/form-generator/form-generator.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IFormGeneratorExample",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/documentation/pages/features/store/store.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StoreComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/documentation/pages/features/stripe/stripe.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StripeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/documentation/pages/features/supabase-authentication/supabase-authentication.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SupabaseAuthenticationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/documentation/pages/features/supabase-storage/supabase-storage.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SupabaseStorageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/documentation/pages/features/supabase-table/supabase-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SupabaseTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/documentation/pages/features/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/documentation/pages/features/table/table.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PeriodicElement",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/documentation/pages/features/table/table.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ELEMENT_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/documentation/pages/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/documentation/services/firebase-example.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FirebaseExampleService",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/documentation/services/supabase-example.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SupabaseExampleService",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/store/@persist/_local.storage.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LocalStorageService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/@persist/_session.storage.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SessionStorageService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/@persist/persist.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "PersistService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/store/auth.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AuthStore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/auth.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "persistService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/auth.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "state",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/counter.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CounterStore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/counter.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "persistService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/counter.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "state",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/loading.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoadingStore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/loading.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "persistService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/loading.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "state",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/ui.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "persistService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/ui.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "state",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/ui.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UiStore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.development.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.staging.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/app-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/app-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/_base.form.ts",
                "type": "class",
                "linktype": "classe",
                "name": "StorybookFormBase",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-checkbok.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-checkbok.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-checkbok.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "storybookFormBase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-datepicker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-datepicker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-datepicker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "storybookFormBase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-file-upload.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-file-upload.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-file-upload.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "storybookFormBase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-form-generator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-form-generator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fieldWidth",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-form-generator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-form-generator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "storybookFormBase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-image-cropper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-image-cropper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-image-cropper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "storybookFormBase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "storybookFormBase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-radio-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-radio-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-radio-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "storybookFormBase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-select.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "storybookFormBase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-slider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-slider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-slider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "storybookFormBase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-text-editor.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-text-editor.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-text-editor.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "storybookFormBase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/form/app-textarea.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "storybookFormBase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}